(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    976187,      18834]
NotebookOptionsPosition[    971549,      18744]
NotebookOutlinePosition[    971956,      18760]
CellTagsIndexPosition[    971913,      18757]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["LeNet and  MNIST  data", "Section",
 CellChangeTimes->{{3.922514131528205*^9, 
  3.9225141682423143`*^9}},ExpressionUUID->"c32b56a5-33d5-41ff-9463-\
327af6f35f1d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mnistTrain", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"\"\<MNIST\>\"", ",", "\"\<TrainingData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mnistTest", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"\"\<MNIST\>\"", ",", "\"\<TestData\>\""}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.919490300808105*^9, 3.919490307097491*^9}, {
  3.919491227942252*^9, 3.91949122865352*^9}},
 CellLabel->"In[1]:=",
 CellID->1037921592,ExpressionUUID->"4ad2833c-186e-4190-8cd7-5d795319fac9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceSearch", "[", "\"\<mnist\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.919491230338275*^9, 3.9194912303408747`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"690d01b3-9154-40c6-ba48-8177511cba85"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Name" -> "LeNet Trained on MNIST Data", "ResourceType" -> "NeuralNet",
         "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "LeNet Trained on MNIST Data", "UUID" -> 
           "050b1a0a-f43a-4c28-b7e0-72607a918467", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.16.0", "Description" -> 
           "Identify the handwritten digit in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "WolframLanguageVersionRequired" -> "11.1", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}|>], "Description" -> 
        "Identify the handwritten digit in an image", "Location" -> "Local", 
        "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
050b1a0a-f43a-4c28-b7e0-72607a918467"]|>, <|
       "Name" -> "CapsNet Trained on MNIST Data", "ResourceType" -> 
        "NeuralNet", "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "CapsNet Trained on MNIST Data", "UUID" -> 
           "ebc8a2f1-bb8b-46de-9c35-2b7083e27916", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.30.0", "Description" -> 
           "Identify the handwritten digit in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "WolframLanguageVersionRequired" -> "11.3", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", "TrainingNet", 
             "EvaluationExample"}|>], "Description" -> 
        "Identify the handwritten digit in an image", "Location" -> "Local", 
        "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
ebc8a2f1-bb8b-46de-9c35-2b7083e27916"]|>, <|
       "Name" -> "FashionMNIST", "ResourceType" -> "DataResource", 
        "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "FashionMNIST", "UUID" -> 
           "1997d21c-958a-4f85-9927-9dae22759bf5", "ResourceType" -> 
           "DataResource", "Version" -> "1.0.0", "Description" -> 
           "A small MNIST-like fashion product image dataset", 
           "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "WolframLanguageVersionRequired" -> "10.0", "ContentSize" -> 
           Quantity[70.56008, "Megabytes"], 
           "ContentElements" -> {
            "ClassLabels", "TestData", "TestDataset", "TrainingData", 
             "TrainingDataset"}|>], "Description" -> 
        "A small MNIST-like fashion product image dataset", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/1997d21c-958a-4f85-9927-9dae22759bf5"]|>, <|
       "Name" -> "MNIST", "ResourceType" -> "DataResource", "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "MNIST", "UUID" -> "16ff8400-2ffb-4642-b626-8e583258924e",
            "ResourceType" -> "DataResource", "Version" -> "1.0.0", 
           "Description" -> 
           "Database of handwritten digits commonly used for training image \
processing systems", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "ContentSize" -> Quantity[70.08008, "Megabytes"], 
           "ContentElements" -> {
            "TestData", "TestDataset", "TrainingData", "TrainingDataset"}|>], 
        "Description" -> 
        "Database of handwritten digits commonly used for training image \
processing systems", "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/16ff8400-2ffb-4642-b626-8e583258924e"]|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
        1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
        1, {All, "Description"} -> 1, {All, "Location"} -> 
        1, {All, "DocumentationLink"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[324.8], "ResourceType" -> 
            TypeSystem`PackageScope`AtomShape[126.], "ResourceObject" -> 
            TypeSystem`PackageScope`AtomShape[60], "Description" -> 
            TypeSystem`PackageScope`AtomShape[560.], "Location" -> 
            TypeSystem`PackageScope`UnknownShape[False], "DocumentationLink" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["DataResource", "NeuralNet"]], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], TypeSystem`AnyType, 
         TypeSystem`Atom[URL]}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
        1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
        1, {All, "Description"} -> 1, {All, "Location"} -> 
        1, {All, "DocumentationLink"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[324.8], "ResourceType" -> 
            TypeSystem`PackageScope`AtomShape[126.], "ResourceObject" -> 
            TypeSystem`PackageScope`AtomShape[60], "Description" -> 
            TypeSystem`PackageScope`AtomShape[560.], "Location" -> 
            TypeSystem`PackageScope`UnknownShape[False], "DocumentationLink" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["DataResource", "NeuralNet"]], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], TypeSystem`AnyType, 
         TypeSystem`Atom[URL]}], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 6, "DataRowCount" -> 4, "DataColumnCount" -> 6,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceType", 
                  Style[
                  "ResourceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ResourceType"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceObject", 
                  Style[
                  "ResourceObject", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ResourceObject"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceObject"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Description", 
                  Style[
                  "Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Description"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Description"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Location", 
                  Style[
                  "Location", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Location"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Location"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DocumentationLink", 
                  Style[
                  "DocumentationLink", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DocumentationLink"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DocumentationLink"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["LeNet Trained on MNIST Data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NeuralNet", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{126., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"LeNet Trained on MNIST Data\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Identify the handwritten digit in an image", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/NeuralNetReposi...", 
                URL[
                "https://resources.wolframcloud.com/NeuralNetRepository/\
resources/050b1a0a-f43a-4c28-b7e0-72607a918467"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CapsNet Trained on MNIST Data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NeuralNet", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{126., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"CapsNet Trained on MNIST Data\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Identify the handwritten digit in an image", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/NeuralNetReposi...", 
                URL[
                "https://resources.wolframcloud.com/NeuralNetRepository/\
resources/ebc8a2f1-bb8b-46de-9c35-2b7083e27916"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["FashionMNIST", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{126., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"FashionMNIST\"", "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A small MNIST-like fashion product image dataset", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.wolframcloud.com/obj/resourcesystem/pu...", 
                URL[
                "https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/1997d21c-958a-4f85-9927-9dae22759bf5"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["MNIST", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{126., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", "\"MNIST\"", 
                  "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Database of handwritten digits commonly used for training \
image processing systems", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.wolframcloud.com/obj/resourcesystem/pu...", 
                URL[
                "https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/16ff8400-2ffb-4642-b626-8e583258924e"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1916.8, {75.6875, 81.3125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1916.8, {75.6875, 81.3125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.92251417697138*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"c02c1a73-c4fe-4014-a8a3-0c9c64796551"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenetModel", "=", 
  RowBox[{
  "NetModel", "[", "\"\<LeNet Trained on MNIST Data\>\"", "]"}]}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"0c6284d8-a82d-4cef-8916-ec6c30b7b1a9"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"image\"", "SummaryItem"], "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"class\"", "SummaryItem"], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{20, 1, 5, 
                    5}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{20}]|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {24, 24}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Pooling", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 20, 
                    "$InputSize" -> {24, 24}, "$OutputSize" -> {12, 12}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> False,
                     "$InputType" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`AtomT], 
                    "$OutputType" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`AtomT]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{50, 20, 5,
                     5}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 20, "ChannelGroups" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 20|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Pooling", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 50, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {4, 4}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> False,
                     "$InputType" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`AtomT], 
                    "$OutputType" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`AtomT]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Flatten", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> DirectedInfinity[1]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{500, 
                    800}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{500}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 800, "$InputDimensions" -> {800}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{10, 500}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{10}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ImageSize" -> 
                    NeuralNetworks`ValidatedParameter[{28, 28}], "ColorSpace" -> 
                    "Grayscale", "ColorChannels" -> 1, "MeanImage" -> None, 
                    "$Version" -> "14.0.2", "VarianceImage" -> None, 
                    "Interleaving" -> False, "DataTransposed" -> False, 
                    "Alignment" -> Center, "Padding" -> GrayLevel[0], 
                    "Resampling" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Method" -> 
                    "Stretch"|>|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> 
                    Tooltip[{0, 1, 
                    Skeleton[7], 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}], 
                    "Dimensions" -> 10, "$Version" -> "14.0.2", "InputDepth" -> 
                    1, "$Rank" -> 0, "Multilabel" -> False|>|>|>, 
                    NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", Annotation[#, {"Inputs", "Input"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 20\[Times]24\[Times]24\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 20\[Times]24\[Times]24\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 20\[Times]12\[Times]12\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50\[Times]8\[Times]8\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50\[Times]8\[Times]8\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50\[Times]4\[Times]4\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 800\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", Annotation[#, {"Outputs", "Output"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetChain, 1778216, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetChain, 1778216, 
            8009056468866366130500743834569920872865964231918951388752, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<11>]"& )],
  False,
  BoxID -> 8009056468866366130500743834569920872865964231918951388752,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.915028292575202*^9, 3.919490016738872*^9, 
  3.919493639766541*^9, 3.9198540673386927`*^9, 3.919855630791611*^9, 
  3.9225141791755342`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"a60447e5-1f60-4553-beb2-0e27343e6bd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "lenetModel", "]"}]], "Input",
 CellChangeTimes->{{3.919491366177734*^9, 3.919491384302302*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"04fc85ce-a03b-45cf-a786-f74cbe8a2942"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    TagBox[GridBox[{
       {
        ItemBox[
         PaneBox[
          StyleBox[
           TagBox[
            TooltipBox[
             StyleBox["\<\" Net Information\"\>", "InformationRowLabel",
              StripOnInput->False],
             "\"NetInformation\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "NetInformation", "Tooltip"]& ], 
           "InformationTitleText",
           StripOnInput->False],
          FrameMargins->{{4, 0}, {-1, 1}}],
         BaseStyle->"InformationTitleBackground",
         StripOnInput->False]},
       {
        PaneBox[GridBox[{
           {
            
            DynamicModuleBox[{System`InformationDump`open$$ = {
             False, False, False, False, False, False, False, False}}, 
             StyleBox[GridBox[{
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Layers Count\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"LayersCount\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "LayersCount", "Tooltip"]& ], "11"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Arrays Count\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"ArraysCount\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ArraysCount", "Tooltip"]& ], "8"},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Shared Arrays Count\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"SharedArraysCount\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "SharedArraysCount", "Tooltip"]& ], "0"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Input Port Names\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"InputPortNames\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "InputPortNames", "Tooltip"]& ], 
                 RowBox[{"{", "\<\"Input\"\>", "}"}]},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Output Port Names\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"OutputPortNames\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "OutputPortNames", "Tooltip"]& ], 
                 RowBox[{"{", "\<\"Output\"\>", "}"}]},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Arrays Total Element Count\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"ArraysTotalElementCount\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ArraysTotalElementCount", "Tooltip"]& ], 
                 "431080"},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Arrays Total Size\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"ArraysTotalSize\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ArraysTotalSize", "Tooltip"]& ], 
                 
                 TemplateBox[{
                  "1.7243199999999999`", "\"MB\"", "megabytes", 
                   "\"Megabytes\""},
                  "Quantity"]}
               },
               AutoDelete->False,
               GridBoxAlignment->{"Columns" -> {Right, Left}},
               GridBoxDividers->None,
               GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}], "DialogStyle",
              StripOnInput->False],
             DynamicModuleValues:>{}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[3.6]}, 
              Offset[0.2]}}],
         FrameMargins->6]}
      },
      DefaultBaseStyle->"Column",
      FrameStyle->Directive[
        GrayLevel[0.8], 
        Thickness[Tiny]],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxDividers->{
       "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "LayersCount" -> 11, "ArraysCount" -> 8, "SharedArraysCount" -> 0, 
    "InputPortNames" -> {"Input"}, "OutputPortNames" -> {"Output"}, 
    "ArraysTotalElementCount" -> 431080, "ArraysTotalSize" -> 
    Quantity[1.7243199999999999`, "Megabytes"], "ObjectType" -> 
    "NetInformation"|>, True]]], "Output",
 CellChangeTimes->{{3.9194913693265142`*^9, 3.919491384639432*^9}, 
   3.91949364102873*^9, 3.91985406937831*^9, 3.919855631609234*^9, 
   3.922514179472866*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"e3b8a60b-39f7-4ece-9354-b7864400683f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"lenetModel", ",", "\"\<SummaryGraphic\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.919855542246553*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"c36b7af2-d6b2-4e4e-bea9-ef8c2de5fc31"],

Cell[BoxData[
 GraphicsBox[{{
    StyleBox[{
      InsetBox["\<\"Input\"\>", 
       Offset[{0, -7}, {-11.999999999999996, 3.2153876434941414*^-7}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"1\"\>", NCache[
       Offset[{0, Rational[-27, 2]}, {-10.999999999999996`, 
         2.9474386732029625`*^-7}], 
        Offset[{0, -13.5}, {-10.999999999999996`, 2.9474386732029625`*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"2\"\>", NCache[
       Offset[{0, Rational[-27, 2]}, {-9.999999999999996, 
         2.679489702911784*^-7}], 
        Offset[{0, -13.5}, {-9.999999999999996, 2.679489702911784*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"10\"\>", NCache[
       Offset[{0, Rational[-27, 2]}, {-1.9999999999999993`, 
         5.3589794058235685`*^-8}], 
        Offset[{0, -13.5}, {-1.9999999999999993`, 5.3589794058235685`*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"11\"\>", NCache[
       Offset[{0, Rational[-27, 2]}, {-0.9999999999999997, 
         2.6794897029117842`*^-8}], 
        Offset[{0, -13.5}, {-0.9999999999999997, 2.6794897029117842`*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"Output\"\>", Offset[{0, -7}, {0., 0.}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"3\"\>", NCache[
       Offset[{0, Rational[-27, 2]}, {-8.999999999999996, 
         2.411540732620606*^-7}], 
        Offset[{0, -13.5}, {-8.999999999999996, 2.411540732620606*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"4\"\>", NCache[
       Offset[{0, Rational[-27, 2]}, {-7.999999999999997, 
         2.1435917623294274`*^-7}], 
        Offset[{0, -13.5}, {-7.999999999999997, 2.1435917623294274`*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"5\"\>", NCache[
       Offset[{0, Rational[-27, 2]}, {-6.999999999999997, 
         1.875642792038249*^-7}], 
        Offset[{0, -13.5}, {-6.999999999999997, 1.875642792038249*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"6\"\>", NCache[
       Offset[{0, Rational[-27, 2]}, {-5.999999999999998, 
         1.6076938217470707`*^-7}], 
        Offset[{0, -13.5}, {-5.999999999999998, 1.6076938217470707`*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"7\"\>", NCache[
       Offset[{0, Rational[-27, 2]}, {-4.999999999999998, 
         1.339744851455892*^-7}], 
        Offset[{0, -13.5}, {-4.999999999999998, 1.339744851455892*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"8\"\>", NCache[
       Offset[{0, Rational[-27, 2]}, {-3.9999999999999987`, 
         1.0717958811647137`*^-7}], 
        Offset[{0, -13.5}, {-3.9999999999999987`, 1.0717958811647137`*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"9\"\>", NCache[
       Offset[{0, Rational[-27, 2]}, {-2.999999999999999, 
         8.038469108735353*^-8}], 
        Offset[{0, -13.5}, {-2.999999999999999, 8.038469108735353*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}]},
     StripOnInput->False,
     FontColor->GrayLevel[0.5]], 
    StyleBox[{InsetBox[
       TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""},
        "RowWithSeparators"], 
       Offset[{1.473719336601483*^-7, 5.499999999999997}, \
{-11.449999999999996, 3.0680157098339927*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999996, -2.6794897029117876`*^-8}], InsetBox[
       TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""},
        
        "RowWithSeparators"], 
       Offset[{1.4737193366014802*^-7, 5.499999999999997}, \
{-10.449999999999996, 2.8000667395428143*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999996, -2.6794897029117823`*^-8}], 
      InsetBox["\<\"10\"\>", 
       Offset[{1.4737193366014812*^-7, 5.499999999999998}, \
{-1.4499999999999993, 3.885260069222087*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999997, -2.6794897029117842`*^-8}], 
      InsetBox["\<\"10\"\>", 
       Offset[{1.4737193366014812*^-7, 5.499999999999998}, \
{-0.4499999999999998, 1.2057703663103027*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999997, -2.6794897029117842`*^-8}], InsetBox[
       TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""},
        
        "RowWithSeparators"], 
       Offset[{1.4737193366014802*^-7, 5.499999999999997}, \
{-9.449999999999996, 2.532117769251636*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999996, -2.6794897029117823`*^-8}], InsetBox[
       TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", "\"12\"", "\"12\""},
        
        "RowWithSeparators"], 
       Offset[{1.4737193366014818*^-7, 5.499999999999999}, \
{-8.449999999999996, 2.2641687989604576*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999998, -2.6794897029117852`*^-8}], InsetBox[
       TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""},
        "RowWithSeparators"], 
       Offset[{1.4737193366014802*^-7, 5.499999999999997}, \
{-7.4499999999999975, 1.9962198286692792*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999996, -2.6794897029117823`*^-8}], InsetBox[
       TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""},
        "RowWithSeparators"], 
       Offset[{1.4737193366014818*^-7, 5.499999999999999}, \
{-6.4499999999999975, 1.728270858378101*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999998, -2.6794897029117852`*^-8}], InsetBox[
       TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", "\"4\"", "\"4\""},
        "RowWithSeparators"], 
       Offset[{1.4737193366014818*^-7, 5.499999999999997}, \
{-5.4499999999999975, 1.4603218880869225*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999996, -2.679489702911785*^-8}], 
      InsetBox["\<\"800\"\>", 
       Offset[{1.4737193366014812*^-7, 5.499999999999999}, \
{-4.449999999999998, 1.192372917795744*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999998, -2.6794897029117842`*^-8}], 
      InsetBox["\<\"500\"\>", 
       Offset[{1.4737193366014812*^-7, 5.499999999999999}, \
{-3.449999999999999, 9.244239475045655*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999998, -2.6794897029117842`*^-8}], 
      InsetBox["\<\"500\"\>", 
       Offset[{1.4737193366014812*^-7, 5.499999999999997}, \
{-2.4499999999999993, 6.564749772133872*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999996, -2.6794897029117842`*^-8}]},
     StripOnInput->False,
     FontSize->8,
     FontWeight->"Thin",
     FontColor->GrayLevel[0.7]]}, 
   {GrayLevel[0.7], 
    TagBox[
     TooltipBox[
      LineBox[{{-11.999999999999996`, 
       3.2153876434941414`*^-7}, {-10.999999999999996`, 
       2.9474386732029625`*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: \
1\[Times]28\[Times]28\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
          "(\[VeryThinSpace]size: 1\[Times]28\[Times]28\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-10.999999999999996`, 
       2.9474386732029625`*^-7}, {-9.999999999999996, 2.679489702911784*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 20\[Times]24\[Times]24\[VeryThinSpace])\
\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
          "(\[VeryThinSpace]size: 20\[Times]24\[Times]24\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-1.9999999999999993`, 
       5.3589794058235685`*^-8}, {-0.9999999999999997, 
       2.6794897029117842`*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 10\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 0.}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Output\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 10\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  Offset[{0, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Output"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-9.999999999999996, 
       2.679489702911784*^-7}, {-8.999999999999996, 2.411540732620606*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 20\[Times]24\[Times]24\[VeryThinSpace])\
\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
          "(\[VeryThinSpace]size: 20\[Times]24\[Times]24\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-8.999999999999996, 
       2.411540732620606*^-7}, {-7.999999999999997, 2.1435917623294274`*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 20\[Times]12\[Times]12\[VeryThinSpace])\
\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
          "(\[VeryThinSpace]size: 20\[Times]12\[Times]12\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-7.999999999999997, 
       2.1435917623294274`*^-7}, {-6.999999999999997, 1.875642792038249*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: \
50\[Times]8\[Times]8\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
          "(\[VeryThinSpace]size: 50\[Times]8\[Times]8\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-6.999999999999997, 
       1.875642792038249*^-7}, {-5.999999999999998, 1.6076938217470707`*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: \
50\[Times]8\[Times]8\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
          "(\[VeryThinSpace]size: 50\[Times]8\[Times]8\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-5.999999999999998, 
       1.6076938217470707`*^-7}, {-4.999999999999998, 1.339744851455892*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: \
50\[Times]4\[Times]4\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
          "(\[VeryThinSpace]size: 50\[Times]4\[Times]4\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-4.999999999999998, 
       1.339744851455892*^-7}, {-3.9999999999999987`, 
       1.0717958811647137`*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 800\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 800\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-3.9999999999999987`, 
       1.0717958811647137`*^-7}, {-2.999999999999999, 8.038469108735353*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 500\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 500\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-2.999999999999999, 
       8.038469108735353*^-8}, {-1.9999999999999993`, 
       5.3589794058235685`*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 500\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 500\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-11.449999999999996, 3.0680157098339927*^-7}, {-0.25, 0}, Offset[8], {
       1., -2.679489702911789*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: \
1\[Times]28\[Times]28\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
          "(\[VeryThinSpace]size: 1\[Times]28\[Times]28\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-10.449999999999996, 2.8000667395428143*^-7}, {-0.25, 0}, Offset[8], {
       1., -2.6794897029117836`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 20\[Times]24\[Times]24\[VeryThinSpace])\
\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
          "(\[VeryThinSpace]size: 20\[Times]24\[Times]24\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-1.4499999999999993, 3.885260069222087*^-8}, {-0.25, 0}, Offset[8], {
       0.9999999999999997, -2.6794897029117842`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 10\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-0.4499999999999998, 1.2057703663103027*^-8}, {-0.25, 0}, Offset[8], {
       0.9999999999999997, -2.6794897029117842`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Output\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 10\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  Offset[{0, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Output"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-9.449999999999996, 2.532117769251636*^-7}, {-0.25, 0}, Offset[8], {
       1., -2.6794897029117836`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 20\[Times]24\[Times]24\[VeryThinSpace])\
\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
          "(\[VeryThinSpace]size: 20\[Times]24\[Times]24\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-8.449999999999996, 2.2641687989604576*^-7}, {-0.25, 0}, Offset[8], {
       0.9999999999999991, -2.6794897029117836`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 20\[Times]12\[Times]12\[VeryThinSpace])\
\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
          "(\[VeryThinSpace]size: 20\[Times]12\[Times]12\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-7.4499999999999975, 1.9962198286692792*^-7}, {-0.25, 0}, Offset[8], {
       1., -2.6794897029117836`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: \
50\[Times]8\[Times]8\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
          "(\[VeryThinSpace]size: 50\[Times]8\[Times]8\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-6.4499999999999975, 1.728270858378101*^-7}, {-0.25, 0}, Offset[8], {
       0.9999999999999991, -2.6794897029117836`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: \
50\[Times]8\[Times]8\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
          "(\[VeryThinSpace]size: 50\[Times]8\[Times]8\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-5.4499999999999975, 1.4603218880869225*^-7}, {-0.25, 0}, Offset[8], {
       1., -2.6794897029117862`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: \
50\[Times]4\[Times]4\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
          "(\[VeryThinSpace]size: 50\[Times]4\[Times]4\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-4.449999999999998, 1.192372917795744*^-7}, {-0.25, 0}, Offset[8], {
       0.9999999999999996, -2.6794897029117836`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 800\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 800\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-3.449999999999999, 9.244239475045655*^-8}, {-0.25, 0}, Offset[8], {
       0.9999999999999996, -2.6794897029117836`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 500\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 500\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-2.4499999999999993, 6.564749772133872*^-8}, {-0.25, 0}, Offset[8], {
       0.9999999999999998, -2.679489702911785*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 500\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 500\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, 
   {EdgeForm[AbsoluteThickness[1]], 
    StyleBox[{
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{-11.999999999999996`, 3.2153876434941414`*^-7}, 
        Offset[{2., 2.}, {0., 0.}]]}, 
      {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
       0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
       RectangleBox[NCache[
        Offset[{Rational[-21, 2], Rational[-21, 2]}, {-10.999999999999996`, 
          2.9474386732029625`*^-7}], 
         Offset[{-10.5, -10.5}, {-10.999999999999996`, 
          2.9474386732029625`*^-7}]], NCache[
        Offset[{Rational[21, 2], Rational[21, 2]}, {-10.999999999999996`, 
          2.9474386732029625`*^-7}], 
         Offset[{10.5, 10.5}, {-10.999999999999996`, 
          2.9474386732029625`*^-7}]]], InsetBox[
        GraphicsBox[{
          StyleBox[{
            {GrayLevel[0.7], 
             LineBox[{{-0.131, 0.05}, {-0.05, 0.05}, {-0.05, 0.131}}]}, 
            {GrayLevel[0.4], CapForm["Round"], EdgeForm[GrayLevel[0.4]], 
             PolygonBox[{{-0.15, 0.15}, {-0.1, 0.15}, {-0.1, 0.1}, {-0.15, 
              0.1}}], LineBox[{{0.2, -0.2}, {0.2, 0.05}, {-0.05, 
              0.05}, {-0.05, -0.2}, {0.2, -0.2}}], 
             LineBox[{{-0.05, 0.131}, {-0.05, 0.2}, {-0.2, 0.2}, {-0.2, 
              0.05}, {-0.131, 0.05}}]}},
           StripOnInput->False,
           Antialiasing->False], 
          StyleBox[
           {GrayLevel[0.4], LineBox[{{-0.1, 0.15}, {0.2, 0.05}}], 
            LineBox[{{-0.15, 0.1}, {-0.05, -0.2}}]},
           StripOnInput->False,
           Antialiasing->False]},
         ImageSize->18], {-10.999999999999996, 2.9474386732029625*^-7}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-9.999999999999996, 2.679489702911784*^-7}, Offset[
        11.666666666666668]], InsetBox[
        FormBox[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztmUtIVFEYx8cHZQXRGwqKzEUEvdCoIIqk0loYNTa1MMMZz2MmG03NQihm
ExRBEC2C2gQ+5tx7oRYGrYoSWlSbWmREbQqSahE9F1mhfVcp7N5jc3XuuefD
5gdHnFl4/vz87j3/O1Mcawqz/FAo1FoEP8LRE+UtLdH26lnwItLYmuCNlOxq
PEY5bdkYK4A3y2DtgVUYQk+V7gAyOBfbdGfwCDp/nBtrGDU+687hEVT+GLOW
gLt+WEO6s3gEjb9Eons2eOuz3eX8jY+6uqtFjBi9v93l/HknlUrlgztrtLuc
P68M5XFqXHC6o9S4pzeXZ7T6g7lrc7qD9bS+3pqjM9c40OYPZqxG4q7fPoN1
ZZoAWvxRam4HV98d7j4Rkl6tI08WBO6PUmut3Y8d7gYYM8uDzuIDgfqLx8VS
uOe9cV63nIgDQebwkcD8NTRcn8uY8cx1zyPG0aAyKCAQf83N1jS7k0h6yvkg
9leIcn+RiFUAc3fNdc1SYdrdWfX+ilHsbygPZuyi5JrttZ/Z1O4dCEr9wZl6
XNLx+uzPClTuGyDK/HFiHpS4e304Khar2lMDSvxxkt4Brn443H2EZ4tVKvbT
iO/+4KwoBVdfnP04TsRWv/dCgK/+CLGKwdVbh7tBeF7b7+c+iPDNH2PpeeDq
uaTjNfm1B0J88cdYz3Rwdd91XjDjnB9/HzFZ+0ul7hSCpx733In0JOjHmcjS
31AedOFL7p4i7iaTN6f6ExE1WfmDc6Fd0vGeTKJ+nIkJ++PEOPQf9ONMTMgf
3O8qJP34Q7zeWOl3QOSM2x90vDJw9dXZjzk3t6gIiJxx+UtEu5cxar5z9mNO
xD5VAZHj2V80as0HVy/cn+MZSZUBkePJX21txwzocw/cHc88qzogcjL6G6sf
w9x1/Qf9OBMZ/EE/ZsZltzvzdiRiTQkmImr+6Y8xcUrS8R4nk10zgwqInDH9
QT+OSty9isXEoiADIkfqj/P0TnD109mPCTFWBB0QOS5/nIt1kn78jRCxWUdA
5PzlD86KEnk/NsK6AiLnj794vGOBrB+D0yM6AyJn2J/dj8HVQ8n33Gd0B0RO
ld2PoQvfcM+d6LT7n+6AuCnYzam4Ipm7W7l+nJkN62vSko73CFM/hmedkxiX
3YUrK9uc7l4y1rlQt7PRSP6/aJbD3/tEzFqu25cTOyPWVVoaHvm9om2gpGRT
W2jkPMayhtE9Yx7mb5BSsVfZAGUJnGWnMS9KzWrdjnLkwMovimd0yQ==
            "], {{0, 25.5}, {40., 0}}, {0, 255},
            ColorFunction->RGBColor,
            ImageResolution->144.],
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
            Automatic],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->20,
          ImageSizeRaw->{40., 25.5},
          PlotRange->{{0, 40.}, {0, 25.5}}],
         TraditionalForm], {-9.999999999999996, 2.679489702911784*^-7}]}, 
      {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
       0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
       RectangleBox[NCache[
        Offset[{Rational[-21, 2], Rational[-21, 2]}, {-1.9999999999999993`, 
          5.3589794058235685`*^-8}], 
         Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
          5.3589794058235685`*^-8}]], NCache[
        Offset[{Rational[21, 2], Rational[21, 2]}, {-1.9999999999999993`, 
          5.3589794058235685`*^-8}], 
         Offset[{10.5, 10.5}, {-1.9999999999999993`, 
          5.3589794058235685`*^-8}]]], InsetBox[
        GraphicsBox[
         GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {1.3, 1}, {
           0.9, 0}}, {
           {Opacity[0.2], 
            LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, 
           {RGBColor[0.33, 0.33, 0.33], AbsolutePointSize[3.5], 
            PointBox[{1, 5, 2, 3, 4}]}}],
         ImageSize->18], {-1.9999999999999993, 5.3589794058235685*^-8}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, Offset[
        11.666666666666668]], InsetBox[
        FormBox[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJzt181LZWUcB/B7vb5cFXUSRVLxnRTfUFQUX9JI873FRBC1iBlyhoHBSIdi
9tWuRYuCaNeiRata1aZFEAW9rYrmHyhoE21qKGrq+cFcEHFkBs51ij4feLye
8xzP9z7nPJ7ze3ovPn/+UkUulzssph/nL7z0yMHBhetPnEsbT+4fXrm8v/fc
5v61vct7B3MXC2nn1cpcrit9pg8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgX6a+vv6h
/v7+a8PDw6/19fUdNDQ0jJYzr1Ao1E1MTLyzvb391+bm5m+rq6s/7Ozs3Erb
f6bv8WI5MisqKooLCwufR0bK+ruurq4n9qfP/pWVlRuxP417OOvcoaGhVyJv
ZGTk9bW1tR+P9nV0dDwTfb29vftZZlZWVjbEdV1aWvq6s7Pz2fn5+U8aGxsn
Sq2rq+tS5KZ7fZhlbmk86bwvjI6OvhG/n9Ta29ufyjJ3cHDw5Thva2vrWhrz
lz09PVdbWlpWj7eqqqpzWeaOjY29eTv3sXS9f415Xeprbm5enJub+ziuSZaZ
YWBg4Hrkzs7OfpTG+01pf+Sn7a+2trZuluZ3lmpqah7c2Nj4JbLTnPo0XdNH
01zaW15e/jZl/t7W1vZ41pkl6Xo+nHK+OzKPbsX4m5qapsuVeVR1dXVrej6M
pTn0wFnk8d+0u7v7YZqbN+5TO/F5W86Wnns16f1ZPOt2v+/z/1G8P+9mTkxP
T7+fZW6qZ5pK515cXPwi3j0ntVRrvZplbhgfH38rcicnJ99Nm/msz38n+Xy+
MDMz80FkR11+Vrkh1RG1qVb+7F5qxKzWEGmONaf/7+/j/Z5qp6dP+Y6ZryFq
a2u7o0aPWibqxeP95VxDTE1NvRfnjPl2vK9ca4i4T/G3UTPG2I72lWsNETV6
XKc0jp+KxWLn8f5yrCHi/qyvr/+ccv9IdeTSScdkvYaI6xd1cZyzu7v7yp2O
y3gNkY9n7+159PZpB2a5hjj6Xjjt+RwtPScGs1pD3O37KFqq31usIQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAALhX/wClWtft
            "], {{0, 603.7333333333333}, {16., 0}}, {0, 255},
            ColorFunction->RGBColor,
            ImageResolution->135.],
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
            Automatic],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->16,
          ImageSizeRaw->{16., 603.7333333333333},
          PlotRange->{{0, 16.}, {0, 603.7333333333333}}],
         TraditionalForm], {-0.9999999999999997, 2.6794897029117842*^-8}]}, 
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{0., 0.}, Offset[{2., 2.}, {0., 0.}]]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-8.999999999999996, 2.411540732620606*^-7}, Offset[
        11.666666666666668]], InsetBox[
        GraphicsBox[{
          {GrayLevel[0.33], 
           StyleBox[{
             {GrayLevel[0.7], 
              LineBox[{{-0.131, -0.05}, {-0.05, -0.05}, {-0.05, -0.131}}]}, 
             {GrayLevel[0.4], CapForm["Round"], EdgeForm[GrayLevel[0.4]], 
              PolygonBox[{{-0.15, -0.15}, {-0.1, -0.15}, {-0.1, -0.1}, \
{-0.15, -0.1}}], 
              LineBox[{{0.2, 0.2}, {0.2, -0.05}, {-0.05, -0.05}, {-0.05, 
               0.2}, {0.2, 0.2}}], 
              LineBox[{{-0.05, -0.131}, {-0.05, -0.2}, {-0.2, -0.2}, {-0.2, \
-0.05}, {-0.131, -0.05}}]}},
            StripOnInput->False,
            Antialiasing->False]}, 
          {GrayLevel[0.33], 
           StyleBox[
            {GrayLevel[0.4], LineBox[{{-0.1, -0.15}, {0.2, -0.05}}], 
             LineBox[{{-0.15, -0.1}, {-0.05, 0.2}}]},
            StripOnInput->False,
            Antialiasing->True]}},
         ImageSize->18], {-8.999999999999996, 2.411540732620606*^-7}]}, 
      {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
       0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
       RectangleBox[NCache[
        Offset[{Rational[-21, 2], Rational[-21, 2]}, {-7.999999999999997, 
          2.1435917623294274`*^-7}], 
         Offset[{-10.5, -10.5}, {-7.999999999999997, 
          2.1435917623294274`*^-7}]], NCache[
        Offset[{Rational[21, 2], Rational[21, 2]}, {-7.999999999999997, 
          2.1435917623294274`*^-7}], 
         Offset[{10.5, 10.5}, {-7.999999999999997, 
          2.1435917623294274`*^-7}]]], InsetBox[
        GraphicsBox[{
          StyleBox[{
            {GrayLevel[0.7], 
             LineBox[{{-0.131, 0.05}, {-0.05, 0.05}, {-0.05, 0.131}}]}, 
            {GrayLevel[0.4], CapForm["Round"], EdgeForm[GrayLevel[0.4]], 
             PolygonBox[{{-0.15, 0.15}, {-0.1, 0.15}, {-0.1, 0.1}, {-0.15, 
              0.1}}], LineBox[{{0.2, -0.2}, {0.2, 0.05}, {-0.05, 
              0.05}, {-0.05, -0.2}, {0.2, -0.2}}], 
             LineBox[{{-0.05, 0.131}, {-0.05, 0.2}, {-0.2, 0.2}, {-0.2, 
              0.05}, {-0.131, 0.05}}]}},
           StripOnInput->False,
           Antialiasing->False], 
          StyleBox[
           {GrayLevel[0.4], LineBox[{{-0.1, 0.15}, {0.2, 0.05}}], 
            LineBox[{{-0.15, 0.1}, {-0.05, -0.2}}]},
           StripOnInput->False,
           Antialiasing->False]},
         ImageSize->18], {-7.999999999999997, 2.1435917623294274*^-7}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-6.999999999999997, 1.875642792038249*^-7}, Offset[
        11.666666666666668]], InsetBox[
        FormBox[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztmUtIVFEYx8cHZQXRGwqKzEUEvdCoIIqk0loYNTa1MMMZz2MmG03NQihm
ExRBEC2C2gQ+5tx7oRYGrYoSWlSbWmREbQqSahE9F1mhfVcp7N5jc3XuuefD
5gdHnFl4/vz87j3/O1Mcawqz/FAo1FoEP8LRE+UtLdH26lnwItLYmuCNlOxq
PEY5bdkYK4A3y2DtgVUYQk+V7gAyOBfbdGfwCDp/nBtrGDU+687hEVT+GLOW
gLt+WEO6s3gEjb9Eons2eOuz3eX8jY+6uqtFjBi9v93l/HknlUrlgztrtLuc
P68M5XFqXHC6o9S4pzeXZ7T6g7lrc7qD9bS+3pqjM9c40OYPZqxG4q7fPoN1
ZZoAWvxRam4HV98d7j4Rkl6tI08WBO6PUmut3Y8d7gYYM8uDzuIDgfqLx8VS
uOe9cV63nIgDQebwkcD8NTRcn8uY8cx1zyPG0aAyKCAQf83N1jS7k0h6yvkg
9leIcn+RiFUAc3fNdc1SYdrdWfX+ilHsbygPZuyi5JrttZ/Z1O4dCEr9wZl6
XNLx+uzPClTuGyDK/HFiHpS4e304Khar2lMDSvxxkt4Brn443H2EZ4tVKvbT
iO/+4KwoBVdfnP04TsRWv/dCgK/+CLGKwdVbh7tBeF7b7+c+iPDNH2PpeeDq
uaTjNfm1B0J88cdYz3Rwdd91XjDjnB9/HzFZ+0ul7hSCpx733In0JOjHmcjS
31AedOFL7p4i7iaTN6f6ExE1WfmDc6Fd0vGeTKJ+nIkJ++PEOPQf9ONMTMgf
3O8qJP34Q7zeWOl3QOSM2x90vDJw9dXZjzk3t6gIiJxx+UtEu5cxar5z9mNO
xD5VAZHj2V80as0HVy/cn+MZSZUBkePJX21txwzocw/cHc88qzogcjL6G6sf
w9x1/Qf9OBMZ/EE/ZsZltzvzdiRiTQkmImr+6Y8xcUrS8R4nk10zgwqInDH9
QT+OSty9isXEoiADIkfqj/P0TnD109mPCTFWBB0QOS5/nIt1kn78jRCxWUdA
5PzlD86KEnk/NsK6AiLnj794vGOBrB+D0yM6AyJn2J/dj8HVQ8n33Gd0B0RO
ld2PoQvfcM+d6LT7n+6AuCnYzam4Ipm7W7l+nJkN62vSko73CFM/hmedkxiX
3YUrK9uc7l4y1rlQt7PRSP6/aJbD3/tEzFqu25cTOyPWVVoaHvm9om2gpGRT
W2jkPMayhtE9Yx7mb5BSsVfZAGUJnGWnMS9KzWrdjnLkwMovimd0yQ==
            "], {{0, 25.5}, {40., 0}}, {0, 255},
            ColorFunction->RGBColor,
            ImageResolution->144.],
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
            Automatic],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->20,
          ImageSizeRaw->{40., 25.5},
          PlotRange->{{0, 40.}, {0, 25.5}}],
         TraditionalForm], {-6.999999999999997, 1.875642792038249*^-7}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-5.999999999999998, 1.6076938217470707`*^-7}, Offset[
        11.666666666666668]], InsetBox[
        GraphicsBox[{
          {GrayLevel[0.33], 
           StyleBox[{
             {GrayLevel[0.7], 
              LineBox[{{-0.131, -0.05}, {-0.05, -0.05}, {-0.05, -0.131}}]}, 
             {GrayLevel[0.4], CapForm["Round"], EdgeForm[GrayLevel[0.4]], 
              PolygonBox[{{-0.15, -0.15}, {-0.1, -0.15}, {-0.1, -0.1}, \
{-0.15, -0.1}}], 
              LineBox[{{0.2, 0.2}, {0.2, -0.05}, {-0.05, -0.05}, {-0.05, 
               0.2}, {0.2, 0.2}}], 
              LineBox[{{-0.05, -0.131}, {-0.05, -0.2}, {-0.2, -0.2}, {-0.2, \
-0.05}, {-0.131, -0.05}}]}},
            StripOnInput->False,
            Antialiasing->False]}, 
          {GrayLevel[0.33], 
           StyleBox[
            {GrayLevel[0.4], LineBox[{{-0.1, -0.15}, {0.2, -0.05}}], 
             LineBox[{{-0.15, -0.1}, {-0.05, 0.2}}]},
            StripOnInput->False,
            Antialiasing->True]}},
         ImageSize->18], {-5.999999999999998, 1.6076938217470707*^-7}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-4.999999999999998, 1.339744851455892*^-7}, Offset[
        11.666666666666668]], InsetBox[
        StyleBox["\<\"F\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.33],
         FrontFaceColor->GrayLevel[0.33],
         BackFaceColor->GrayLevel[0.33],
         GraphicsColor->GrayLevel[0.33],
         FontSize->12,
         FontWeight->Bold,
         FontColor->GrayLevel[
          0.33]], {-4.999999999999998, 1.339744851455892*^-7}]}, 
      {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
       0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
       RectangleBox[NCache[
        Offset[{Rational[-21, 2], Rational[-21, 2]}, {-3.9999999999999987`, 
          1.0717958811647137`*^-7}], 
         Offset[{-10.5, -10.5}, {-3.9999999999999987`, 
          1.0717958811647137`*^-7}]], NCache[
        Offset[{Rational[21, 2], Rational[21, 2]}, {-3.9999999999999987`, 
          1.0717958811647137`*^-7}], 
         Offset[{10.5, 10.5}, {-3.9999999999999987`, 
          1.0717958811647137`*^-7}]]], InsetBox[
        GraphicsBox[
         GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {1.3, 1}, {
           0.9, 0}}, {
           {Opacity[0.2], 
            LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, 
           {RGBColor[0.33, 0.33, 0.33], AbsolutePointSize[3.5], 
            PointBox[{1, 5, 2, 3, 4}]}}],
         ImageSize->18], {-3.9999999999999987, 1.0717958811647137*^-7}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, Offset[
        11.666666666666668]], InsetBox[
        FormBox[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztmUtIVFEYx8cHZQXRGwqKzEUEvdCoIIqk0loYNTa1MMMZz2MmG03NQihm
ExRBEC2C2gQ+5tx7oRYGrYoSWlSbWmREbQqSahE9F1mhfVcp7N5jc3XuuefD
5gdHnFl4/vz87j3/O1Mcawqz/FAo1FoEP8LRE+UtLdH26lnwItLYmuCNlOxq
PEY5bdkYK4A3y2DtgVUYQk+V7gAyOBfbdGfwCDp/nBtrGDU+687hEVT+GLOW
gLt+WEO6s3gEjb9Eons2eOuz3eX8jY+6uqtFjBi9v93l/HknlUrlgztrtLuc
P68M5XFqXHC6o9S4pzeXZ7T6g7lrc7qD9bS+3pqjM9c40OYPZqxG4q7fPoN1
ZZoAWvxRam4HV98d7j4Rkl6tI08WBO6PUmut3Y8d7gYYM8uDzuIDgfqLx8VS
uOe9cV63nIgDQebwkcD8NTRcn8uY8cx1zyPG0aAyKCAQf83N1jS7k0h6yvkg
9leIcn+RiFUAc3fNdc1SYdrdWfX+ilHsbygPZuyi5JrttZ/Z1O4dCEr9wZl6
XNLx+uzPClTuGyDK/HFiHpS4e304Khar2lMDSvxxkt4Brn443H2EZ4tVKvbT
iO/+4KwoBVdfnP04TsRWv/dCgK/+CLGKwdVbh7tBeF7b7+c+iPDNH2PpeeDq
uaTjNfm1B0J88cdYz3Rwdd91XjDjnB9/HzFZ+0ul7hSCpx733In0JOjHmcjS
31AedOFL7p4i7iaTN6f6ExE1WfmDc6Fd0vGeTKJ+nIkJ++PEOPQf9ONMTMgf
3O8qJP34Q7zeWOl3QOSM2x90vDJw9dXZjzk3t6gIiJxx+UtEu5cxar5z9mNO
xD5VAZHj2V80as0HVy/cn+MZSZUBkePJX21txwzocw/cHc88qzogcjL6G6sf
w9x1/Qf9OBMZ/EE/ZsZltzvzdiRiTQkmImr+6Y8xcUrS8R4nk10zgwqInDH9
QT+OSty9isXEoiADIkfqj/P0TnD109mPCTFWBB0QOS5/nIt1kn78jRCxWUdA
5PzlD86KEnk/NsK6AiLnj794vGOBrB+D0yM6AyJn2J/dj8HVQ8n33Gd0B0RO
ld2PoQvfcM+d6LT7n+6AuCnYzam4Ipm7W7l+nJkN62vSko73CFM/hmedkxiX
3YUrK9uc7l4y1rlQt7PRSP6/aJbD3/tEzFqu25cTOyPWVVoaHvm9om2gpGRT
W2jkPMayhtE9Yx7mb5BSsVfZAGUJnGWnMS9KzWrdjnLkwMovimd0yQ==
            "], {{0, 25.5}, {40., 0}}, {0, 255},
            ColorFunction->RGBColor,
            ImageResolution->144.],
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
            Automatic],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->20,
          ImageSizeRaw->{40., 25.5},
          PlotRange->{{0, 40.}, {0, 25.5}}],
         TraditionalForm], {-2.999999999999999, 8.038469108735353*^-8}]}},
     FontSize->10]}},
  AspectRatio->Full,
  BaseStyle->{TooltipBoxOptions -> {TooltipDelay -> 0.08}},
  ImageMargins->{{0, 0}, {0, 0}},
  ImagePadding->{{25., 26.5}, {27.499998526280667`, 15.}},
  ImageSize->{711.4999999999998, 42.500016210912705`},
  PlotRangePadding->0]], "Output",
 CellChangeTimes->{3.919855553985889*^9, 3.922514180153267*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"d12e7c0c-7a68-43e8-b66e-1cac9bc545af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetMeasurements", "[", 
  RowBox[{"lenetModel", ",", "mnistTest", ",", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9150283184762383`*^9, 3.91502833321658*^9}, {
  3.9194902891428947`*^9, 3.919490313638157*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"c7ef9739-288e-44fa-9e61-9967c625de3b"],

Cell[BoxData["0.9848`"], "Output",
 CellChangeTimes->{
  3.915028336436681*^9, {3.9194902820627213`*^9, 3.919490314887037*^9}, 
   3.919493642183641*^9, 3.91985563878043*^9, 3.92251418189078*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"6c1567b0-c4f5-4ef0-b6cd-aefae6c5fb9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetMeasurements", "[", 
  RowBox[{
  "lenetModel", ",", "mnistTest", ",", "\"\<ConfusionMatrixPlot\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.915029422771063*^9, 3.915029428437944*^9}, 
   3.919490316719942*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"f5b7b367-5cd2-4e93-ac9f-1d40f4434ca1"],

Cell[BoxData[GridBox[{
   {
    RotationBox[
     ItemBox["\<\"actual class\"\>",
      DefaultBaseStyle->"LabeledLabel"],
     BoxRotation->1.5708], 
    GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIQ+9dziWPv97yzjzAOqZqt+N7+3/sl5ienv7dnAIMP
RNO4zPkerboyXfqdPYtvnXnmpnf2f9PLL69Nfm//3tkuP/zGG/vohksbWa68
tf8VLsNd/vsdTvNxmYNLfcsVS4nA4Gv2Ol9elr1Y/tA+ofX8Ajv3l/Z/i3ke
l8e9t18jqbX37IT39v/LL81+cpp0/346b9hzv/Kt/fq0FV/MnN/Z/7nvmT9J
H7c5pLofV/gcufqhveTCLXujGa8U8o0f2ytsX/RmGsMrnOGPy3xc4UBqvFCL
Lji92DTN+pL9nu0HdlvYP7CX8pp2zHLeC5zhxqLqn1U+6bW91h6ptRs+v7HX
+nxMMGLSO/s3272Czpu9sWef9SfvUgrQ/effLYs+/g6nObjCDVf44FLPODPa
9/2HV/bXrrpk1bUA3ZM9c61N3Dv7NRaRl6tm3bH32XzfR/TiY/s8I48XZV6v
SI4XWoc/qen5FH/xp9A/9+yPvhS//3fRE/vi+SF8V9a8wul+XOK44oXUcCDV
Xlzm7NvL6ZfSe9P+3kaRezZHHtnL6Zd2VJ95SbV8jcs9zXE+Mhfmv7RvMY7N
zJnz2l5pc9SHmo9vSY5HXOZHtQq1Hfp5xX67/hPzHwYP7dVX7aho4sftL1z5
iNRwIDX8caVDXObPkjp9/MuUy/aGNcd+aWx7YB+kuvbd16svSE7PpIanJFtC
6nQfYLn7PWlFjPAb+6i+QglLTdzlDKn2njsDBvZOCU8vKN2+CxV/QbVyg1rx
Qqq/Gj4Flloy3rCfZ7lY/aH1I/uVEROXT+3BnQ6pRZNazpNa/uOyFwDJBJwm

      "], {{0, 0}, {10, 10}}, {0, 1}],
     Background->GrayLevel[1],
     BaseStyle->Directive[
      FontSize -> 7, FontFamily -> "Verdana", FontWeight -> "Thin", 
       FontTracking -> "Condensed"],
     Epilog->{{
        InsetBox[
         FormBox["974", TraditionalForm], {0.5, 9.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["2", TraditionalForm], {5.5, 9.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1", TraditionalForm], {6.5, 9.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1", TraditionalForm], {7.5, 9.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["2", TraditionalForm], {8.5, 9.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}, {
        InsetBox[
         FormBox["1129", TraditionalForm], {1.5, 8.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1", TraditionalForm], {3.5, 8.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1", TraditionalForm], {5.5, 8.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["4", TraditionalForm], {7.5, 8.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}, {
        InsetBox[
         FormBox["4", TraditionalForm], {0.5, 7.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["3", TraditionalForm], {1.5, 7.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1006", TraditionalForm], {2.5, 7.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["4", TraditionalForm], {3.5, 7.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1", TraditionalForm], {6.5, 7.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["11", TraditionalForm], {7.5, 7.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["3", TraditionalForm], {8.5, 7.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}, {
        InsetBox[
         FormBox["1", TraditionalForm], {2.5, 6.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["999", TraditionalForm], {3.5, 6.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["6", TraditionalForm], {5.5, 6.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["3", TraditionalForm], {7.5, 6.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1", TraditionalForm], {8.5, 6.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}, {
        InsetBox[
         FormBox["1", TraditionalForm], {1.5, 5.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1", TraditionalForm], {2.5, 5.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["960", TraditionalForm], {4.5, 5.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["3", TraditionalForm], {6.5, 5.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1", TraditionalForm], {8.5, 5.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["16", TraditionalForm], {9.5, 5.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}, {
        InsetBox[
         FormBox["4", TraditionalForm], {3.5, 4.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["882", TraditionalForm], {5.5, 4.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1", TraditionalForm], {6.5, 4.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1", TraditionalForm], {7.5, 4.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["3", TraditionalForm], {8.5, 4.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1", TraditionalForm], {9.5, 4.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}, {
        InsetBox[
         FormBox["6", TraditionalForm], {0.5, 3.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["3", TraditionalForm], {1.5, 3.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["2", TraditionalForm], {2.5, 3.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1", TraditionalForm], {3.5, 3.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["2", TraditionalForm], {4.5, 3.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["9", TraditionalForm], {5.5, 3.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["934", TraditionalForm], {6.5, 3.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1", TraditionalForm], {8.5, 3.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}, {
        InsetBox[
         FormBox["1", TraditionalForm], {1.5, 2.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["5", TraditionalForm], {2.5, 2.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["1011", TraditionalForm], {7.5, 2.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["3", TraditionalForm], {8.5, 2.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["8", TraditionalForm], {9.5, 2.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}, {
        InsetBox[
         FormBox["1", TraditionalForm], {0.5, 1.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["4", TraditionalForm], {3.5, 1.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["3", TraditionalForm], {5.5, 1.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["5", TraditionalForm], {7.5, 1.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["959", TraditionalForm], {8.5, 1.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["2", TraditionalForm], {9.5, 1.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}, {
        InsetBox[
         FormBox["2", TraditionalForm], {0.5, 0.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["2", TraditionalForm], {3.5, 0.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["3", TraditionalForm], {4.5, 0.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["5", TraditionalForm], {5.5, 0.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["3", TraditionalForm], {7.5, 0.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]], 
        InsetBox[
         FormBox["994", TraditionalForm], {9.5, 0.5}, 
         NCache[
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}},
     Frame->True,
     FrameLabel->{None, None},
     FrameTicks->{{{{9.5, 
          FormBox[
           RotationBox["0", BoxRotation -> 0.], TraditionalForm]}, {8.5, 
          FormBox[
           RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {7.5, 
          FormBox[
           RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {6.5, 
          FormBox[
           RotationBox["3", BoxRotation -> 0.], TraditionalForm]}, {5.5, 
          FormBox[
           RotationBox["4", BoxRotation -> 0.], TraditionalForm]}, {4.5, 
          FormBox[
           RotationBox["5", BoxRotation -> 0.], TraditionalForm]}, {3.5, 
          FormBox[
           RotationBox["6", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
          FormBox[
           RotationBox["7", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox["8", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
          FormBox[
           RotationBox["9", BoxRotation -> 0.], TraditionalForm]}}, {{9.5, 
          FormBox["980", TraditionalForm]}, {8.5, 
          FormBox["1135", TraditionalForm]}, {7.5, 
          FormBox["1032", TraditionalForm]}, {6.5, 
          FormBox["1010", TraditionalForm]}, {5.5, 
          FormBox["982", TraditionalForm]}, {4.5, 
          FormBox["892", TraditionalForm]}, {3.5, 
          FormBox["958", TraditionalForm]}, {2.5, 
          FormBox["1028", TraditionalForm]}, {1.5, 
          FormBox["974", TraditionalForm]}, {0.5, 
          FormBox["1009", TraditionalForm]}}}, {{{0.5, 
          FormBox[
           RotationBox["987", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox["1137", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {2.5, 
          FormBox[
           RotationBox["1015", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {3.5, 
          FormBox[
           RotationBox["1015", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {4.5, 
          FormBox[
           RotationBox["965", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {5.5, 
          FormBox[
           RotationBox["908", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {6.5, 
          FormBox[
           RotationBox["940", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {7.5, 
          FormBox[
           RotationBox["1039", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {8.5, 
          FormBox[
           RotationBox["973", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {9.5, 
          FormBox[
           RotationBox["1021", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}, {{0.5, 
          FormBox[
           RotationBox["0", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox["1", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {2.5, 
          FormBox[
           RotationBox["2", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {3.5, 
          FormBox[
           RotationBox["3", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {4.5, 
          FormBox[
           RotationBox["4", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {5.5, 
          FormBox[
           RotationBox["5", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {6.5, 
          FormBox[
           RotationBox["6", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {7.5, 
          FormBox[
           RotationBox["7", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {8.5, 
          FormBox[
           RotationBox["8", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {9.5, 
          FormBox[
           RotationBox["9", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}}},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->{{All, 30.}, {30., All}},
     ImageSize->300,
     Method->{
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}]},
   {"", 
    ItemBox["\<\"predicted class\"\>",
     DefaultBaseStyle->"LabeledLabel"]}
  },
  BaseStyle->{
   FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]},
  GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
  GridBoxSpacings->{"Columns" -> {{0.5}}}]], "Output",
 CellChangeTimes->{3.915029430443685*^9, 3.919490318294218*^9, 
  3.919493642965352*^9, 3.922514182995398*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"ba285be1-6213-4acf-a2ab-d8cf9eae9b6c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using  the  trained  model", "Section",
 CellChangeTimes->{{3.922514149138651*^9, 
  3.922514160084709*^9}},ExpressionUUID->"fff148be-69de-4cfa-9a93-\
839b38874784"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"img", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<data/4738-v3.png\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"img", "=", 
   RowBox[{"ImageCrop", "[", 
    RowBox[{"ImageRotate", "[", 
     RowBox[{"img", ",", 
      RowBox[{"Pi", "/", "2"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.919492961049732*^9, 3.919492993550612*^9}, {
   3.919494710035898*^9, 3.919494734458852*^9}, {3.919494781251923*^9, 
   3.919494794530386*^9}, 3.9194952622936277`*^9, 3.919495430796835*^9, {
   3.919495516061172*^9, 3.919495521757161*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"e3df577c-6f7b-4568-919c-f8977894098b"],

Cell[CellGroupData[{

Cell[BoxData["img"], "Input",
 CellChangeTimes->{{3.919494797422488*^9, 3.919494797640954*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"23e76cd0-ae9e-41da-b8b5-63696415a87e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qf8vnVV/3Hae+9pVrbLdmZpy4YmlVphW81RWpooRWlLaaCimCaO1BAT
BSWEFBCV0AgaICKIECsJLBNcpJLV/e959Xj5v/r9/SvT33ec8+Di/v7u+9rX
9Tnjfd7nfG55rwfd9b4fvM8++zzkI//7f3e956991/773/PX7/aJ//2PH3vg
Q37xfg+8z73v+MCH3ud+99n/Nvf6kP/+8h4ftM8+t/nQffb57//22YyMjIyM
jIyMjIyMbP7zP/9z8453vGNz2WWXbV73utcty8UXX7y59NJLN1dcccXm8ssv
35x//vmbF73oRZs/+7M/2xxyyCGbww47bPOsZz1r89KXvnTzyle+cnPyySdv
Xvayl22e+9znbo4//vjNS17yks1rXvOaZV9vectbNu9617v29mWOjIyMjIyM
jIyMjIyMjIzsMIFpWP793/99c/XVV28uuOCCBZ845phjFmziFa94xebss8/e
vPa1r938zd/8zebFL37x5ilPecrmEY94xObnf/7nN/e73/2Wv5/97GdvDj/8
8M2Tn/zkzaMf/ejNb//2b29+7dd+bfM7v/M7mz/4gz9Y8JCzzjpr84//+I+b
q666anPNNdfs7UsfGRkZGRkZGRkZGRkZGRnZAQLTePvb377wKnAzLrroos2p
p5668DPwL/AynvnMZ25e8IIXbI477rjNc57znM3Tn/70zVOf+tTNwx72sM0P
/dAPbX7gB35g8+AHP3jzhCc8YeFzHHTQQQvu8ZM/+ZOb/fbbb/MTP/ETm+/7
vu/b3Pe+990ceeSRm3POOWfBOfBAcELe8IY3bN74xjdu3vnOd+7t2zEyMjIy
MjIyMjIyMjIyMrINBE/jP/7jPzb/9V//tfz9tre9bak9OffcczdnnHHGe+pL
/uIv/mLBMuAV+Bc+H/WoR21+93d/d1nUpOBmfNd3fdfmm7/5mzf3ute9lvUe
+chHLrgHXONOd7rT5nu/93s33/Ed37H56q/+6s3tb3/7hecBP3n5y1++OeWU
U5aaFpjHwQcfvDnhhBMWvMN5jYyMjIyMjIyMjIyMjIyMjOwpMINrr71286Y3
vWnz1re+dfPud7974UuoOYFn4GmoH4FrwBxOPPHEpd7kwAMP3PziL/7i5qEP
fejml37plxZOxs/+7M8uOMb++++/+bZv+7bNrW99683d7na3zf3vf//le3Up
alb23XffBdOAbdziFrfYfMVXfMXC4Xja0572nuOpc7H+z/3czy3HeMYznrHU
wqiTGRkZGRkZGRkZGRkZGRkZGUlwNd785jcvPUPVhrz+9a9f6lH+5V/+ZcEy
/uRP/mTBGPAzjj766IVXAed40pOetGAbP/VTP7XUm/z0T//05ju/8zs33/M9
37PgF/e4xz0WbOPLv/zLFx7Hj//4j28OOOCAhdehXuVHf/RHN9/+7d+++aIv
+qLNZ3zGZ2w++7M/e6lTufe9771gIb/wC7+w7Oee97zngpnAOH7913994Ycc
euihS98P5zkyMjIyMjIyMjIyMjIyMrK7RX8N/S3MX6I36EknnbTgBnqInnfe
eZujjjpqqQ3BxYBL6LkB88CtwMWAbeBmwDZ++Id/eMEzvuZrvmapO4FzfOEX
fuGyfP3Xf/3mDne4w+bud7/7gl888IEPXLget7nNbRbuxqd8yqcsy61udauF
z/GVX/mVCy5if9/93d+9ecADHrDwQxzPv293u9ttvv/7v3+pZ4HJwGhGRkZG
RkZGRkZGRkZGRkZ2l8AD1KFceOGFS08N86Hoc1FdCI4GnANfw9wmD3rQgxaM
43nPe97SG0NPUXjHXe5yl4VzoY8o/OLLvuzLNl/8xV+84BIwCryMz/mcz1kw
C1wN/A79Rm135zvfeVnvlre85YJtfPInf/LC4bB86qd+6uYzP/MzF7zDNg9/
+MOXc/imb/qmBQ/5vM/7vOXztre97ebHfuzHlp6mOCgjIyMjIyMjIyMjIyMj
IyO7Q971rnctfTb01oBh1Ofi937v9xZOhrlb4Rrmfo2r8Zu/+Zub3/iN31jm
hIV9wEL8+453vOPmW7/1W5ceofqI4lzAK77gC75g81mf9VmbT/qkT1owjvAN
eMZXfdVXLQuex5d+6Zcu9SnWtcA2rP/xH//xm0/7tE/bfOM3fuNSo/K4xz1u
mWfl0z/90zcf+7Efu/mET/iEBQP5/M///AVTgYHoX2pu2ZGRkZGRkZGRkZGR
kZGRkZ0t5kYxB4m5V08//fSF94CfgYuhZgRHA27hO/01/vRP/3Tzx3/8x8vv
MA7zwv7t3/7tgn/86q/+6lKHAoNQZ+ITjqEeBWcDHwNOAYfQOxT+Afvw2+d+
7ucuGAiuh/VxNSywDRgG/MJ6eCFwFz039CL96I/+6M2HfdiHbT78wz98+bv1
cEXUqzj3v/qrv9q84x3v2Nu3emRkZGRkZGRkZGRkZGRk5GYQMb/eoWeeeebS
a0OPUH0+9c7Q1wJP4ld+5Vc2D3nIQ5b5XPXHwJnQ29On+UvM3XrxxRcv+IZ/
6xsK11AnYsHlwM1QP4K7Ad/wiacBg4BdwD3gGLgXX/IlX/K/6lPie8As9Oxw
jMc+9rFLDYp9fORHfuTmQz7kQzYf9EEftPngD/7gBeeAn8BX9CvFI1H/og/p
JZdcsrdv+cjIyMjIyMjIyMjIyMjIyE0o//Zv/7b0DD3++OOX+VDgE+ZaNUfJ
j/zIj2zudKc7be5617suc5Xc5z732ey3337L9/ACGIZeoeYvUauCv/Hnf/7n
C39DzQncQq3JN3zDNyzzwfo3rOJjPuZjllqST/zET1xqSOATcIyP+7iPW3AM
WAcOB5wDpuE7fAzb+h5fw5wtf/iHf7j0FFW/8hEf8RELrrHPPvssGAd8A+8D
pmEOFxgLzAQ+YhvXae7bkZGRkZGRkZGRkZGRkZGR7S3vfve7l7le9RBVv2Ge
VhwN/SpgB+YlgQWoH9HHAg8Cr8P3aj58j0sB6zAfrF4Y+nDYHncDVwP2AKf4
2q/92gWbgDt86Id+6MK3gG/gdKhdgWPAN9SWwD/gHbZVo+ITHuI3633d133d
Mi+t2hS4CdzDPuEa8TfwQ2An5m7BOcE1ca6+t3/1L+prpl5lZGRkZGRkZGRk
ZGRkZGT7Cu7CW97yls1ll122ecELXrBgG2o5fvAHf3DhOzzhCU9Y+mrANfQG
hSnga+jFoTZE/ws1J76Hc/i3Xhz6cOhDCs/QBxSeAMfQVyMcQh3JR33URy31
IzgdenD4DX4B/7DAIPA4YBT6jMI3fIeT4bjwF71A4Bv4HdWmWBwDlmL+FpgM
fMN8sf7tfHA97Ms5miPm2muv3duPY2Rkx8s73/nOpc+PPsb0j0//xiEzH/Xb
3va25XPmdB4ZGRkZGRkZGRkZua4irsDbuOiiizbnnHPO5vDDD19qTsyxGsah
TwUuB/wAxgCDUGey7777Lv03LDCN6lR8/8u//MubE088ceFFwA5wMOAIuBqw
C5+wC/gCzEOtCOwC9lF/UDhF/A7bwz8sMAwYiHPRE+SEE05YamLgL9bD2YBt
2B4Wcrvb3e49PURwNw466KDlGq0LW7EODodaHH1HzjrrrCXOGhkZuXECs4BR
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
f6tLFecMxjEysvOFvy8vIadpjhH+vj4Zemv4W+8o+TtYRD031YGwbfIX4ncL
bAKf4sEPfvBi8+AM7DNfnL3j6+N143FaB88D/0H+g58vxmeHm6vQ+mIG+4Kb
wC+sV2+7uNmwDbkUWIPvy6PKv9qf2EOsARfBJWHz+Qf8DTlWdr05Ie1TTAGL
4Z+w22w7m80/cD7ujXsiPyH2KV6wvWuD1cBwXOu67pZ/737BMdTKyPc4R+fm
eOYmsF+YB7+Jv+R+dt+bBxfeRFer/4VJ09d4NrDpqXEfGXnfYsyoi6M3xCkw
R/EJ3SE2qO8EHUE/GaflO8UEYo04DuIL+g0+An/g09M/9Qakb8Ikimf8Djto
bkZ6hq6gv+gIMQFswL/9Db+AAdOBdJb9ODf6FbcML4IOo98ct9qWcsHOtfle
m0c2HKe5aJ1r8Ql95rxhG2yAeVPkpJ2b34ul6ESxE11r32t8w3d0rxjL/pyX
cxcL4upNHndkO4n3FW9DboLuYMPVsXmf4X5yFPFYvfdwv/gM8aTKm/A/jAdj
o14XFmPL2Gx88gnoiHWvYliEcUqn8FXsv9qV8A37bn5o6/DL8DLoCnqKPrO9
9cMqbZcfYp+wjHoj11cn3prfjGnnJofDH3O85nOh6/h9fCV6LdwWzqFuWb9h
9bjy6qMHRm4OgaGz88as+RDlbL13/m3+A7/hccz7NzKycwUPwJjnw8IsxO7i
aDk7/AI1H3KHOAv8aLwCeQtxN7+bXWffYRAwCz44X5vfK0bvbxhDuIK8RLa+
XAL7x+by/eNz8tHZRrUf1cPjYfDjre83fgQ8wfnwqZtjkX+en1EPcj4GOxz3
w/nBVpwH33ttn20v5mHDbVuvLfYaBmGOFeuw8/FBxS7Wh3vwc1yb9dl55+18
HK95X1yX+8KfcE5sPzwJruGeiX1wV3zveHqb4Mvgh3hWsChzutDduDUve9nL
lk84lec6MjLyv4U/o/8vzhdcwzxJfH9jnd5Y9/ukC5oPgQ9PL8UFD9/waT08
MjqoehNjWnxBBxj/MFNjXAxB11jsE4ZBD4gT6FIYCT0KJ7VPn/QFHUzfwkvt
n+6hZ9TmwT9tB6N1DDpOfESf1d9jPY9LWK04qV4d1q1XKJ1Gx9qnejn3y/Hp
TDp5HY+5DvFX2EZzwViXzvObY4iN3A8YsNpEPubkz0a2i8gd4DDBROkOegN3
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
+LkaNX5S/NW1JmXlrsYFa7YvfSMulycKr/J9/C1Yl/7udIv4nh+1p9nTuBP4
NnL+rlFYMoxprSO0Fq69Gmf8jkOu8VpPDR+Bb6x9850RuKG14MOqszBDEKdq
+AU/FHlHZ4tf70zYk64l/gaMEHYqhnjLW96yXVuxQHN563VsLeFVeGpT9zMy
MnKWorYRD5bekadg1+l8doQt4AuxtyvnshoTj1X/K88hfqD3+FxsDv+fr6Cu
EU5CL1a/KkcihyTuwBv9zGc+s8UhY09GRkZOS+Km0W/0WTNh154F1Zzwmb1G
bERnebwYha5rfsGaO2weFKx2ZOR6RUynPhSXwMxS+IY9ap/Zj9U0iIXFfHKo
ejaIu8V29bmEbXiPuLkcKrvrNWy7G5vtvXgCegPii5tnd1FE/AlTlGfXs0vt
v2sm3lLPIK+s1sc8OHNg5VLk5/khsMpqROBF4rB6lMAr6AExmeulz8Bv//Zv
b7OScCvojuadeB9cxM3r6QZ4RrNU6uOz1krEq4FZWUM36wkrEcP7e2pmYF2+
s3y3eiIx4V64rWpwrCnfFNfCtYIHwZysDR/T+sWL4bfCJqyHdTnENloTOh7P
Jh4B3jF82nWHb5hpo3bCPKOLdBZuhMAQXTPXn96At+Fq0B/8fvoEPghncu+c
wU/9TE/RY3BE195evqh46sjIyPGLfBEunnwl3cMPYkfY++aasL3uD+fCigfK
YbDVbDv/AE/QZ9SDw2fCPdT64qzReewJPwIXVD5FjgWvdGRkZOS0pJ4b+gni
4cNp6w/K1xW7wCboKLGf5/ljYgnxIux2xTH4xd7TnBX6T+5PHkt+eGTkeoVN
NkvFrAEYh/woboD9CbOw98Lh5EzF8/q+2Mfsdnwjr7VXxRxss+c8Vg/d4mif
IeYXT+M+6Hdw7KJmQF7G7Bd9M2AYav7xNWAb+qbCKPFfxMdyzh43v9L/y9eB
JbiW9QiDWbhe8jFiMdeGL6NejV4Qy+FRwCH4NXG6fJa/47M9Vw6omLr1KNam
T6yBvy+edvM3rK97fhHOP53FNzPHFnbKR3v++efP+9LfEIFJy3WZyaoeAnYU
Lwl+4ZpbE+tXvo3Pyf90v/I3qiNcZ9hYPz4o3rBZpnxT614uDmfEHNSRHxVn
DrcMloT7CO/DM8KHqg+v/Wt9mmMtr+nseI18AqyDLaZrphf3yMjIWQkOnrlN
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
DJgLneXa6aloHume6lEStVW4PK6R621drZk1dov7a69aR/ra3qiuqh4p6XRr
CM8Ir7YP8ALwhODczQgSZ1t3vVzVNe7x2l+PWDd9+Pj47KRZBK4vLBImaa2c
rbWX91oX6tyKL9xbb+dWLPL0008PvjEyMnLVwgdiW+UV6BX6nQ3hD8n7yLfo
iQ7bYI/ZiJW7Uc5TvodO4z9kW9ae62wSnwk3VF0pG0L/4aXKUYyMjIxcj/Cv
YLX33HPPFj+JbXAo+MlypPSZHqNy2XTR2luufkHNjZTng2+I+eKfVQ+stqVZ
DThp4ppyU3zu/GfxycjIeYr+nfgT8D3xPpsrP23f2svsdXUoxXjwC7nTeE3h
G3rWmJkpVocXuNn39ryb8+FciOPZd1jIRz/60Y2b4fzhTcAJPAcrqAev84rz
4X3+ru/EF/H31HjI08MPwziqU/F7NfziV4+Lo/xvsIK//Mu/3PwY/6fv6jmf
0xzK+gEUZ9Wj0mvqdyi+bv4MH8nfoRfKQYd/+t3fMfMFjiQv5FrxdfhTfCdc
Dmsgp+N/c4O9Wh99Ul0HN7gQ/sJe+ax6sKhL4U/aU9VM6R+DE1BfuGZu1Pu1
eiL7wuP1iq5mKTzKc/aM/Wht4vzASWBP1kN/3pGrE3wxvBd5UpwN2CRswxq4
1QvFY2GE1YVaO6+nW+qN4mfneOYNjIyMXIuwo7iR+ehu8g3yCPKd5n6bzyVe
8NzK3ajvGB4nG8Mf4GOs+AfdRa/Vq5z94HOw/WwY/uyb9VsfGRkZuZzQIfwg
WKxalObTyVXzk2ESuPDyovq7e4z/u3LT3fhZ9ByfV66Pv+wefssnjmsO/+DD
idfUavuZ31Z+EMccdjwyct5iPonZreaUsb/6DtjD9jR7Hb6RzWbPxYRr/OEx
Z0aMXn28GxwgzCAeA4xD/QWuFC6Cs6A+AN7oHqdKrArbEOvjWuGx11OBL+G7
wQrgBOJV8ZDz5e+JT5tR6xw6b3ExfAdnlI/hnMMycbWqIVvnJPneHofn+Iw4
p8XEsA1zTPwvsAjfT15Z/Qlfp5kQzU/BR9Fvx/8Mw/H/4qfIZ/s/YDxqeOCt
Xuta+p76kshR011qetRF7FV3+N/hUvJgsC56uJ7Orimuj/UsRg7DqM7BvoBd
67Wh3sHv9Yduf3u9z8X94eviCXm9tfG39a0ZPvHVi70Lz4NJ1ruvWnaxAgzJ
+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
60RWN5VfA0fFE1FzAwbjXPWDlYuymMbtEJidNYZNqS4o/MFYO+Ib1g/3nB0J
/6jGdPnP1YbKfp3jJ5/Y92F9MGm5XXhR+hAtt+dmBI5Lt1U3aNoF+RzHGIT7
Cz91PydXTU4tPUZnvvzyy6eYw/I3VlZWiFpb7KXslRnnKfZD51h/9O6Co5eb
Xj0+Nk11RWeurUfxFVjt1hRdWbl5kWsM0zAn9RWQa8E3ibvAF9GDQG0Jeez4
GMVYjnkl2R7FVqu7M22V6hrOWhbThskOLefF86NtY382LJ9O7jT98279U87l
paSTqo1Mv3VeM1Y0ax9OH6tcPJw0Phausxi4+vti8Csr70XEj/Ez2OZqhcI2
1MLE1eD7mZt89+/93u89cSDNRdwN2IReZ+IS5qr8jOrwmn/W4foQHLlO5XnJ
N8Xx0O/E67mP4/htuEp9OnGWbNb6er82L2AfsBRzQj2OfJY+C7usV8vERvgs
5jT7wrx8UP0NWInjwzT0jfn1X//1U9xWLRJ9E7ZG5O0QmB583RirR3G16Seu
7DF8wnj2WF5VY6p6k607c9yUS2l/fER4nb5XeoiaZys3IzhqaprTJ7NnU/rk
qLOMBWt+9Ujbh97CJZOHJ18UTgzfwE9dWVlZgWXP+Ek1m2Dl1pB8EvoFL5RO
YuPTM+wN65PtXA859gpbDA9+ZWXl5kVveNjGj/7oj57sS35O9b3MaTFYNfrk
/bNB2J0TszyHb9ANbMjJhT/WtZic07DRWVej3n0ez+WviDnTPWI+fuuqnP13
q7tRTjbOGczE83nOk+dRbLlapx79V/n/sBYxcufEr/uxH/ux5aitPJTIaVL/
BmfDXPzZn/3Zbz/zzDMnn0/NCP1gYYswDfEBc9I8VWvCJjeFX6+GgB4pfDf+
XzkjjV3z8VzNC+O7nsd8xsnrtz+fsD4l8BW1H2Er5p41v96Nvmf+sBXMB5wK
Poh9wjTjd5q/bIRqDvvM+elTpCc1HpTYyTl8o34Jztncl2eAz8JPhQPJo4N1
8G1WLlvUflL31ZjHP6oXl/sKZ5+4tzHCBmVvGpPGD3wLX8n+xkM9ro4Y9ew3
DhP54R/+4RMODUu0ti134+ZEv5wPfvCDb+e5zT5q3cejHijvrtz3ctaMBXYK
npv6O3wN9T1WVlbut+By4m5MvNRaYd2AZbBb8kvooWr71J9cLIcNxt44+iXW
KHYNO2zrU6+s3LywLct55o+Y4+Z6sVb2I3+Dr8B/YH/MmsPnOBM+y/+iI479
pWc99IlvTN685+xXuW90xtG+mb1e+U7f+Z3fedJFk+f+MHyOzreegWzficnM
33OOYst8QLquOqrsLHnDYoF66cI46EH7iaWzr5Yjv3KV4PnAGPUq/cxnPnPi
y7P14WOwDjVrcSrFmdXO49+x6XGozEdjX46K/g/msji0unrmRWt1GJ7tqr5B
9QpqXPc9uITfM+ZhK3Ji9FyUYwp/CAutXzPfEd4Cn3FO8lhxwOrz6Lz4r+GJ
xeL9hvmHu+H4uGRyX6YtUl6Y36SHnBMdga/iuv30T//06drpo/Kxj33s5Leu
XLaoj6KOjDGDtwG7sBnX9G3+bX2O4R8+z6et3pvvGkfHmi7tY3wZn8aMdU4+
BHwDL3Hrbtyc6GOEPwqTKNe0XPdz9bHSA3TJ7N2YnqIzcNnoAvcXdrZcypWV
FfYAHTF1CTycv4IvyqaKv10sxpoC37AWwU7VJxPXOdpS9sd9XZtjZeUyxLov
5om3IbfC/J69nNkPbEH9VOT10w0P6t1YDTf+DJ0QF+KYDzLzUY49ITsGWxYP
gu16zr6ZPUzgqXDZeCVXxXzOnW8+nOPUv/JczVHHhtnwJek6us95ulbyxcWM
4Rm48j53LfHYYEfqm3zrW9+66du9cmEiLxzHR0/hP/mTPzlxNGBk+qHIFTF2
XnnllW+/8cYbJ16GsVcPk2IL4tdwBja9ucxXMw7tM/G+crCumr9hHGEZ5r7f
ql5OfVjUF/7KV75yqtNhnOeHwCOt//xUfVnhMnxHfA++J6zU5hh8VLESc6Qe
03xPfit8Q31j/q1jnquLU51S37XBVGA/9JTaQPphmI9f/OIXt97vBQvOhBws
2BTszDgI/6JHjevsTWPBmLF5no73eTkn8T3muI7zYdwZh/Awx/ab5hT8ecfI
zQkbBL5B78E3Wldnzaujruq+803qHV/ekho8+lGrwaGHgfu78dSVlfstYrls
lmOuG91hbWDLxP+rF0oxlGIw9Wpjv+QnZDvZR82v1TUrK5ch8tP1S1FnDe/A
HOY38J2qDxyX/Ngf9SouRLkm1eA412P6iD/ku0zMIozkQbVD7cuu+dCHPnTa
qgPwbtwNtlM8jckhYQf7r+dqFPgfcuvUPuCXFWdyLD4m/r44sviRz4sp4ujj
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
DmO31zvF5nk1JH2nHJfJB6gnFa4fbMNx6Ei60HXH0V65HpEPZe2U22mdMvat
v+7LrP9QParZY711EW4Rhs8Xs87DN9z7anP7Xj2H7M8uh1ng7VgX6z3kdT1T
jTE2QXhatXKqx20OwWfM50vkPD1IxPzZPPQBnivbiU3gv7EfzsVjjn3t84Nd
W/MGtgTfcA/dC7irOIpju0Yrj0esIfSd+xavhj1Z3aHwu4lfzDi8eeH+ZXO2
eV+sj50Lx7tN68TK/xbrvvktzituQsfCJePvVIe72Co9aVyElYVl0pX0rTXT
d4038QG56ysrK48m4iTl68qHZrvLe8W3FAvCGcUrEGuzqXtjDRBLEP+EQ+Bi
yDVhs/It2P78Brim+QvzhkmWhwLX4M/LYYGR2PgRsAb+P7/Csdjcjl0eL3vb
47EG8eR7Fn+ceSjn8lns45zxy/kycBR+UP0V4tc6d2ud3+UjwSyyO8Ss/Cf/
45lnnjnh8nyquO5sPvY+u1581L78JPFffphrxN6DcYj7wIbYL/ANvsfKysq7
C39Ift3EZfHH6BVz3FytdrDXdIp+KLhiYq3mH04y29Mmj97c5E+Yp7j+OBqw
X7gjHMMGE/a74re31V6V5wNjEFuH79Kh7DD2Gr3l2vFtq7cRZyOdTEey3eot
671qFrHVHIe/LW+l/rJ8YDoSto2nvf7ao4uxiG8Jj3Bd4VJ4hDA9GEc1EWd/
wvCOuS66/+YJPAo2IXcST9N9nr0kqklbPoWxUu0J95fN7rW6NdZz+KOccviL
td/cYkOwKfCezKPbOofEiNg8dA+80PoOX2XrwPeO/I2r+tpX74YPxPbBcYn/
KTbk3sp925qUj0fwmOHcrjd/s7ja5NYUj5816sOmJg8nOzR8wxxhG5qj1ouV
2y30GR3pnsbbZmOUk2KMNB7CNmBj9YA2ZjzC+h3DnC9u4D22zMrKyvuX8tjZ
6uWm4At7LibK7uUn8NvlX3u0bss359PLI7GGi/PgcPDf8S+s73wL83TiAHx5
thffAjbiGPwInHE5L9Zv9pC6o7Bu6ztcwDoRD9bacc4+KO/tWJ/jGCeZuSls
MLgG/NW50k3FqKopxaane8Ll2YpwCzagrdoa4sLiUjaxFu/Jr4GH+A/sFfk3
bCA2imsnLub/8q/kw8s5hm289tprt9bWW1m5KYFz8PNgEThZsEs+Gv4AXjzM
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
cvwFlwO+C89QL5Z9K/8BH4f+xcHEofAeHMQ+1m+4BzsZlgAPwDUoR8I4oify
13E/Lrnkki2+4f3GGJ1gDKlNq/8pnQNj8R3Hg53gk7ArqitNF5VjmO3tN+XE
yreR4+L8YAjiKPr70PHGeHkxzsGx/H4YHtzVecJExGTwK5yH62TrxG+qf6r7
UF1P76cLXZdzs8Z0f7w6bzEfeD17ye9VC9T+7p3f43+wkXA84ByO71jlv3t1
DjgbuCStcenjtrAL19q8Xud0vxte6f7CbTxreS/unXppIyMjJ0/U5KdjVhvN
fKdT6TT286oT6gGOf6kmE52x2gH+p2/4fmz0kZHTIvANNa2s/TCN+imwTcQ3
rNnsCTZJsQav5hGbAZ+zXvR8TDEi9o4Y8RNPPDEYx8gmxoH6acaU2Bec+Jpr
rtlsPZhG3AA+FluRnSn+ZzwaX9nXaz3E4mPsPD66zd/etz+eyMjT5Sc/+cnm
J8RHFAss97z8+WKCa5267OzVti5eG6fD+qgOxMh+hL5VS0mfCT4afWwuedbl
fp2Li+OZe6bsHLqe/ueP8onoer6wXir6p+DnTe7+yRF1fuVrwzXU3YE1yDMK
09ADDd6hVpG4Bf3ADlbbQh0uehWGUO8PrzAwehk+rY4Fv90+1dCgI+h2Ot8G
n8CfoP+NKVwCtoPxFi5BD9n8H2YKb4NbqxmiNywbxXFgbrhKclfqLULvG+vW
DOM+vonj+S12DA5S9WnYLHSWz9g8Xr3n3MoNqbdyuILrs7b4vuPYHzcCZoLz
4frW+Kj9HQe/xXHlC7ln7g1OCX5MvV06f7gHHkd58isuudZ3bv1bP68ubNyO
8oU8NzgRvBJXV47oyMjIyRNxB3N81Ql0jXWbXtnN06MfzH/4Bv0e9psNQM/Q
YTiaIyOnSb7//e9v/TP1lINXGOd8HWu9dRj/k20rXlNdR7ZIdbfYOeKEOBxi
OGwjcT6+qz5n4++M8IXUZGBfGV9sQjraOBHXWnvbGWOwDTYqH4tvRW+z18Kk
88ficVRjNFuU/vYbUwfxZ0V+ENu9nmDuX30bi3uu/I3yO62Ba3/0auP17Owr
p2383v0JXY6vpM7kzTffvMWg6fDd/rC7W/F2z5Puhyualzb1AsxZvFZz2Fqh
FvXIyRL48kMPPbTlJXzgAx/YanDoh6NerLUaF0IsA8bhFbeOTcAeZgtY/42D
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
Dz+cPlefn13GH48nHHZGh7MzjSkYiP3kVo0cLnqG8k3xMuof4J5bA+tl03Px
P76WfG0cDtiS+ZwNveY1eA6eGzwL/3xkv8IvpMdx+fl55l69mG2ed/0oV07O
Wo/DZl6ad3wxeQPi6fITxcnF1dVkGBm50BJuZnzBQsRC4B/qfcAz6Bh/P/HE
E9v78mvlv+j/hpsAj8UxUs/0l37pl7Y6F+wY8ZWf//mf396TK2lcwxzoQuOc
jWLO4ILA0/kC7BebuWI/OK+5xHcwP/ga7KHyV8qT9D7MAmfCmmjOwDuaf/B7
WI3cGnhLeS71QaiW6JrHuealnI+/sa6t4f9sM/oc3uPeqIk1MjJyMoQeFCPO
bjOnW8/TRWy2aiJ6j96iw7Kts53DPOPfw4VHRk6rmDu4ovhP8rXlulqX2QKw
CbmibAL4BizQ3FgxjOxlfMx6mlUv0vvsCvZDOaiOyQ6Z/M/TIzjHMCt15eAb
8lHgFOJWOD/VpT2sB6nxRG/DP/hiYkzsPvwhvQEdw9iDjxlD+V+wa3ao+LI6
+2JyYmIjh8vdd9+93St2tmfBLrf+uY+tdWv+gvsNL+In2De+Rn5wm+fnmDAt
9UtH9it8QL6eegUwRvy5uKxwqOYSP22tzbub609/m48wRj4fbExdWnwsfL+R
kaOUeB8/+clPtr/jH8BD2BJ4e3feeedWY4h9gYuKk4rHRO/hddBlanrgkMqf
xGWDjxvX+r74Li4IvJwfUf0Mdov/rVN05opvmEfVH23ueN+xnYe8GrEi9pFj
+T6OCB6FV/OT/1FN0bgb5anUG+F8NTcOwzfSzc7bb8A29Id1T0ZPj4ycHNHf
sly6uGK2Fd8I06i+aHqpLdvbVj1keofvNzJymoV9oA4Y3qIYBjsAriHuIP9e
rS9rpHW+uqLWXOuv98XOzatyVrzyPa3fYiTxoM1DfBA5tOxw+eIjJ1fYlnKp
jR050XjruBfxN2BkcTfo3Oo8rDEo79Gz4kvsSq9iWr7PJhV/U+++GFf8XXab
mBt+gTGLkz+5KecW9f1gRnJ42Olrf/Ryytbak+Y6n1b9Bfut+d9rbVHPBIaJ
bzP5KfsX/Sz4eXQ5nNCzwX3yzHF34BvmUv0l2ET08opflbcv7m0eylVqfsIc
9cCY/rAjx0nq8yLfRf8sc4CNAddVW1PtDpifNcorjKPeJXJE8CzsC6eHh6hP
VA9tsU8+Ap/BVg/GclTKgw97hydam3CeYO/mW3U++CnWN79b35fqkdKl6eRi
smGQ58pHOV/vFL9pzjsX9hwMB+bivoyMjJwMUdtszS/1N5utHBXYBr1BD7G1
xRPFlukp+8QtSzfQKXQULtfIyGkXsRB2sVpefCB5qDgb+M18VX+Lw/MpzaO4
k9WuwsnwfriH99kHOJphG+aV76ntxRcWa+cPif2PnEyBJ+D9qA+nBjOcAY9C
nIhfDMsS24dfVDttjUV5FZ9i9/Gh7C8PGp9W/As+Ir9FjI3ujjvE9oOfwd/E
lnGSjanhzJ9bPCf15eBFfF33slihv1duTWug+cvHrT9s+QwrvmF99ZzwHAff
2L/g7nsO5iQeHt3M5jF/2DTVXOGP8dH87Rl6viuvyvM3F/Gn4Ivmozi0+ab+
9MjIcZbqmspvgXnA4PV20ftHjRq9RKwb+gv93d/93VbrU5zUZ/wJ82bluVVz
FA7hfXMKL9U6ZL3yeT296gMGU/BajQ56l+8Rj8rahjviPfOzXrP5Lfku5cs/
G/4GW8w5iT2Zs2JKesTqazZ6emTkZAj9Rdfs5pHSCeGgNjY0vaKPFNwUrlk/
y+LOa/yKvpk+aCNnRR5++OGtnqB4g9ri5onYnxoK8I3mTLGK8rzq3QnfsL7X
890+/l99WfMQXqJm+t///d9vm1ph6qqPnBxhN/KjxIhxerMVxfthEcaJOqG4
Ani51Xgut3jNK643LF/KeMOdF+Oq7jz70fjihxXTYi/yqdV88Js4xxOTOr+Y
Z+xc9nZ9dq1z1QZ2z1f8wpy1Ploz7e+eq0u5+sGen2fLhlZXFkdkZL9SruF1
11231feFS3t+5o5nvub4h1nV82q1n7zPnyv3SL9ZfCqYifyUqS86cpJkzW+x
6WWrlqla6urnfvrTn95q16hNgRMIn7eWwR6sP+wc84EehFPA+9hK1h5rHazD
Z9Yp+/oe7qo4qvdh/HSveJD56H92lTogYkFxyM1Fv0PXHlYf6bA6G2u90eav
79DdYgDwm7iVOCWwz+FfjYwcf1FbiH281hleeyrFo4e74oVZo8UYxSTWOom7
vGk23w9/+MN9X97IyJHIo48+uvE2zQ3rNbsYd7I4Oi4nf5W/KX4R78l6Xt8i
NnE+aJhh84kfZQ1XW8s6a23HA2UfiAdOPe+TIWxD2IYc/ze+8Y1brUHcXnYa
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
RHCVqaFy8eXrX//6wStf+cqf4o50gGcRtlhemPfo1vQtzMO24leeu7nNt8J9
lec2uWIjIxdX1C+CRVgX6Wj44m6dJPr2sFrQYZjsMjgzfY4fKW4gB19+qvyU
e+65Z9+XOTIy8v/lv//7vzc/JBu6enRsruq4l3sWt0M8ly9DxGl93/q+4ht0
hhz1kZGRZy58T1iANVg+AbyAz6weZbkM1l8YBOyD/9z75uda27v4fjEJm7gi
Hxk2wU92DL6TtT5+QfO+XNP6zvpNHHvfxw35lV/5le071ne1B/Dn4Rp8azW3
+Pc2uImcF5gBXsQnPvGJDUtQo5NfSAep3SkW7fX5+mt9H44iz8Rx4Sm4ZPrV
8PH9tlrn6lB84xvfOLjzzjs3P0ONg+uvv37rLSKvREwe/uv8XRPdCFOAL4jV
62chL8H1w3zlD/BD6VFYg/vlOYj1qAnpc9gHW2m3l6t7CjfxGzDm+gBXL9T3
5Juwq8Tx5bv4rbVXsGfv+34PJub34DA4JrCzqfV8ccSY00cHzmfuVn+jeIHx
wpbe5W+Yr/WPPazmqM/i6sTnMad/+Zd/ecPePNPJNbr4ovYOvQbDMK/pwvLM
bOZvvYrYR/Xkjuu2xoS9D2M23+l2/LDBHEdGLq7Qz/BEeL+5DF80D81jdhRu
lvm99vNee3mby3iRbDJ2UvEhNUr1SVODSV+5kZGR4yHyxdhf2drmOjvKe9W9
a363D5tMLFP8SAyxvrHZaNZwa/f0ShoZefbC57/yyisP/vEf/3FbM/Ej4Bt8
G3OPvRw/I76FtTcMwisbmz9lbvpOc9jf3reWW5/rQctfUsNf3a18MK/W+mqT
emUPOBd56GLIemLytfHn/a1+F53Azq+PbfVJ4TbqFKhbIXdF3soDDzywxaDl
goh/33LLLQe33Xbb9h7dhFfBZpC7Y4N/hInAK+S9qB/kPX6e7f7779/8EfwL
NQrU07z77ru3+uliOP6Xp4GrgePvPMIz9GxUS8P9Z7O4RpiNeI/YbDk97h18
R96tHF73AwaCqyK2y7elS8spcc/ZRvisK3/D5h7Tt+69Hizwo/wn99xW/hA/
1711LjAp/B3+lt8J2+L/wj3wRvShVNcdJwXWM3LxROxOrqbngoNjnNT3xnOC
ixXHX/GN8/VVgVuZc56948WhZJurA2MNNneGJ3lxBQbBpzGXd/lw5ic9Zx6a
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
HV86yWf0Bt2VbitPiH6jGw+LCcNChms1MnK0Qv/SxW9961u3NRU/nf1j3WUL
7Pbnpoetx+waunqN+5jn5nj1yHBo5e7OvB4Z2a+ITfBtiktaq9f6wOY1f8A6
vmIbh9XgWXvFqoH3yCOP7PvyRkbOpKgrKWch7kE1ONd4b74Q35v/Lz/kN37j
Nza/OT2w1r8sn8VnjoUzIeeU/+1vNr51329Y58Wp2Qxs+3yuepl6z35sA34C
u8L7fH8YRH1AbHAa+S82uipcIf7Yiru4NseGGcABcPPVpKjuKvzCb8gvgWvw
LavLaeOj+B25K159Z70P5ZvEN19xXvdGXgy7ye/7btftnP02Xo1YD7/Wb3h1
7T537xzXs4IPO5YcGTVRrrvuui1fGM4Bl4EHyT0oz0aeyvBhj6/od6Qn4eWX
X77xbWBVaqfIjSpu2DhrXDffqnHV+/Ezyt/yXvlRYZcrF6j+zLhIL33pS7c8
NnkXI4eLeqLiuuYcbMOr+0ZXlXPSnDbHbfQUbIP+KE+IjqSvYBjm9RoPTm/x
iUZGRo5W8CvqjSYWgdMp1iCnlc1Ef7a2V0847vrqA8XtYF9Y19k9+Bv6Rj72
2GP7vsyRkTMr+OzW7XLOigkVC2IbWZtxrs1f9lZ21lqnY7cmKf9C/Hj60o2M
7E+eeuqpzZfiw1uf+e/mej5QnAT/s7Px5eEB1vq1h2n2fNgBrJPdjsNBR7D7
2fNeYSnsBbx7HPzXvva1G3aSXvH9+pCEE8QP4+PFM6kHhPPml+GIvOIVr9h8
evuvvQlWHke9YpwDjKF6i3RX/WjhG7AU+/BFnBOMQY4MfAdewO6RN+A63Yt4
GOHAzttvFm/3mWPDRPRlcWz/h/n6m4/pPjs+bgjuhd+op0r+qfOBv7C/cFDY
SnfeeefWY+Htb3/75hezo+Sn+C08ANwNMeeR4ytyQ/jLOE84PvBHYwH3yXj3
7HdzQ1fuVHU1wiXX/sL2gzuaW+aQzTzAyTSvjHPH97cxribej3/8433fkmMn
dOaXv/zlg6uuuurgX//1Xw9uuummg1tuuWXLZSvHJJ0Y940OpCfgpOZyuXTw
Ddtu35S4bPTI9ddfv+9LHhk5c8IuwcWoR5z1WaxBXVAxiPANupW9YF23z7n6
dMM+7EO3WpPl+A5PbmRkf6LeGDveOrvy0Ft/2Vz5Rdbw+LD1Ytitl9Xa7Tts
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
XvlgMRPdBpuF/2QzxFX4jT/84Q9L/dWK4ogCPlGuwZwTNah8DppTvUbVkVnH
6aGTGpTMjre+0yssPb74HzQbZ5555vAdLrvsstlTTz211F+zKIqiKIr/ELQc
mzZtGvXk9A9qPD72sY+NOID+Afcg9qfj4FOYW6K2RX89dbDXX3/90HDzNdR/
HH300WNGi/5felrwLaa6b76FDV8hXsCb0InSVvA5wl/Ir4g/MsMEx6GWxLF4
En6Ka4puxLnwM3gO13TjjTeOnqqu1XfhB2U+rjyu2hUcjc/H6cjf0H7gesxa
uOuuu2aHDh1a6n+eoij+A+An8RF4WesbfykewndY/+rs0pswMxhwG2wZ++N5
6ulwHDTxN99889CFFEWxeHjppZdmu3btml1yySWjrsS9H0chf6E3qHrX9AFO
rmTat0tOhX8iz2Fdy8XwXS6//PLZDTfcMO75f/vb35b6axZFURRF8Srhueee
m23dunVwFupWPvKRjwxeQK9QPoHNa2rPxQt8AblRGoeVK1cOv1/tiZyn/Cgu
hC5iOms+eRSxhHgBp4GXoA8RS/BP+CDpC4a/0M+UH+L9zDtxnHM7DmfhGFoO
9fL4DdzG7bffPnQY+A09Q/EbvovrpOmgRdFj0KP8je8lL6QuxZyZ9g4siuUP
/O2PfvSjwXXqwaO+ZNWqVYOfpT1TI5e+g+npgy/F6+JU8aj4Vu+zS/Ri69ev
b21KUSwycA9yMV/96lfHPTz6T3kZ65svEX3GtF9w+A3rmTaV38CH8De/QE8d
PbZ+//vfDw6lKIqiKIrDC+a/89/lNNR6mD9C66AOXVygnmXbtm0v123s3Llz
9o1vfGPkU/AH9Nz0EeIGORKaCzkVG923LblS79kHV8E3wWOET8lz54svgutQ
93L88ceP3KvXxSMe8SrmI8jTmhFrTi1uwyxc+9NnqGPBZ8jhnnbaacOvufba
awdX4zvru8p/qva8KA4PiInuvvvuwcnSddlo1b7+9a+PmSrincRE7BEOle1h
v3Cm7FX0ZOpUzF7ZsWPHUn+tojji8MILL4y1rD+W+7p8Br+EdkP/YD5CZsJa
sziNaW5F/oQmVU2q/sHWNv0WrkSvrfYLLoqiKIrDF3//+99HHSou45prrhn6
Bj019PB89NFHh7YBv6EX14YNG4bmARfC9+c/yKnIgep1wYdIvw08hPhBzbuN
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
HnyVpA==
    "], {{0, 352.}, {1080., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1080., 352.},
  PlotRange->{{0, 1080.}, {0, 352.}}]], "Output",
 CellChangeTimes->{3.9194947979824476`*^9, 3.9194952645296283`*^9, 
  3.919495432804531*^9, 3.919495523155803*^9, 3.922514183428556*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"836b3053-7f55-4d82-bebe-6470aa8237a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<pics/4738-v3-fixed.png\>\""}], ",", "img"}], "]"}]], "Input",
 CellChangeTimes->{{3.919495649245905*^9, 3.919495713461464*^9}, {
  3.922514098524399*^9, 3.922514100625903*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"d4bd4d7f-3052-476f-ba31-5ee4a8bac619"],

Cell[BoxData["\<\"/home/jam/Kuweta/mma_lessons/code/pics/4738-v3-fixed.png\"\>\
"], "Output",
 CellChangeTimes->{3.9225141835838947`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"62869806-275d-4f5f-93e2-bbe78e0e7cc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<pics/4738-v3-fixed.png\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.91949596391048*^9, 3.919495977709751*^9}, {
  3.9225141039314528`*^9, 3.92251410601758*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"02c40db9-a45e-4489-b169-45c230c849ca"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qf8vnVV/3Hae+9pVrbLdmZpy4YmlVphW81RWpooRWlLaaCimCaO1BAT
BSWEFBCV0AgaICKIECsJLBNcpJLV/e959Xj5v/r9/SvT33ec8+Di/v7u+9rX
9Tnjfd7nfG55rwfd9b4fvM8++zzkI//7f3e956991/773/PX7/aJ//2PH3vg
Q37xfg+8z73v+MCH3ud+99n/Nvf6kP/+8h4ftM8+t/nQffb57//22YyMjIyM
jIyMjIyMbP7zP/9z8453vGNz2WWXbV73utcty8UXX7y59NJLN1dcccXm8ssv
35x//vmbF73oRZs/+7M/2xxyyCGbww47bPOsZz1r89KXvnTzyle+cnPyySdv
Xvayl22e+9znbo4//vjNS17yks1rXvOaZV9vectbNu9617v29mWOjIyMjIyM
jIyMjIyMjIzsMIFpWP793/99c/XVV28uuOCCBZ845phjFmziFa94xebss8/e
vPa1r938zd/8zebFL37x5ilPecrmEY94xObnf/7nN/e73/2Wv5/97GdvDj/8
8M2Tn/zkzaMf/ejNb//2b29+7dd+bfM7v/M7mz/4gz9Y8JCzzjpr84//+I+b
q666anPNNdfs7UsfGRkZGRkZGRkZGRkZGRnZAQLTePvb377wKnAzLrroos2p
p5668DPwL/AynvnMZ25e8IIXbI477rjNc57znM3Tn/70zVOf+tTNwx72sM0P
/dAPbX7gB35g8+AHP3jzhCc8YeFzHHTQQQvu8ZM/+ZOb/fbbb/MTP/ETm+/7
vu/b3Pe+990ceeSRm3POOWfBOfBAcELe8IY3bN74xjdu3vnOd+7t2zEyMjIy
MjIyMjIyMjIyMrINBE/jP/7jPzb/9V//tfz9tre9bak9OffcczdnnHHGe+pL
/uIv/mLBMuAV+Bc+H/WoR21+93d/d1nUpOBmfNd3fdfmm7/5mzf3ute9lvUe
+chHLrgHXONOd7rT5nu/93s33/Ed37H56q/+6s3tb3/7hecBP3n5y1++OeWU
U5aaFpjHwQcfvDnhhBMWvMN5jYyMjIyMjIyMjIyMjIyMjOwpMINrr71286Y3
vWnz1re+dfPud7974UuoOYFn4GmoH4FrwBxOPPHEpd7kwAMP3PziL/7i5qEP
fejml37plxZOxs/+7M8uOMb++++/+bZv+7bNrW99683d7na3zf3vf//le3Up
alb23XffBdOAbdziFrfYfMVXfMXC4Xja0572nuOpc7H+z/3czy3HeMYznrHU
wqiTGRkZGRkZGRkZGRkZGRkZGUlwNd785jcvPUPVhrz+9a9f6lH+5V/+ZcEy
/uRP/mTBGPAzjj766IVXAed40pOetGAbP/VTP7XUm/z0T//05ju/8zs33/M9
37PgF/e4xz0WbOPLv/zLFx7Hj//4j28OOOCAhdehXuVHf/RHN9/+7d+++aIv
+qLNZ3zGZ2w++7M/e6lTufe9771gIb/wC7+w7Oee97zngpnAOH7913994Ycc
euihS98P5zkyMjIyMjIyMjIyMjIyMrK7RX8N/S3MX6I36EknnbTgBnqInnfe
eZujjjpqqQ3BxYBL6LkB88CtwMWAbeBmwDZ++Id/eMEzvuZrvmapO4FzfOEX
fuGyfP3Xf/3mDne4w+bud7/7gl888IEPXLget7nNbRbuxqd8yqcsy61udauF
z/GVX/mVCy5if9/93d+9ecADHrDwQxzPv293u9ttvv/7v3+pZ4HJwGhGRkZG
RkZGRkZGRkZGRkZ2l8AD1KFceOGFS08N86Hoc1FdCI4GnANfw9wmD3rQgxaM
43nPe97SG0NPUXjHXe5yl4VzoY8o/OLLvuzLNl/8xV+84BIwCryMz/mcz1kw
C1wN/A79Rm135zvfeVnvlre85YJtfPInf/LC4bB86qd+6uYzP/MzF7zDNg9/
+MOXc/imb/qmBQ/5vM/7vOXztre97ebHfuzHlp6mOCgjIyMjIyMjIyMjIyMj
IyO7Q971rnctfTb01oBh1Ofi937v9xZOhrlb4Rrmfo2r8Zu/+Zub3/iN31jm
hIV9wEL8+453vOPmW7/1W5ceofqI4lzAK77gC75g81mf9VmbT/qkT1owjvAN
eMZXfdVXLQuex5d+6Zcu9SnWtcA2rP/xH//xm0/7tE/bfOM3fuNSo/K4xz1u
mWfl0z/90zcf+7Efu/mET/iEBQP5/M///AVTgYHoX2pu2ZGRkZGRkZGRkZGR
kZGRkZ0t5kYxB4m5V08//fSF94CfgYuhZgRHA27hO/01/vRP/3Tzx3/8x8vv
MA7zwv7t3/7tgn/86q/+6lKHAoNQZ+ITjqEeBWcDHwNOAYfQOxT+Afvw2+d+
7ucuGAiuh/VxNSywDRgG/MJ6eCFwFz039CL96I/+6M2HfdiHbT78wz98+bv1
cEXUqzj3v/qrv9q84x3v2Nu3emRkZGRkZGRkZGRkZGRk5GYQMb/eoWeeeebS
a0OPUH0+9c7Q1wJP4ld+5Vc2D3nIQ5b5XPXHwJnQ29On+UvM3XrxxRcv+IZ/
6xsK11AnYsHlwM1QP4K7Ad/wiacBg4BdwD3gGLgXX/IlX/K/6lPie8As9Oxw
jMc+9rFLDYp9fORHfuTmQz7kQzYf9EEftPngD/7gBeeAn8BX9CvFI1H/og/p
JZdcsrdv+cjIyMjIyMjIyMjIyMjIyE0o//Zv/7b0DD3++OOX+VDgE+ZaNUfJ
j/zIj2zudKc7be5617suc5Xc5z732ey3337L9/ACGIZeoeYvUauCv/Hnf/7n
C39DzQncQq3JN3zDNyzzwfo3rOJjPuZjllqST/zET1xqSOATcIyP+7iPW3AM
WAcOB5wDpuE7fAzb+h5fw5wtf/iHf7j0FFW/8hEf8RELrrHPPvssGAd8A+8D
pmEOFxgLzAQ+YhvXae7bkZGRkZGRkZGRkZGRkZGR7S3vfve7l7le9RBVv2Ge
VhwN/SpgB+YlgQWoH9HHAg8Cr8P3aj58j0sB6zAfrF4Y+nDYHncDVwP2AKf4
2q/92gWbgDt86Id+6MK3gG/gdKhdgWPAN9SWwD/gHbZVo+ITHuI3633d133d
Mi+t2hS4CdzDPuEa8TfwQ2An5m7BOcE1ca6+t3/1L+prpl5lZGRkZGRkZGRk
ZGRkZGT7Cu7CW97yls1ll122ecELXrBgG2o5fvAHf3DhOzzhCU9Y+mrANfQG
hSnga+jFoTZE/ws1J76Hc/i3Xhz6cOhDCs/QBxSeAMfQVyMcQh3JR33URy31
IzgdenD4DX4B/7DAIPA4YBT6jMI3fIeT4bjwF71A4Bv4HdWmWBwDlmL+FpgM
fMN8sf7tfHA97Ms5miPm2muv3duPY2Rkx8s73/nOpc+PPsb0j0//xiEzH/Xb
3va25XPmdB4ZGRkZGRkZGRkZua4irsDbuOiiizbnnHPO5vDDD19qTsyxGsah
TwUuB/wAxgCDUGey7777Lv03LDCN6lR8/8u//MubE088ceFFwA5wMOAIuBqw
C5+wC/gCzEOtCOwC9lF/UDhF/A7bwz8sMAwYiHPRE+SEE05YamLgL9bD2YBt
2B4Wcrvb3e49PURwNw466KDlGq0LW7EODodaHH1HzjrrrCXOGhkZuXECs4BR
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
f6tLFecMxjEysvOFvy8vIadpjhH+vj4Zemv4W+8o+TtYRD031YGwbfIX4ncL
bAKf4sEPfvBi8+AM7DNfnL3j6+N143FaB88D/0H+g58vxmeHm6vQ+mIG+4Kb
wC+sV2+7uNmwDbkUWIPvy6PKv9qf2EOsARfBJWHz+Qf8DTlWdr05Ie1TTAGL
4Z+w22w7m80/cD7ujXsiPyH2KV6wvWuD1cBwXOu67pZ/737BMdTKyPc4R+fm
eOYmsF+YB7+Jv+R+dt+bBxfeRFer/4VJ09d4NrDpqXEfGXnfYsyoi6M3xCkw
R/EJ3SE2qO8EHUE/GaflO8UEYo04DuIL+g0+An/g09M/9Qakb8Ikimf8Djto
bkZ6hq6gv+gIMQFswL/9Db+AAdOBdJb9ODf6FbcML4IOo98ct9qWcsHOtfle
m0c2HKe5aJ1r8Ql95rxhG2yAeVPkpJ2b34ul6ESxE11r32t8w3d0rxjL/pyX
cxcL4upNHndkO4n3FW9DboLuYMPVsXmf4X5yFPFYvfdwv/gM8aTKm/A/jAdj
o14XFmPL2Gx88gnoiHWvYliEcUqn8FXsv9qV8A37bn5o6/DL8DLoCnqKPrO9
9cMqbZcfYp+wjHoj11cn3prfjGnnJofDH3O85nOh6/h9fCV6LdwWzqFuWb9h
9bjy6qMHRm4OgaGz88as+RDlbL13/m3+A7/hccz7NzKycwUPwJjnw8IsxO7i
aDk7/AI1H3KHOAv8aLwCeQtxN7+bXWffYRAwCz44X5vfK0bvbxhDuIK8RLa+
XAL7x+by/eNz8tHZRrUf1cPjYfDjre83fgQ8wfnwqZtjkX+en1EPcj4GOxz3
w/nBVpwH33ttn20v5mHDbVuvLfYaBmGOFeuw8/FBxS7Wh3vwc1yb9dl55+18
HK95X1yX+8KfcE5sPzwJruGeiX1wV3zveHqb4Mvgh3hWsChzutDduDUve9nL
lk84lec6MjLyv4U/o/8vzhdcwzxJfH9jnd5Y9/ukC5oPgQ9PL8UFD9/waT08
MjqoehNjWnxBBxj/MFNjXAxB11jsE4ZBD4gT6FIYCT0KJ7VPn/QFHUzfwkvt
n+6hZ9TmwT9tB6N1DDpOfESf1d9jPY9LWK04qV4d1q1XKJ1Gx9qnejn3y/Hp
TDp5HY+5DvFX2EZzwViXzvObY4iN3A8YsNpEPubkz0a2i8gd4DDBROkOegN3
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
+LkaNX5S/NW1JmXlrsYFa7YvfSMulycKr/J9/C1Yl/7udIv4nh+1p9nTuBP4
NnL+rlFYMoxprSO0Fq69Gmf8jkOu8VpPDR+Bb6x9850RuKG14MOqszBDEKdq
+AU/FHlHZ4tf70zYk64l/gaMEHYqhnjLW96yXVuxQHN563VsLeFVeGpT9zMy
MnKWorYRD5bekadg1+l8doQt4AuxtyvnshoTj1X/K88hfqD3+FxsDv+fr6Cu
EU5CL1a/KkcihyTuwBv9zGc+s8UhY09GRkZOS+Km0W/0WTNh154F1Zzwmb1G
bERnebwYha5rfsGaO2weFKx2ZOR6RUynPhSXwMxS+IY9ap/Zj9U0iIXFfHKo
ejaIu8V29bmEbXiPuLkcKrvrNWy7G5vtvXgCegPii5tnd1FE/AlTlGfXs0vt
v2sm3lLPIK+s1sc8OHNg5VLk5/khsMpqROBF4rB6lMAr6AExmeulz8Bv//Zv
b7OScCvojuadeB9cxM3r6QZ4RrNU6uOz1krEq4FZWUM36wkrEcP7e2pmYF2+
s3y3eiIx4V64rWpwrCnfFNfCtYIHwZysDR/T+sWL4bfCJqyHdTnENloTOh7P
Jh4B3jF82nWHb5hpo3bCPKOLdBZuhMAQXTPXn96At+Fq0B/8fvoEPghncu+c
wU/9TE/RY3BE195evqh46sjIyPGLfBEunnwl3cMPYkfY++aasL3uD+fCigfK
YbDVbDv/AE/QZ9SDw2fCPdT64qzReewJPwIXVD5FjgWvdGRkZOS0pJ4b+gni
4cNp6w/K1xW7wCboKLGf5/ljYgnxIux2xTH4xd7TnBX6T+5PHkt+eGTkeoVN
NkvFrAEYh/woboD9CbOw98Lh5EzF8/q+2Mfsdnwjr7VXxRxss+c8Vg/d4mif
IeYXT+M+6Hdw7KJmQF7G7Bd9M2AYav7xNWAb+qbCKPFfxMdyzh43v9L/y9eB
JbiW9QiDWbhe8jFiMdeGL6NejV4Qy+FRwCH4NXG6fJa/47M9Vw6omLr1KNam
T6yBvy+edvM3rK97fhHOP53FNzPHFnbKR3v++efP+9LfEIFJy3WZyaoeAnYU
Lwl+4ZpbE+tXvo3Pyf90v/I3qiNcZ9hYPz4o3rBZpnxT614uDmfEHNSRHxVn
DrcMloT7CO/DM8KHqg+v/Wt9mmMtr+nseI18AqyDLaZrphf3yMjIWQkOnrlN
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
DJgLneXa6aloHume6lEStVW4PK6R621drZk1dov7a69aR/ra3qiuqh4p6XRr
CM8Ir7YP8ALwhODczQgSZ1t3vVzVNe7x2l+PWDd9+Pj47KRZBK4vLBImaa2c
rbWX91oX6tyKL9xbb+dWLPL0008PvjEyMnLVwgdiW+UV6BX6nQ3hD8n7yLfo
iQ7bYI/ZiJW7Uc5TvodO4z9kW9ae62wSnwk3VF0pG0L/4aXKUYyMjIxcj/Cv
YLX33HPPFj+JbXAo+MlypPSZHqNy2XTR2luufkHNjZTng2+I+eKfVQ+stqVZ
DThp4ppyU3zu/GfxycjIeYr+nfgT8D3xPpsrP23f2svsdXUoxXjwC7nTeE3h
G3rWmJkpVocXuNn39ryb8+FciOPZd1jIRz/60Y2b4fzhTcAJPAcrqAev84rz
4X3+ru/EF/H31HjI08MPwziqU/F7NfziV4+Lo/xvsIK//Mu/3PwY/6fv6jmf
0xzK+gEUZ9Wj0mvqdyi+bv4MH8nfoRfKQYd/+t3fMfMFjiQv5FrxdfhTfCdc
Dmsgp+N/c4O9Wh99Ul0HN7gQ/sJe+ax6sKhL4U/aU9VM6R+DE1BfuGZu1Pu1
eiL7wuP1iq5mKTzKc/aM/Wht4vzASWBP1kN/3pGrE3wxvBd5UpwN2CRswxq4
1QvFY2GE1YVaO6+nW+qN4mfneOYNjIyMXIuwo7iR+ehu8g3yCPKd5n6bzyVe
8NzK3ajvGB4nG8Mf4GOs+AfdRa/Vq5z94HOw/WwY/uyb9VsfGRkZuZzQIfwg
WKxalObTyVXzk2ESuPDyovq7e4z/u3LT3fhZ9ByfV66Pv+wefssnjmsO/+DD
idfUavuZ31Z+EMccdjwyct5iPonZreaUsb/6DtjD9jR7Hb6RzWbPxYRr/OEx
Z0aMXn28GxwgzCAeA4xD/QWuFC6Cs6A+AN7oHqdKrArbEOvjWuGx11OBL+G7
wQrgBOJV8ZDz5e+JT5tR6xw6b3ExfAdnlI/hnMMycbWqIVvnJPneHofn+Iw4
p8XEsA1zTPwvsAjfT15Z/Qlfp5kQzU/BR9Fvx/8Mw/H/4qfIZ/s/YDxqeOCt
Xuta+p76kshR011qetRF7FV3+N/hUvJgsC56uJ7Orimuj/UsRg7DqM7BvoBd
67Wh3sHv9Yduf3u9z8X94eviCXm9tfG39a0ZPvHVi70Lz4NJ1ruvWnaxAgzJ
+fW4Ne0slj+gl+CAdBPdAi9kX8UoIyMjI1crsGo2nD7hW9A97AObjFuB24G7
IddSre7aZ5x+YjuqQ83er/PI5VPEG7iYchtwDfPk+Fx6j42MjIxci4gDzO8z
y08/OrVufFTxE70Dd8CzEPOodZcb1bePb3tYe09n1ds9/mw+cz0AYLXiGje5
Y3+LfuQn13fRa+nVkZFjkP/93//dejmIu9WAiD/sXfuafY6fH+eyGL+6rHLi
uOP8AGeHv+Azwg3CBvgAsAlcB7Ye90EcD2uU3xBH4pCI+2EbzqScPNwFXlHf
Up8P99BXw+/lUOqNw1dxHp1v+d7mq3hd+Iq/63v43WvK8TcnproFcZVYWoxV
rln85bPhGvgu9Tr1v9XfMk5ANbr+V31TcWXgOHqFej9cyWN8HpwB34t++v3f
//1tNoSeBWJDs6z3zMP/zne+s/HrYEGuHc6GdbBu8A05N/wW62Xvtufq8WZN
7VNrzt90nWEc1Vnlt9rT8YHoavvQZ9Pj5g6rcRy5enHt5BDUuDs7bKT16brX
pwYW6Tn31raz7azopePmLPmct7/97cPvHhkZuWqBleNR8FnYEjqHvuGzyNHI
P8BP9V/n04SBrzj4inmEc6y1KXQY+wErYXP4V2zJzIIdGRm5HqE7YBv6HuNl
PPDAA9ucSXGDGApnrBkn8q7yQR/+8Ie3PgCwiOZCduOLiXnWGrw4++KqcsT5
0x6jP/nFsBQ6lO6Um9VHfmTkWEQO1CwO+W+xg/i8mani9Prorn2z4m2I7eER
/AQ/wwLE+c5V2ENzZuvBy1/ALxfn4EG4yemKJ8WnMBZxqPoA/oHPdkadH5iD
597//vdvGEk9gJv7CYfwd+EOzpoY1t/E5ai3p8+IC+Ks11PHGW2+s+/jPT7f
Z9bXo5kc/kef7d776jUi3+/96QLfzethFzivsBpYjhv8Rl2cOh26x89exx+C
geJt6K0+MfVrGzaNs6NnQ3OB+aPhG3xRfBfXuhm9dHh1RWFW9pK6H9fZWjXr
uH6w9pF1rg6JrYD9qRH69re/fd6X4cKKvlfwDWfW2XSuVhtrjZzfaoucdevl
dc4W/oxZQXAu3CvnyBrij4+MjIxcqch7sifwBv4K284OxN2sX5Y8hB5Z8I5D
fKN54+us2NWOVOsodyOHgcdNX+FvmPk0s2BHRkauRcyLU49iprXYQVwhHlJH
J36TY4VtxIflH4ur1K7ID9JdzQVcZwOKm8Q6PRf3nE/s+fKF9KT4SY4QL008
JYaSK+Yrzzy7kWMSWKC5rM4Knj/cIb6lONK+5QeIO4ob7XtcJjlUmKE4H14g
JonL4Gw1XyjeB5svXnGWvF8c47XeAyeAGfAn5GfVasjV8zWcV8+pP4Cn8BXg
IM5jfcrd/A3+iffq7YETAkuR/1XzUq2Y9zm3zYX1ufSC/7Nehv5evTS8B8ZS
7Q2dsc7p8LtzruYNLuJ7uH7+R5/luvJzfA/Yhu8iZoO5ip3Ff64//aAuVx2E
+Up75mwkuCswH2tpb9gv9mKzcOBKsCI1Uuu8q3C46qS9FsZlb+Hw2Bf1euh1
9k48PDpbz1dr9MILL4zevkaxh/VkxVNiY53dehevs5etEYyj+jLrTJ84++rY
8J9wuq0HrGvm2IyMjFyt6DsGI5U/4Xew8Yf1tnQOmwLfkBNZuWbsSzMR6811
iG1U56j2HWdDPS7uGd1ltvjIyMjI1Qq+vZyOXI/adZxm8ZdYQlyES8Ef5kPx
peTp+FF83gcffHDLDa99RePOlsOu5m7VaXHfvab8rlhILBXXX+zGV+Ynj4wc
k8hnqIEwl0IfCPsWxieuF7PjasLpxBxxlzwP97jrrru255s1JF4U6/sMcf7q
O1QnUK+L+lyIdcI7nB0Yg7pYZxbugNchLlUb6/zCPJxTZ6z8e7zQsEj5Xbwt
NSzOHV8GhtnsI76JWLZafniIz4ZjwCxwSuAe5fL9L+JnuWdxsWvhdc627w8L
gWP4HK/zPje+ke8iFySm5jO5VYsLy4AtVUNn3uUzzzyz6bGR1/emuRuuF5yL
HrVXrB99G9fG9Q97rj7aa6xRPV+rL/QeOIk9ZQ/Yy/avvRTmBoOzh/GK5frw
BkauTfQrgU2o/dTvh4/vPFmjlb8RHyeMiS6wDtYXjmrWE04krFCfHvWfsK+R
kZGRKxG5HHNR2F7cCvaEXVjzNuwI28/nueWWWza/4RDf8Br2ne3wnnXOYr2+
6DD9lH2GHun/9E//tNn66d80MjJytYLHLb/DH6VPPvaxj231IXI/zaOjt/iw
1dPzaek4+VSzGMU1K3eDzvKa6vP93HyFcsYe42v7HLGYOMzNz+Kp+r2LBafm
buQYxXwDvElnBW9fjCGuF5/jceoJYX9n4+13tls9l3qBzoyzAC/UC9B7632x
8ivCQqoH8Le64YDALfxN2ASsIM6EOEdMCnNxtuAK5ev7++79HZiF/4cO8D/1
+mZquDmXzinsQ08x8TNsxNkWf3nO/+Jn55f+8D/7bLhlPBT39AZ/STwMx3BN
mjdnHoz30UH6idRjTD2Q+jl1KOYpqROSWxqewA9FTYjcFzwLhtG8HPuKHq9H
tMfWegf7wrrpfQSHC1PzPp/hs9zE0GFwnveZHve5MCncP/WEe+3pehpSjx/+
PV6l+AJ2RA+0Xs4d3EnM0FrVM8W5dKbghH72Xvrlzjvv3DhOIyMjI1ci8gh8
C/aYjucDsPflKtkBvj4do44Rpup1h7NTvIatiLfdc/G52Rk5EDlVnEz47p7n
no2MjFyb4L/SG3gbalL4T/QSPph8D34Y/whHA75R3/x47X7nI8sXe371k9c+
G3wvNS317ShW4oPxzcRlYrDyy3LPYkX6EZ92ZtmNHKv84Ac/2GIQNVz2bv1i
5C7UVIjf2fTsOJ6D/IYaLOdijSthEGJ68b4zss5brV/p2qeruvt6XMAUzFqA
B9bv1LmrbsBrxKX1+l3xjTBJz8M1xFSwmWLY+iuIccW/OBtwB3wRf7caM59N
J4ip/J9wCtdFbYnz7HqIg3FVYJi4G3QMX4bu4Ru5Nrgjzd3VSwSGau6cfkC+
G87Gc889t8Xxg2v8qNiTOHh0p+veLJz6odC31ti6HPaD5neKgfXlgEtZ9/rJ
0Nf0vJvPrI7a2tPn9LbaJv2mX3rppcGkr1PCTusp42fnYeXbOP94W85lZ9V6
WQ+Pe70zRg9YM9gp+z49UUZGRq5E4Kz6krP5cFL2gx2px3T15mwM/WL+tB7f
dM8hfyOOWe/N7tBd9eXCEeQH4a3ByNmzkZGRkSsVXK9vfetbG7bx5JNPbr4T
v8dMSTGGHJzYBD8j7jj/ttl0bnxe+WFxi7iu+GvFN/jAdJacLv3ldc2k5HfJ
6cor88XEhPrY8btx0XFr1b5M/DJyzIJDcPvtt29xuNjf3maj3ex1tjxcAkbQ
LFhnY41T+A/mysNFnDW+QPcwjvDDzpbHmrXsBi9wZnCvYAvy7+IcGInv4B7+
UP/S9byus45gi/o2wBe8h4/ivjoyGKX8PgxDjY2/G08VH8BZr0ewnI9aWmdb
bsf/jp8h1qo/Me4GbBUnQ490/hHM4yd+4ie2GNs1UTNDV+mvgasvfh6/5/8K
voRcG6xIbQr+TPOGmwdM71pfeMTay6FZ3tZWPyXYSPhGPfKtoc+05vR/fZPo
dTbDGurtMFzi6xe1b3plWCszbu69997tLDg7nTfrIkcAl7TGzSryeLNs2Nf6
jsojOJvf/OY3z/vfGxkZuQBi1hJ/gs9yyN1b+Rv8A74D+/03f/M3W1yw4ht0
Fn+ED9Hj2R2fyX/i++NuwN/5/lNvOjIycjWiHuXSpUuvPfbYY6994Qtf2GrX
+U9ydnAFsYgcHf64eI3fyt+l3+ohWn8N/rJ4Rwx2iG/wszwvholz7z31HeR/
15fRZ7jxv+Aq9JtZ13jnIyPHKt/97ne3ePtDH/rQhgc4I80JEYfwA+I2hEnA
Fuqn4Sb3KqYU08ud43F4zPkT34tHxStrLJq/0NxVvoU41tlRtyou8t76iPba
+iTUH7K+IGuNSnNU3PzsO3p9vUV9htjY+cXxwBOpX5jn6Q7xNY6F70Kn4G14
nVgrDMg9nglMlS9DD8GJ8A5wOLwPfvIHf/AHG0cGjwsmO3NR3ljku5p3pSc0
fWo/VlsER3bNYVPwpcN5V7CKuHYwC2tO59t/9iOfFe7hc+wDz9H99po95ywM
l/h0hG2GRTgPeDF0jPNkDZq17rw5o50peiUdQy/QQZ5r1hHsEVcKN2RkZGTk
coKDp5ZW7oVfElcs/bP2oubfy6moWWXTvX7FN/zMZjRLcfVlvFYfZTxYvUmz
JSMjIyNXKnJrauv5SvhfuN4433qOqXGHn/KD6KD60NFVeO/85GIsOolOi/fO
zy1WiosWv0P+VswTx949X5mv5nvAfPlfHpNvwk1Tv02/Tf32yLGJPen26quv
brxxfRzlWNVx2cfNQxF31G8mjKH+Gc6O+MP5wFNg1/Gm4ID8h/ruOhs4oeLM
1SdY5xB5zmf5m/Eh1Nj7PvyQFVvpvFZnFherHqPFTHK//hcxU31F/Z3mTqol
g23ItfB5mhtTb1D5G3wLfYpho81e8v9Wp+ZneA4sU7/Q+Bu/93u/t82Fo3PE
d3oCPfXUU1OL8iby/e9/f5uXC9uwl6x/PaHtSbEuPxW+4dpb08OawrgadHe4
lt/tL/sZ/yb8G07mcTZCf92HHnpo49UMd+P6RVzxxBNPbPtfT1C2We8ZeQjx
g7VwhjvT+JW4j3Gz4mv5Xc6VDoFJ/vRP//SGJQ73aWRk5M2EDy5vQ9+z2+7l
buqr1wzEZm2xN/BveRb4eTmUfIvqJFdfxs/yH+a8q0MVl6iXH5x8ZGTkSkSv
DZxU8xThpHjjv/u7v7vlcvTro1vMYZRHrvafb4SL7Hn51LVve7leumrtFdRc
WLpP/k98xqf2Mx3odT6bf+1z8dL54WIkfjI/TXxjLh5/fWTkWERsbR6EuF2s
7TyJFW677batX4QcRFiAswOnqE9ovS6qUxGbiA/xGfgDeEy45/LtxZ1u8Z0O
a0lO4nDAN5wfPE83n1Wepbnz/b7OMuozvKZ+H83F8D/4nv4PcZTvK1cvTvI/
i5X5PPEDPA/zwL36t3/7t+0ci9HgGGJjzzcvFm9LrxH/OzwEToR7YBamOB32
irfxxS9+cbvug3VeXuT75b6sizUS11oz+tbauObqDa0Dvd2eCo9uTo/1DxPz
Ou9t/eloutpnw77YCuuvPhsGNet0OuI6wotwl/S3wqF0r8euHn/OZfNrrI0a
UpiW9ckeuzWXCeYo5sAdt09mjUZGRi4ncGp5EpwMup4fACfF66Tz5SKbicZm
sB/yG/XT8x6Pp4v4GM0nWH0Zdsbr5TlwRfSOmv7HIyMjVyLf+973tlpe8YZZ
lnKjYhAcZTEVPAGXQt5PHMKf5SOJl8QgYiW+8Vr/L0aLl1b8tuor8ZZYpp5E
dF3xEz0pzyznjXcrxqEn+d046b7jzK8bORaBDcLa5DJwDNRR6G1p5pCaePwE
vO94T/UqkO+Adxzac2fHa5wpuRC4CIxP/lV8widYa0biVxziG2GJ8aj8/fK4
PlMNWLUwznIxUfjGOpPNc86ozym+Ld9SfYPn6Q04qHMKCzXvRKzLp+Hz/PiP
//gWZ8Er9AM1b5qPJAcE6/Qa/zffSD4ZbmreC1zDudcHyPUVg+lrov5nOBtv
LvSl3Jdrj4PHX8Szsc/i47jm9oe9udYmubeH0s/pc3ugnrT80nqMWm8Yh7oH
+9Way7m9/PLL21kZuX6hW3Ab9fhWZ8RWwxKdoXq7NlvJungN+93s57XvnzPt
zOnrA2v02SMjIyOXk69//etbDSrdEQeQT8Pu8zHwsukd/n04Bt3jtWwN+1BN
OvvSHLi1ZqU6dvZKzlXO0yzYwV9HRkYuJziu+lfQF5/85Ce3PqJqUWAazTPg
M9Fh8n7iELEaH0lcQ0/xb+mo/N7yuu5Xvv3KN6O/vE+8hXcG/+UT843Fc3KI
/qY840/+5E9ueDCfnK5Uf//MM8+Mfhs5dxFX43GL25wdXA1xuPoucTsOJd6T
HhFsuf2Nt9FcITG9M7DOcwz/g3s0h0L86F7cKRZZeVJhHM2JP4nD4Vz62zAW
OIl730EM5OzCOdST8En8XE+FZjZ7bb1+194cxU7+J/wrfg3/w3wWn+dMe73n
YJPONfxDvwDXRW0Kfha+GIw0fIPvwyfyXWEl4nKvM3cDv+zZZ5/dan8G17gy
oSv1OnEt5fZdZ9iydYFbWXP7k28a5tV+6hZW3Y1PChthC+Ij2xcwLmtIr1tD
uDRegXWbupTTE5wl6+ncsNHWtTnt9eeLf+Usex43A+5kfVd8w9rZC+wsno0a
1ZGRkZHLibpQGAb/nQ/AF5C3ZEPof7lQPE7P14c8fjZ/Qt6S3qkHWfpqtT18
IZ/Llvz8z//8xtuc3kAjIyOXE7iG3gDq2vG93cyZ++u//uutfpcPDDMVl8AW
4A24FOYveFy81OwFOoh+igNfHnjN/635ZnETfSiGowv51dVt49GKd+SaxENi
Jn9fLT98hZ+Mmzsycl4iXsQbwJH893//9w3LYHftT31qxO1+1yPGPpYXlccW
dzgbbLqYDydKPLLiG/XlFSfCB5yptY61ua2HPI0133HYg8N74CjwSpyItT4W
Tul3mCb+Jz6VWLc5tr6v5+XgxT+4prBJsazP7TPETfBI/BUYj8+ByTjjPgtW
ARvFH9CvR55Yj1HX6H3ve9/Gr+cP+Ttuzr6+AvASuNE///M/b/UNYq/pDXB1
wh+ED73jHe/YYmBrFZ/YeuLyNJe3GRth0tVGx+eh5+PzwKHYCfk777On7BV7
GoYGD+P/qqGYmPl0BZ5a717njI3UV8f1tjblE6oT9ToYB9vNbodPWjM2mD23
B5xLPXpHRkZG3kj4Pmw5bLV+52xAPZn497BvdoB9KCfCfvBjvI/+You877DX
VzWxcUv5LuKPyW2OjIxcTvQGwA3Xqw/3Wz5VTQquq5hCTgh/Q+0J3UR/ycPJ
N+NTyP3ROWKXcn30E5+Z/yTeocvW2CudVezGt/azG99K3IV/ZmakXKO+H3w2
PrLvo3ea+hl+8nCcR85D7Du4IO6Ae/M6PvOZz2wxOturjgu+ofZCnOA8iSnF
HOJI+IaaAGcE7iHmlMdYz4qzlG/AZyjOdL7Wvhg9flJNymF9ivwHzKI6WfEN
jIJf4Qz7WzgmcEWxqDyv32ES6kucdzcxEpxGPOXee+N4iHXxq9TGwnmaO+p/
8D51JuYvyTnrC6r2DIfDa+WMXTu4R31D/U4/+Tw+jbmv00/s6gVnQq0U3Ame
BqOCdYVHwDTwdmBL6e5qpde+t6vfSefj5/zGb/zG5qf6DPvJ/raX7DPr7zVw
vEceeWQwqVMUegjOjwtFV1hH/TPYTzOW4In184mjAcOIG1WdWdgm3eRzPGcu
wcwkGxkZuZzgUooF2Ix8An58+ZhqTegd+oi+KT9D7+BuyIc0g6tZstmZZtXT
TXQbHoh+W8MBHBm5WGKGM5/F2cW5hj/IuZkrLZfyta99bfvdvdgKH17+uHt1
cDgNbmpO3gjf9DjclZ6QO5UzhR3wifxMX8nxiGvgG/gU4pp6IeJY8I/hHvzY
erEXe9Fl9Fz1vYf8eXqMPvPZYp7qWWAd/OtmPrkecuDmRvgu9KDnXJfRbyPn
Ic6YvqFf+tKXtngRzoYjrk+mWN38Atymv/iLv9g4UGI/+Ql2GXZn3zsffAGY
Hc6CuF5Msc51dR5gHs5Xs5bDKdaYpX6ghzNTDjkc8aqcXzFoc2edueZCOuOw
RPERvAFe43+CV4h9PS8m8v29z3fzP4lrnXU3n4Nz8f73v3/Ddfg9Xls/Bp8F
rwjT8PMdd9yx/e5n102vElwNvhNcw3wI/Bix8WCaVy/0vb5KYmE1U7Al+TLx
cDUm8Db+I54cHNteae4G/VytYfvPfvJ++xrm7H3wEutM9/t8mBjboQeLNdbf
aeT0xHlQ+ybfUI7BOtIrHqNT1llkzruYojVie625s82+WnfYlHOuT8qs18jI
yBuJGET+QSxAp4ST0jvynmxGfoif5VPYFXmWejThEcr78BHigK81c/wlfpC/
gdOt5nXqUkZGjl/4J+EY+r6Jm8zNg084w/jucl56YcgPu4mrvE5spb+eGMCZ
v++++7YaE7GA1+m5J/bio/js//7v/97u4ST6hn3uc5/bsAKxjPyaPgBwDRgH
fcNH4vvkn+IfN08unvnP/MzPbL5RvlX+cP3aD+tR1hwS7jk/m36Dd/C9+Fv+
vv6BcWNhMOrt6Da+9Ec/+tHxu0ZuuDijcEb5bz1q1Eg4a2Jx50/8hgOl9gK+
ATeEb9jjYg15bDhC2IDYz5wCvA5nSV5jxShghrAAr19xj+oEOlPODbzisBdH
cy7yL5rLtvbD8bMcO06F8w6vjKPlHKpT8f3kh/kY4lffy3d15p1XOsB7fY/6
l+J6Oaueaz5o/A2PqTWh1x577LGtdld/RJwR2IZZEHgarrcbHYavMbjGtQv8
215Vd4gXA59ee2vYD9avHBsMi6/ajBx6PZ4H/V9OrrnE7Ic1h9nxb2EbahzY
D3xi9RJ6O42crrCD1lRuwppZn+rArAEMo16wzp/frfE6B9jZrYe48+98Wzsz
iuRIRkZGRk4SeLl8DnuSrWDjxQTyGh5be4mli9Z+X17LRtBJa8zAn/E8/qgc
Ef6fXAvu9tSljIwcn8TNwL/A/eR3uvHnYRlqRWATcpViKbk2PfX0xFDLjsfu
Nd5vboCcJ3wCr0GOGO9Y3sXrvddrYCHqPMQS9QMQk4kpxGF6AvBJ+aZysXgb
8AwYB73lBlsQjzW3la8kX6eeBSYSl7l+hNXQrTMF60vXHDo6je6Cn/DL3MRa
9KXcbZgMbAdfnX77nd/5ne1ajYzcKOHjw9o+8YlPbOdL3YmYHMYBhzM7GaYB
BxDHOYfucRHUVnnOWRF/1GcG7wFPIizReVjnJruHJcA91hkp4RtrTb24U872
EN/gT9Sjo7kXq/9QPb5+Xb57GIzYyPfhn+idgU8ldyKOxb+oHo0OENPSP75n
89z4Lf4//xtc0vvgOj4T1iGOwu2Ay9J19JTrSW/BNvC26Ea4L305vsz1CQwd
ng3foPNx4cSwK0YW1sXvDGsOr65PdL0ZmgtbvxW5OnGxfcOG2E/2Ow5PeLla
w8GkT1/4DvwD9prtbg6TM7jmGmAZuJL8hOaqeI21dp5hmuIMuIbfYR7O5nAk
R0ZGThK+uXwO20/vV8PIz+HTs/l00MofLT5YMfPshc9Y+R58CfpIja+87W23
3bblZMcfGBk5LpF//OY3v7n1AitvKf+L645nAQcNc+D7wyGcazGSeSVwSzww
NfE4F5/97Gc3nILviHchLuGT/Mqv/Mr2ejGXun84gZhBLhk2IHcnJ6tHAO44
v4gOgS1UDycGgXuYTyLmqS8QnzifqRzPW9/61u3vNoOO/iovmJ4ST/Gv+MD1
QKtXP51Wn/503a/92q9tnFs9DWC1rgv8li7FVxn9NnIjxD4TZ+v3wL7qkwGr
0JcGJ8M5xTlw5nAV4IRiOmcGvsEeO4fwQvG+mNENboGz5HPE+s7WmudwZmAT
8hny4yvmcdij18+4EfDJleOxzoOtV3l9ydf+o57nh/ju/gd4hvgGH8SZbZ6G
s8tncasXT/0o9SPl41TP4L3OsbobM+rF02IquXw4iRhLXw16jJ4z51UsRTeK
w3HXZh7K6QkOsdoUGLf9Sp/bh+u+asZvtc/1dane0P60L+y1FfNgL+xt+6F6
B3H0z/3cz212yJlh06ZP5dmIdXWW8Gfwq5xH6+QsNmvRjX2Xp4ClFns43x6n
Y9hj2KUbXcIvkBuZczgyMnKSPProo5uuh2fw+7MX9Ek6iO7JZ4G7shNsRnPF
Pc9+xM2Gn+eb0F90lXwuzvrMExgZOT6RA/n85z+/5bDw2N2qL8fZ5XfKDcMy
YA74C+IiGIS6ZpiE/CqfEY9cf4zq/OVs+CrxgT0vBsN1EGOJwbzWzBN9fMRe
OBMwBM/TK/QLXbLOPsGbh2/gveJtwDM8TneJu8Im+FNyx2s/5HLG6TW6zOvE
NWpS5IXrQeDmM72Hr+U539W1oj9hQfi3uCt4HNPvbORGCDv6jW98Y8PTYIOw
NWcLfoF34dw4P86r3uFiePG7uF6fRfEB7EJOtDkj9ricqfPkXDkP8ARn67AH
r7NYHcnKx8gviMPhNT5PXHnSLJXOXzl3n5H/EF+0XsDNZO1Muvlu8BiYBmyi
uSb0jse8B8bp/6xPqRiJ/lCbow5FPYrrw38JG4LTyjs3ixpfDV9rcvynK3oy
qXfEBYwHh29Rnqw9Ev617o+1dz2f1B4pJ2ff2TvW3P5mQ/im7u17uAZ8Ht+Q
bzpyNsJ/cL6aqR6nir0tb9C6hkex1/pr1FPLY/QSvENcYn/gZOF9Tk3YyMjI
oeC0vvvd7950TnWpzdVqlhq7UU6Ff8N2yIXyN+gbz3kN3SVm4WfB3vNvfAa/
gg+mRhVOPzIychwi9yFOwqniy+NTmBvA91OrD3uo7sTZlu9Sb4+TwQ+FbYgD
8DbwvMUMcjTyMOIK93wZPiWfBIdDHCFu4mOKwfwstyruEruIUcQZ8BOcCK+X
rxH7rLXYsFb+bD2R6SPxjvoRftEas605v3rR1SOgfC48gx7zPZsX6H/w3f2t
5l763ff1/6sD0HsD/qPXyOi3kbMW/rwYW40EfhQOAiwCDiFXoabKmXAO4Yyw
R/E6PMPelcOGc8Tzrl+Bm3PgrDk/Ps/ZrSdXeY43mvHq3mthCs20kDPxeXDL
N8I33Pxt38vNe8rN199LHOQMwi3d/OxxZ7bz6n+Hbfhb8B1nFOdD/QG95CyH
V9Iv9Ju8Pf1lxjTMEp/FmcaFge3CLvGz9Bn6/ve/f95Lf9MJzqBaPvN01f/o
YSsWFtO2D9L34dOH/B7P2cP2AXyd/aCnvd69mNi+tw/9zFbwVeHT1hl2NbNu
zk7wnnAyxAzxw5xbmKfzbu1a12xyswycU/mOZrvDQqo3wt/EWxuu5MjIyKHg
4/EF2JFDjmg4xzpHnM7hD/GN5Eb4UPU4xmUVj+Bx0kf1CKO7xAn45+MfjIwc
j8A3n3766a33PwxDDCR3GbfCTe8KNSNwDr4nvEEMUd9O78GhUPMP95AXhoHi
CPNJ5Gr8LLaBXYi96ArxBt8FdgHz8Dxd4iav0zw/OWk6ymesdfnlfPlK1eiK
qfwubvP9YBXwjnVWdThteAfd5jvilvjb4iZ/y+9iJLlwGA0dx69qpqD/w//r
mtBt6lRGv42ctTizYm3YBl6B2BxGyN+3R+ER4gY35wqmgcPhXNvLML96aIo3
1typ8yUGdHacP+ewOWnVhhVbnoRROF/+PjzB68UjzpLH8CvW+Son4Rt8C9+t
2NTfE+fCK3E0Oudrf0I6RV0srBRHxaxYest3oFvgPvRM+Ib/z3vgt3oTwjjg
P+pX6Jt77rlny8XIObvG6vXU8I6cvohLYcLiX31NcPjYHvYBBmEfrHuzWoZ1
1nC2wGvtV1wl2Lt96/XhY/aQM2LfuIfLw6/0+8AfGTkbkT+BEdJRa92QcxyX
qjkF9RkOK6UTxBJ4nNawmnjvZdtht9MPdmRk5CShd/gIzakPw/B79mPt6cS/
53/wEeJ/4pHRW/x9fgReOT/Ca934NfIi6vinD9DIyHGImabPPvvs1kNCLQoe
Fx4FLFLuVg5M3MAvgWHgbugTyv/EsxB36KkhrlC/LuepFkUOVZxVbW1zocVT
cAI5YZ+NLy7vzHcR/8AN+C38HH4PjERO1WfKB3t87VdYTm+d0xRPmW8rdutz
T+Izr7MZ/C84ZtXjeT9/yveF1zSjhV/sJnb0f+jnLt8LIxofeeQsRZxQD0a5
brwNXCsxvb0r/hf327ewOflScZ7zC4/0GhyHemiy23GbVm64My9GhAuw8+U9
nD9nyfmI+9R5WmNNZ8f72H7fB8bpvYd9Nw5nMdMV1aZ0jp1H+gY20ewjOqL6
M76LmNb/qkcqDpp4R16e7gince86iJtdAziPmbLq7VxDvX5gG3BaMa86CXU/
dOTI2Ym+k5cuXdpqUuDn6g3Es/Bp+8Z+qLdG624vsSnh0+07r7Of2TD73v5o
zqh9wl+ls+1NNsqcZPWYcOnJ/5+dwGP1JHcexQLxxJ3veJTNTVn7rdSbh99A
JzUr2q0+WTBJ/TdGRkZGVqF35HXqe16dLJ9k7YVOx3iMzYFb8DPoGjlMuAb9
5H0e5ze593p+kNeIAdQ4jv8/MnIcwm8XJ+mJo8cG7oV5CvBKuc16scl54U7I
qznDalOcZ/iGOElsAau48847txoN+Ac8gH5YMVP6oDxuPQD5sXr3iSv4nOWH
0yf8WLiC2OZw9uSKcRzm8eJkxG/lC60YSK+Jp8a38j+L//jBvnu+tN/pPf4w
nrs4SqwoPpIXh9vCfcyJmRrgkbMQuAZbjRukR0G9NuCC+FP2o/0rjrNv2V/4
Rn0k7FU4JKzO65qPKf5rfoHzFpffXld3BROAlYQDeg5mKEZxpuKTd7/mXMUq
buXQ36gmpX7lzXNuNks1Y76rXpPytOEk/k9YDnyGDqKL6BLzmNWGudFFuOv+
BxwWN3qM7tKfBM9UHzA4Ef6G2joYrV469CIcaWLesxXXGLZhjrH+F9bLXhXL
sj8rp9jeiK9jT6aj17nC8fng0GyQPRJHoN60MDs2ha2DqcA2Zrbo2Qq9hQfl
zDUTpdzHWvdeP+9VV6RP6svTTDOfg5ulZ+n0TRkZGTkUnEB5yPSJe75+/X5W
DJU+Yh/4EXRQdsPrihnqveexejrRQ2IePYDGXxgZOX+BbXzxi1/calLkL9Wf
i5XkN8XyzQoRy4gd5MPUKJuPKC8mDybOhweIl8RO+nbId6pTN4eBT7L6neEV
YiqfiwMhl4b70dym5hrEtaB3cOnVwPFtTsr7HuIbh70A6jlXrVz9N/KZ195z
sJo4/r6reC5cxv/qf4//Xt0MXAgHbrDbkdMWeJmzKl6X51YngSekD456CvUX
Yjk87Wa6iunEgPANGKI4D6+SHXbevB5mABtw3qo7qbbLvhcLwkJwmuATnbFy
rD7f3/F78ylW7NHZcs5hlr3/jbANN3/XGazuIHwyDrqcPn3jHMfL8h3pHv1F
xKs4ozgb+ijIydNX1bU51/5ncTMuCCxWTYJrSl/dd999//9sFNd7/JSzF9dY
zAuTUpdCj7Ib/FF7l85t1pX9ZI/R0et+t8c8vup/+wb+IedfXZV9br/AAuXz
9IhS04VPPHVHZy/OGV9DzRg95Mxaj+pR4lPSSc1vPJzZXu8VOsA5NgsKtoEz
ajbLyMjISAJTxe3ip6wz2Io/+BZr32p2Qi6XL4Ez2gz5FWulg7yOXZFrYWfY
rP/H3v292nZfdR//p/TSf8AL78QrwSK9qBciWESkKihSkCBG0GIvgsUWrJUi
sVbT1l+02oSQaECwmKikooliVaKt4k0fXut53nlGpmufnOTsc/bae48Bk/Vr
rrnmmvP7Hd8xPuMzxoDPL0a+snLzYh6KW+Jgs+txMuSIqCMBt+ALsCPZGsVJ
xDxxh9mEsAh+kxpuNj4Tzre6cGr5qLEJ7zjGYLJR6Y18H/qEPQtTYI+Gq85c
En7PMaZzzPeffRqOuf0+85vl7rdvfGf/NX+PXvPauXlOf3n0ml3Nx8KxFdvG
hcd7gQ9tT8GV6xbzVJ+O119//YQb6s8s7wLGyBeEC8qzMDarvdnYxa/gA5pT
5rM5zCeA0fEtfG5ewe9gFOVjVffPZ+WhwB6aW+ameWTr8/jiR3yjejazb+xV
W/inOVmNBedRnzYxdzqlWj7e89/pItdBnpv8En2d1BCCteKFyTvBr4Lv+O9i
M3wi9ohryrc1d/W99nxzZ5+cuO7yq/TeMp7hTnh9bE861/gqB6W1w32Xa2TN
MIbnejFzqcstpN8dA37Hb8bbUUdK3RVYGL975fGLWIocU7qITQFzhEe6h90/
99h8z/eYWOesN2qdNtfZL88999wpH217la2srEzBCxQXLc5Kh7D/2UewVWvC
XDPSLfV3sm+1/mavOHYJ7N0xxH/EXnAAV1ZWblbwgcUt5Z3zzeEbuN9sS7Y/
fCO8gU/Ep+AP2fhHxYHx1/He2Yp8ffU11TCXYwsnYaccc+vZqdU+Z3+mH8IQ
/BauSHkt+VRsHTrlqhjwjO9kCx0/ZxvTXWI/6bT0GTsLz7UeEvE1+FRi5K4N
XKMeLa6D/8g2dy3F1FdWrlPEHsQkxZfxC+Q+6UsKS5MfhkckzhC2YeziVPAP
41+Fz8E85GbAAuSRGcP8wuITcb/zBcsPK7ds8p3gGfAFa3/1PetpMPFHdoFz
eFh8Y8ZH7E//4I+wNeoP6b/VK8V/pKvEZ9S+0du1Hii4VXpU41fxnX2Ox0FX
0XXwXNcVJwZXQ+7PypMVOJKaT+p7wp+MZzwjvq0xFk8nflD4hpwVeLp1ojzC
Y88/zx3DuPSZsZ1NCqeXZ4lPTHfvvX8ygt8o79V9dW+sofAOush7YVjplPLs
jnyu6sfCKPFB8LTkki0HZ2VlZYpYh/VhYhjsfXaTuOrMWW/doH/EbuigmT83
+8n6nvUHzg6nFefkV62srNyssAf4AOKa4lc2Prz4pz4hfAo+CRsCJwP3CrbB
z8iHwgn3me/wIeStO444ivx1cVV64Mjd4DN5v9gse5MPVJ1A/gqdwX9i11Yb
o9qHV/lEs/5x9tA5v4neiisfvgFjcc6wmmrR0XH+J1xWjAh/GoYD23F94DC4
seqWiKlvzY2V6xKcfXlOclD4X2pB8MXFmeGHam7gD8EY4Rb1SeX38fnrZ9ZY
txaLl5qTMILmMf8h35FvUQ1g479ckyPn3+fmhTnbvjMWcuRvwEDYCXGmZt7Y
g/ANeoF+gS+ac+ab+iL+G9yjnrdsC32dnnnmmRMfQyxXjWSxeTotbEMuD1zI
PvJP4EXb4+jmxBjHl2EXyhfBq4G/ieWzKfm1cCxYRxhF9UWNa2PA/Yd7ZYOm
+1tjwqnrFW4cWtPU94BtwMIWl35yokcRfRWeSoeIkeDjuMfhqdXXiBsWxlot
rfwTeXnqH5vXcOD1L1ZWVhK95eQg0h+Tx81eUZOM/cQOyrfIPwnfsP54tPZU
/9i+1hPfs2bJ2ZfTL8dyZWXlZkVdQjkm5iRcAr7JXxLrZC+Ii/FVqtvHnxDz
FTflI+X78y/wGdgnYZg4EI4jPsZOPdYmpmeybdIl9Uhhz7Bx8Eb4YdUQZN/U
I/Jh/KJ49uf6T3rt/T4rF8//4gOpXVj82u+znflXYr7wDXx3ucPqidJr+Co4
t5tzt3Jdgk+As4+rId4JW3v++edPuIbP1K8yf9VfND+rl2HMm4N8N/MnfNBn
5nI9mWETs0bf7AlbH9b8ivLDJh8D7oD/IXZRTBz+oPav8ymPZebMV5uj+qXh
Jg+qM+pY5h/9Qy/hT8Fj9W/yWpyf3nEd1MJRGxTWKC9OTdFnn332xK3CT9Mf
w3uu4b/8y79szdALEPcB5kSfWnP4vdUBtS4Yf+xHGDJciz1ZDUqfsz2NOWPR
d2aNW+O+sW180uWObyzBsD/96U+fuIvGxMqTEzzRervTNewI8xyPrF5M7p/P
3cPy38I96iULD4Fv0HPGgPspz2x5OCsrK4nYkLjItDU8h2+w9cVyi8uEX1gz
rC1sD/aSfcPXi/94DZu1bqnjxM5YbHVl5WbF+q9+HptSzQyPuN3yLOSlsCfh
GMWEy3HHV/DIDpkxW/ZiufxsDXyvuB9iZdPXyfacXPf4YGEObJxqCFSbmC5h
07xbbcJ0V7hJv30OA5m19j33G3AM/yEumt8uTuQ64aZ89rOfPcWGcV9wqvmd
m6u/ch3C31ZjA7dKDsprr712wjfMV3FPPP6/+qu/OuEdsEl1YKzLxaxxMeRk
GKfmYT0lfMZPMCet5c3L4hT2m/zMuJf1YD7W3sL9gC34DXrAnIU3wDXpiHzN
c72Mir/ni16FVzoP50APOGc8Dv9ZDUGYop4XapzzbeQ0wDzE4/XB0CPSdYID
wTPgj17LjV3/5zKELfilL33pNF6tIfXRKAfFo/sPL8erkzdY7aVqJsHE8QrF
4NLnjTO623yYdaHNFxgZTMV4MM+27saTE/xGfgAdUS5RNXYm9ulehrPSW9X4
y+5wX/HU+B/GDduDXoCXraysrCS4m3T/tDOsEXwMcRG+Cz3C16lvGz3jczw/
fMLyeOsvV98V2Id4Ej8Af3tlZeVmRf0tNgZfRD0+foM5bC7zf8x1j2wQ+AX7
wVxmZ9ATbEz2BZuRfYk7zPZUr40eqF8fXWCrH+S5mp/Zo+EN2TnFaib+cS7X
5MjLOPpK/eZVeSzT56Kz2FHV/Ah/8dvVRuY/6V0oRszvhA2Lp6+sPKq89dZb
J0wDlvEbv/EbJ66jmqL6HXpPvQg+PFxNzoV1FQYZr9LcMX7lZDz99NOn2ILP
Gt/msLmNu1Gv1noFzVo04Rv1GJp5Kd5jB9AJjtOa73hyZZyX34iLVc3xcxyq
uOYPwjc6D+dHJ7FH5OrzUf1/usvv6jWJg6aehpqr8nj+9V//9VRTA/b4zW9+
c3GNC5Ovfe1rJy4OjAp+Rf/Ovt3Gc2tL3I1Z3zZOEizemJzjyJgzbuAjxmI9
VMTqYGP4PXK//uu//uumL8O9EpgW2wMeESdj1tQI9wwDjcPjPruPNs+Ni+qR
44jyUfCzcNFXVlZWCHtKLi5MdNohHr0nTiOX12O1w9I97Br+Dj0Dx6gmn3XH
2sK+kkePC4gDuPbFysrNiviwXGMxTn4QTEJMy9xlN5iz5jKdIOcE90qcpFyP
cpnrtcf+4MewP81zmEh9oqsfmv91Dt8IX6hm+uR2tH/9FB6Eb1yVz/+gPP9z
2Er8s1kjIFuZfYyHxn8SE8aF5T+trDyKsPnZ5XAM2BlsQs9SHAR+ufoE3je/
8IvUusGzMketv2GBxq75+5M/+ZMnnoP1unlnjJuX8Tf4BLBL34cdTBzD+G9+
+37zpF6s8TrM+2oa5IficDhm+WZ0RfWBz+EXV9XSmfOy/LX6N/kNm5g/+wLe
of8rG0MvKNdRLGXzxS5XjHd9YOVRWWPgZMf69NYN49Q4tyZNTtCsXW+fWeNp
4htwN+NGnQ4cZZwfv4sjtfLkRe1P2K2c1vLYjnGGcM/0QzaGe0lnwU/xQ2Gd
9ADbQ/6Smjoba1hZWUn0caRnrC3pmewZeoUtAx+nT+Klp3s8x3Nl9/OBypvM
JqGL2GJ6s23PppWVmxcxYrxcPoC5j/uLtxEfw3M1JcSK5bLzqdiG7JB4FG3Z
mua7OIp6G/wrfg2fh09SjcJqgx39HO/RGRMDyc9KD3m/WgBX9YV9N15HXIxz
3JHqlobFzLyVvltvStfCNeFzLl678qgCv4CT/fVf//XJNxfb1N8Dp5K9zg/T
20wNRLWwxCnjLcAl+W7W4TAAXAx8Bp/Xx6Qx7LX95VrhbfENrOlzTtrPONfT
IGyien50g23W4aIX6A7HFedgC5jz9vd+dbnCSea8jId+nK9xpsI9i+HCUPDD
4K7VPZcjo4cMLoB6JfVB2Tq/ly1/9md/dqpnZEzDN2bNllkjKbzd4+yNUu6K
MWEMz3FUvqH94fbsVzVa/JbfhO1vHsPNyJtvvnnK7cSFdG/id804x4xrVGeF
bmMD+I57DqeFkcDH6MtPfOITp1rBy99YWVkh4ht6AcwaYvFGw1GtMdYfdTjY
LvRM+EY96WHo+H/smdYoeomtpXbh1hRdWbkMYQOIc8rrVyuTr8A+LKfVazkY
7E91JtTQNL/TD9P2aGNL2ofNQZfUX9Ix871mf8ljrcKwi2LIR1+HP1XejOO9
X3xjYiwTP8lervb+EWfxudiRc4jjr6+ga7iy8n4FP17+P668Hil6Dqm9h1el
JgEeB8412x0nQ31ffr14ZTV9jUk4hHlRngjuN45GmEKb1+Y4TEC/ATV3fHfO
FXOEHyhvwJxuLpujYhxi5fExzItyBMQ3+KCzDiCMk13gN7w3uVsey187l1M2
60RWN5VfA0fFE1FzAwbjXPWDlYuymMbtEJidNYZNqS4o/MFYO+Ib1g/3nB0J
/6jGdPnP1YbKfp3jJ5/Y92F9MGm5XXhR+hAtt+dmBI5Lt1U3aNoF+RzHGIT7
Cz91PydXTU4tPUZnvvzyy6eYw/I3VlZWiFpb7KXslRnnKfZD51h/9O6Co5eb
Xj0+Nk11RWeurUfxFVjt1hRdWbl5kWsM0zAn9RWQa8E3ibvAF9GDQG0Jeez4
GMVYjnkl2R7FVqu7M22V6hrOWhbThskOLefF86NtY382LJ9O7jT98279U87l
paSTqo1Mv3VeM1Y0ax9OH6tcPJw0Phausxi4+vti8Csr70XEj/Ez2OZqhcI2
1MLE1eD7mZt89+/93u89cSDNRdwN2IReZ+IS5qr8jOrwmn/W4foQHLlO5XnJ
N8Xx0O/E67mP4/htuEp9OnGWbNb6er82L2AfsBRzQj2OfJY+C7usV8vERvgs
5jT7wrx8UP0NWInjwzT0jfn1X//1U9xWLRJ9E7ZG5O0QmB583RirR3G16Seu
7DF8wnj2WF5VY6p6k607c9yUS2l/fER4nb5XeoiaZys3IzhqaprTJ7NnU/rk
qLOMBWt+9Ujbh97CJZOHJ18UTgzfwE9dWVlZgWXP+Ek1m2Dl1pB8EvoFL5RO
YuPTM+wN65PtXA859gpbDA9+ZWXl5kVveNjGj/7oj57sS35O9b3MaTFYNfrk
/bNB2J0TszyHb9ANbMjJhT/WtZic07DRWVej3n0ez+WviDnTPWI+fuuqnP13
q7tRTjbOGczE83nOk+dRbLlapx79V/n/sBYxcufEr/uxH/ux5aitPJTIaVL/
BmfDXPzZn/3Zbz/zzDMnn0/NCP1gYYswDfEBc9I8VWvCJjeFX6+GgB4pfDf+
XzkjjV3z8VzNC+O7nsd8xsnrtz+fsD4l8BW1H2Er5p41v96Nvmf+sBXMB5wK
Poh9wjTjd5q/bIRqDvvM+elTpCc1HpTYyTl8o34Jztncl2eAz8JPhQPJo4N1
8G1WLlvUflL31ZjHP6oXl/sKZ5+4tzHCBmVvGpPGD3wLX8n+xkM9ro4Y9ew3
DhP54R/+4RMODUu0ti134+ZEv5wPfvCDb+e5zT5q3cejHijvrtz3ctaMBXYK
npv6O3wN9T1WVlbut+By4m5MvNRaYd2AZbBb8kvooWr71J9cLIcNxt44+iXW
KHYNO2zrU6+s3LywLct55o+Y4+Z6sVb2I3+Dr8B/YH/MmsPnOBM+y/+iI479
pWc99IlvTN685+xXuW90xtG+mb1e+U7f+Z3fedJFk+f+MHyOzreegWzficnM
33OOYst8QLquOqrsLHnDYoF66cI46EH7iaWzr5Yjv3KV4PnAGPUq/cxnPnPi
y7P14WOwDjVrcSrFmdXO49+x6XGozEdjX46K/g/msji0unrmRWt1GJ7tqr5B
9QpqXPc9uITfM+ZhK3Ji9FyUYwp/CAutXzPfEd4Cn3FO8lhxwOrz6Lz4r+GJ
xeL9hvmHu+H4uGRyX6YtUl6Y36SHnBMdga/iuv30T//06drpo/Kxj33s5Leu
XLaoj6KOjDGDtwG7sBnX9G3+bX2O4R8+z6et3pvvGkfHmi7tY3wZn8aMdU4+
BHwDL3Hrbtyc6GOEPwqTKNe0XPdz9bHSA3TJ7N2YnqIzcNnoAvcXdrZcypWV
FfYAHTF1CTycv4IvyqaKv10sxpoC37AWwU7VJxPXOdpS9sd9XZtjZeUyxLov
5om3IbfC/J69nNkPbEH9VOT10w0P6t1YDTf+DJ0QF+KYDzLzUY49ITsGWxYP
gu16zr6ZPUzgqXDZeCVXxXzOnW8+nOPUv/JczVHHhtnwJek6us95ulbyxcWM
4Rm48j53LfHYYEfqm3zrW9+66du9cmEiLxzHR0/hP/mTPzlxNGBk+qHIFTF2
XnnllW+/8cYbJ16GsVcPk2IL4tdwBja9ucxXMw7tM/G+crCumr9hHGEZ5r7f
ql5OfVjUF/7KV75yqtNhnOeHwCOt//xUfVnhMnxHfA++J6zU5hh8VLESc6Qe
03xPfit8Q31j/q1jnquLU51S37XBVGA/9JTaQPphmI9f/OIXt97vBQvOhBws
2BTszDgI/6JHjevsTWPBmLF5no73eTkn8T3muI7zYdwZh/Awx/ab5hT8ecfI
zQkbBL5B78E3Wldnzaujruq+803qHV/ekho8+lGrwaGHgfu78dSVlfstYrls
lmOuG91hbWDLxP+rF0oxlGIw9Wpjv+QnZDvZR82v1TUrK5ch8tP1S1FnDe/A
HOY38J2qDxyX/Ngf9SouRLkm1eA412P6iD/ku0zMIozkQbVD7cuu+dCHPnTa
qgPwbtwNtlM8jckhYQf7r+dqFPgfcuvUPuCXFWdyLD4m/r44sviRz4sp4ujj
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
DmO31zvF5nk1JH2nHJfJB6gnFa4fbMNx6Ei60HXH0V65HpEPZe2U22mdMvat
v+7LrP9QParZY711EW4Rhs8Xs87DN9z7anP7Xj2H7M8uh1ng7VgX6z3kdT1T
jTE2QXhatXKqx20OwWfM50vkPD1IxPzZPPQBnivbiU3gv7EfzsVjjn3t84Nd
W/MGtgTfcA/dC7irOIpju0Yrj0esIfSd+xavhj1Z3aHwu4lfzDi8eeH+ZXO2
eV+sj50Lx7tN68TK/xbrvvktzituQsfCJePvVIe72Co9aVyElYVl0pX0rTXT
d4038QG56ysrK48m4iTl68qHZrvLe8W3FAvCGcUrEGuzqXtjDRBLEP+EQ+Bi
yDVhs/It2P78Brim+QvzhkmWhwLX4M/LYYGR2PgRsAb+P7/Csdjcjl0eL3vb
47EG8eR7Fn+ceSjn8lns45zxy/kycBR+UP0V4tc6d2ud3+UjwSyyO8Ss/Cf/
45lnnjnh8nyquO5sPvY+u1581L78JPFffphrxN6DcYj7wIbYL/ANvsfKysq7
C39Ift3EZfHH6BVz3FytdrDXdIp+KLhiYq3mH04y29Mmj97c5E+Yp7j+OBqw
X7gjHMMGE/a74re31V6V5wNjEFuH79Kh7DD2Gr3l2vFtq7cRZyOdTEey3eot
671qFrHVHIe/LW+l/rJ8YDoSto2nvf7ao4uxiG8Jj3Bd4VJ4hDA9GEc1EWd/
wvCOuS66/+YJPAo2IXcST9N9nr0kqklbPoWxUu0J95fN7rW6NdZz+KOccviL
td/cYkOwKfCezKPbOofEiNg8dA+80PoOX2XrwPeO/I2r+tpX74YPxPbBcYn/
KTbk3sp925qUj0fwmOHcrjd/s7ja5NYUj5816sOmJg8nOzR8wxxhG5qj1ouV
2y30GR3pnsbbZmOUk2KMNB7CNmBj9YA2ZjzC+h3DnC9u4D22zMrKyvuX8tjZ
6uWm4At7LibK7uUn8NvlX3u0bss359PLI7GGi/PgcPDf8S+s73wL83TiAHx5
thffAjbiGPwInHE5L9Zv9pC6o7Bu6ztcwDoRD9bacc4+KO/tWJ/jGCeZuSls
MLgG/NW50k3FqKopxaane8Ll2YpwCzagrdoa4sLiUjaxFu/Jr4GH+A/sFfk3
bCA2imsnLub/8q/kw8s5hm289tprt9bWW1m5KYFz8PNgEThZsEs+Gv4AXjzM
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
cvwFlwO+C89QL5Z9K/8BH4f+xcHEofAeHMQ+1m+4BzsZlgAPwDUoR8I4oify
13E/Lrnkki2+4f3GGJ1gDKlNq/8pnQNj8R3Hg53gk7ArqitNF5VjmO3tN+XE
yreR4+L8YAjiKPr70PHGeHkxzsGx/H4YHtzVecJExGTwK5yH62TrxG+qf6r7
UF1P76cLXZdzs8Z0f7w6bzEfeD17ye9VC9T+7p3f43+wkXA84ByO71jlv3t1
DjgbuCStcenjtrAL19q8Xud0vxte6f7CbTxreS/unXppIyMjJ0/U5KdjVhvN
fKdT6TT286oT6gGOf6kmE52x2gH+p2/4fmz0kZHTIvANNa2s/TCN+imwTcQ3
rNnsCTZJsQav5hGbAZ+zXvR8TDEi9o4Y8RNPPDEYx8gmxoH6acaU2Bec+Jpr
rtlsPZhG3AA+FluRnSn+ZzwaX9nXaz3E4mPsPD66zd/etz+eyMjT5Sc/+cnm
J8RHFAss97z8+WKCa5267OzVti5eG6fD+qgOxMh+hL5VS0mfCT4afWwuedbl
fp2Li+OZe6bsHLqe/ueP8onoer6wXir6p+DnTe7+yRF1fuVrwzXU3YE1yDMK
09ADDd6hVpG4Bf3ADlbbQh0uehWGUO8PrzAwehk+rY4Fv90+1dCgI+h2Ot8G
n8CfoP+NKVwCtoPxFi5BD9n8H2YKb4NbqxmiNywbxXFgbrhKclfqLULvG+vW
DOM+vonj+S12DA5S9WnYLHSWz9g8Xr3n3MoNqbdyuILrs7b4vuPYHzcCZoLz
4frW+Kj9HQe/xXHlC7ln7g1OCX5MvV06f7gHHkd58isuudZ3bv1bP68ubNyO
8oU8NzgRvBJXV47oyMjIyRNxB3N81Ql0jXWbXtnN06MfzH/4Bv0e9psNQM/Q
YTiaIyOnSb7//e9v/TP1lINXGOd8HWu9dRj/k20rXlNdR7ZIdbfYOeKEOBxi
OGwjcT6+qz5n4++M8IXUZGBfGV9sQjraOBHXWnvbGWOwDTYqH4tvRW+z18Kk
88ficVRjNFuU/vYbUwfxZ0V+ENu9nmDuX30bi3uu/I3yO62Ba3/0auP17Owr
p2383v0JXY6vpM7kzTffvMWg6fDd/rC7W/F2z5Puhyualzb1AsxZvFZz2Fqh
FvXIyRL48kMPPbTlJXzgAx/YanDoh6NerLUaF0IsA8bhFbeOTcAeZgtY/42D
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
Dz+cPlefn13GH48nHHZGh7MzjSkYiP3kVo0cLnqG8k3xMuof4J5bA+tl03Px
P76WfG0cDtiS+ZwNveY1eA6eGzwL/3xkv8IvpMdx+fl55l69mG2ed/0oV07O
Wo/DZl6ad3wxeQPi6fITxcnF1dVkGBm50BJuZnzBQsRC4B/qfcAz6Bh/P/HE
E9v78mvlv+j/hpsAj8UxUs/0l37pl7Y6F+wY8ZWf//mf396TK2lcwxzoQuOc
jWLO4ILA0/kC7BebuWI/OK+5xHcwP/ga7KHyV8qT9D7MAmfCmmjOwDuaf/B7
WI3cGnhLeS71QaiW6JrHuealnI+/sa6t4f9sM/oc3uPeqIk1MjJyMoQeFCPO
bjOnW8/TRWy2aiJ6j96iw7Kts53DPOPfw4VHRk6rmDu4ovhP8rXlulqX2QKw
CbmibAL4BizQ3FgxjOxlfMx6mlUv0vvsCvZDOaiOyQ6Z/M/TIzjHMCt15eAb
8lHgFOJWOD/VpT2sB6nxRG/DP/hiYkzsPvwhvQEdw9iDjxlD+V+wa3ao+LI6
+2JyYmIjh8vdd9+93St2tmfBLrf+uY+tdWv+gvsNL+In2De+Rn5wm+fnmDAt
9UtH9it8QL6eegUwRvy5uKxwqOYSP22tzbub609/m48wRj4fbExdWnwsfL+R
kaOUeB8/+clPtr/jH8BD2BJ4e3feeedWY4h9gYuKk4rHRO/hddBlanrgkMqf
xGWDjxvX+r74Li4IvJwfUf0Mdov/rVN05opvmEfVH23ueN+xnYe8GrEi9pFj
+T6OCB6FV/OT/1FN0bgb5anUG+F8NTcOwzfSzc7bb8A29Id1T0ZPj4ycHNHf
sly6uGK2Fd8I06i+aHqpLdvbVj1keofvNzJymoV9oA4Y3qIYBjsAriHuIP9e
rS9rpHW+uqLWXOuv98XOzatyVrzyPa3fYiTxoM1DfBA5tOxw+eIjJ1fYlnKp
jR050XjruBfxN2BkcTfo3Oo8rDEo79Gz4kvsSq9iWr7PJhV/U+++GFf8XXab
mBt+gTGLkz+5KecW9f1gRnJ42Olrf/Ryytbak+Y6n1b9Bfut+d9rbVHPBIaJ
bzP5KfsX/Sz4eXQ5nNCzwX3yzHF34BvmUv0l2ET08opflbcv7m0eylVqfsIc
9cCY/rAjx0nq8yLfRf8sc4CNAddVW1PtDpifNcorjKPeJXJE8CzsC6eHh6hP
VA9tsU8+Ap/BVg/GclTKgw97hydam3CeYO/mW3U++CnWN79b35fqkdKl6eRi
smGQ58pHOV/vFL9pzjsX9hwMB+bivoyMjJwMUdtszS/1N5utHBXYBr1BD7G1
xRPFlukp+8QtSzfQKXQULtfIyGkXsRB2sVpefCB5qDgb+M18VX+Lw/MpzaO4
k9WuwsnwfriH99kHOJphG+aV76ntxRcWa+cPif2PnEyBJ+D9qA+nBjOcAY9C
nIhfDMsS24dfVDttjUV5FZ9i9/Gh7C8PGp9W/As+Ir9FjI3ujjvE9oOfwd/E
lnGSjanhzJ9bPCf15eBFfF33slihv1duTWug+cvHrT9s+QwrvmF99ZzwHAff
2L/g7nsO5iQeHt3M5jF/2DTVXOGP8dH87Rl6viuvyvM3F/Gn4Ivmozi0+ab+
9MjIcZbqmspvgXnA4PV20ftHjRq9RKwb+gv93d/93VbrU5zUZ/wJ82bluVVz
FA7hfXMKL9U6ZL3yeT296gMGU/BajQ56l+8Rj8rahjviPfOzXrP5Lfku5cs/
G/4GW8w5iT2Zs2JKesTqazZ6emTkZAj9Rdfs5pHSCeGgNjY0vaKPFNwUrlk/
y+LOa/yKvpk+aCNnRR5++OGtnqB4g9ri5onYnxoK8I3mTLGK8rzq3QnfsL7X
890+/l99WfMQXqJm+t///d9vm1ph6qqPnBxhN/KjxIhxerMVxfthEcaJOqG4
Ani51Xgut3jNK643LF/KeMOdF+Oq7jz70fjihxXTYi/yqdV88Js4xxOTOr+Y
Z+xc9nZ9dq1z1QZ2z1f8wpy1Ploz7e+eq0u5+sGen2fLhlZXFkdkZL9SruF1
11231feFS3t+5o5nvub4h1nV82q1n7zPnyv3SL9ZfCqYifyUqS86cpJkzW+x
6WWrlqla6urnfvrTn95q16hNgRMIn7eWwR6sP+wc84EehFPA+9hK1h5rHazD
Z9Yp+/oe7qo4qvdh/HSveJD56H92lTogYkFxyM1Fv0PXHlYf6bA6G2u90eav
79DdYgDwm7iVOCWwz+FfjYwcf1FbiH281hleeyrFo4e74oVZo8UYxSTWOom7
vGk23w9/+MN9X97IyJHIo48+uvE2zQ3rNbsYd7I4Oi4nf5W/KX4R78l6Xt8i
NnE+aJhh84kfZQ1XW8s6a23HA2UfiAdOPe+TIWxD2IYc/ze+8Y1brUHcXnYa
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
RHCVqaFy8eXrX//6wStf+cqf4o50gGcRtlhemPfo1vQtzMO24leeu7nNt8J9
lec2uWIjIxdX1C+CRVgX6Wj44m6dJPr2sFrQYZjsMjgzfY4fKW4gB19+qvyU
e+65Z9+XOTIy8v/lv//7vzc/JBu6enRsruq4l3sWt0M8ly9DxGl93/q+4ht0
hhz1kZGRZy58T1iANVg+AbyAz6weZbkM1l8YBOyD/9z75uda27v4fjEJm7gi
Hxk2wU92DL6TtT5+QfO+XNP6zvpNHHvfxw35lV/5le071ne1B/Dn4Rp8azW3
+Pc2uImcF5gBXsQnPvGJDUtQo5NfSAep3SkW7fX5+mt9H44iz8Rx4Sm4ZPrV
8PH9tlrn6lB84xvfOLjzzjs3P0ONg+uvv37rLSKvREwe/uv8XRPdCFOAL4jV
62chL8H1w3zlD/BD6VFYg/vlOYj1qAnpc9gHW2m3l6t7CjfxGzDm+gBXL9T3
5Juwq8Tx5bv4rbVXsGfv+34PJub34DA4JrCzqfV8ccSY00cHzmfuVn+jeIHx
wpbe5W+Yr/WPPazmqM/i6sTnMad/+Zd/ecPePNPJNbr4ovYOvQbDMK/pwvLM
bOZvvYrYR/Xkjuu2xoS9D2M23+l2/LDBHEdGLq7Qz/BEeL+5DF80D81jdhRu
lvm99vNee3mby3iRbDJ2UvEhNUr1SVODSV+5kZGR4yHyxdhf2drmOjvKe9W9
a363D5tMLFP8SAyxvrHZaNZwa/f0ShoZefbC57/yyisP/vEf/3FbM/Ej4Bt8
G3OPvRw/I76FtTcMwisbmz9lbvpOc9jf3reWW5/rQctfUsNf3a18MK/W+mqT
emUPOBd56GLIemLytfHn/a1+F53Azq+PbfVJ4TbqFKhbIXdF3soDDzywxaDl
goh/33LLLQe33Xbb9h7dhFfBZpC7Y4N/hInAK+S9qB/kPX6e7f7779/8EfwL
NQrU07z77ru3+uliOP6Xp4GrgePvPMIz9GxUS8P9Z7O4RpiNeI/YbDk97h18
R96tHF73AwaCqyK2y7elS8spcc/ZRvisK3/D5h7Tt+69Hizwo/wn99xW/hA/
1711LjAp/B3+lt8J2+L/wj3wRvShVNcdJwXWM3LxROxOrqbngoNjnNT3xnOC
ixXHX/GN8/VVgVuZc56948WhZJurA2MNNneGJ3lxBQbBpzGXd/lw5ic9Zx6a
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
HV86yWf0Bt2VbitPiH6jGw+LCcNChms1MnK0Qv/SxW9961u3NRU/nf1j3WUL
7Pbnpoetx+waunqN+5jn5nj1yHBo5e7OvB4Z2a+ITfBtiktaq9f6wOY1f8A6
vmIbh9XgWXvFqoH3yCOP7PvyRkbOpKgrKWch7kE1ONd4b74Q35v/Lz/kN37j
Nza/OT2w1r8sn8VnjoUzIeeU/+1vNr51329Y58Wp2Qxs+3yuepl6z35sA34C
u8L7fH8YRH1AbHAa+S82uipcIf7Yiru4NseGGcABcPPVpKjuKvzCb8gvgWvw
LavLaeOj+B25K159Z70P5ZvEN19xXvdGXgy7ye/7btftnP02Xo1YD7/Wb3h1
7T537xzXs4IPO5YcGTVRrrvuui1fGM4Bl4EHyT0oz0aeyvBhj6/od6Qn4eWX
X77xbWBVaqfIjSpu2DhrXDffqnHV+/Ezyt/yXvlRYZcrF6j+zLhIL33pS7c8
NnkXI4eLeqLiuuYcbMOr+0ZXlXPSnDbHbfQUbIP+KE+IjqSvYBjm9RoPTm/x
iUZGRo5W8CvqjSYWgdMp1iCnlc1Ef7a2V0847vrqA8XtYF9Y19k9+Bv6Rj72
2GP7vsyRkTMr+OzW7XLOigkVC2IbWZtxrs1f9lZ21lqnY7cmKf9C/Hj60o2M
7E+eeuqpzZfiw1uf+e/mej5QnAT/s7Px5eEB1vq1h2n2fNgBrJPdjsNBR7D7
2fNeYSnsBbx7HPzXvva1G3aSXvH9+pCEE8QP4+PFM6kHhPPml+GIvOIVr9h8
evuvvQlWHke9YpwDjKF6i3RX/WjhG7AU+/BFnBOMQY4MfAdewO6RN+A63Yt4
GOHAzttvFm/3mWPDRPRlcWz/h/n6m4/pPjs+bgjuhd+op0r+qfOBv7C/cFDY
SnfeeefWY+Htb3/75hezo+Sn+C08ANwNMeeR4ytyQ/jLOE84PvBHYwH3yXj3
7HdzQ1fuVHU1wiXX/sL2gzuaW+aQzTzAyTSvjHPH97cxribej3/8433fkmMn
dOaXv/zlg6uuuurgX//1Xw9uuummg1tuuWXLZSvHJJ0Y940OpCfgpOZyuXTw
Ddtu35S4bPTI9ddfv+9LHhk5c8IuwcWoR5z1WaxBXVAxiPANupW9YF23z7n6
dMM+7EO3WpPl+A5PbmRkf6LeGDveOrvy0Ft/2Vz5Rdbw+LD1Ytitl9Xa7Tts
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
XvlgMRPdBpuF/2QzxFX4jT/84Q9L/dWK4ogCPlGuwZwTNah8DppTvUbVkVnH
6aGTGpTMjre+0yssPb74HzQbZ5555vAdLrvsstlTTz211F+zKIqiKIr/ELQc
mzZtGvXk9A9qPD72sY+NOID+Afcg9qfj4FOYW6K2RX89dbDXX3/90HDzNdR/
HH300WNGi/5felrwLaa6b76FDV8hXsCb0InSVvA5wl/Ir4g/MsMEx6GWxLF4
En6Ka4puxLnwM3gO13TjjTeOnqqu1XfhB2U+rjyu2hUcjc/H6cjf0H7gesxa
uOuuu2aHDh1a6n+eoij+A+An8RF4WesbfykewndY/+rs0pswMxhwG2wZ++N5
6ulwHDTxN99889CFFEWxeHjppZdmu3btml1yySWjrsS9H0chf6E3qHrX9AFO
rmTat0tOhX8iz2Fdy8XwXS6//PLZDTfcMO75f/vb35b6axZFURRF8Srhueee
m23dunVwFupWPvKRjwxeQK9QPoHNa2rPxQt8AblRGoeVK1cOv1/tiZyn/Cgu
hC5iOms+eRSxhHgBp4GXoA8RS/BP+CDpC4a/0M+UH+L9zDtxnHM7DmfhGFoO
9fL4DdzG7bffPnQY+A09Q/EbvovrpOmgRdFj0KP8je8lL6QuxZyZ9g4siuUP
/O2PfvSjwXXqwaO+ZNWqVYOfpT1TI5e+g+npgy/F6+JU8aj4Vu+zS/Ri69ev
b21KUSwycA9yMV/96lfHPTz6T3kZ65svEX3GtF9w+A3rmTaV38CH8De/QE8d
PbZ+//vfDw6lKIqiKIrDC+a/89/lNNR6mD9C66AOXVygnmXbtm0v123s3Llz
9o1vfGPkU/AH9Nz0EeIGORKaCzkVG923LblS79kHV8E3wWOET8lz54svgutQ
93L88ceP3KvXxSMe8SrmI8jTmhFrTi1uwyxc+9NnqGPBZ8jhnnbaacOvufba
awdX4zvru8p/qva8KA4PiInuvvvuwcnSddlo1b7+9a+PmSrincRE7BEOle1h
v3Cm7FX0ZOpUzF7ZsWPHUn+tojji8MILL4y1rD+W+7p8Br+EdkP/YD5CZsJa
sziNaW5F/oQmVU2q/sHWNv0WrkSvrfYLLoqiKIrDF3//+99HHSou45prrhn6
Bj019PB89NFHh7YBv6EX14YNG4bmARfC9+c/yKnIgep1wYdIvw08hPhBzbuN
3lsMwe/Ab+A18BZ8FvW0eBUch7iC76L+hC9j89y58Bv8FXlVPg/eAteS43Ee
/JcVK1YMHas8D/+ItoNPc++9984eeeSREbM8/vjj1Z0XxWGG7du3j3kncrR6
DX/ve98btfZq0fThEOPQZrBTnmcOdvr+RNdBD88W0q0VRbG4cG/+6U9/OvqJ
65vhvi534b6Pp+QnpJeofApOctqPXM2Zdc1fSE9helA8Cc2n2SxFURRFURze
0IOUL79ly5bZb37zm8ED6Emxf//+8VwPTvzHpZdeOrgDmm88Al5B3Yha9uQ9
+RbyojSlNBjiitSN0GikPoUuHL+hf4c+IM5F3+F9tbK0qfp74DBwKI7Bi+A7
cDBilug7xCn4FtoNeg48jPhG/bx45/777x+xz969e2fPPPNMtalFcRhi3759
Y0a02jucplp7/AZ7xW7oyUNHZmNnzJHVQxm/Ic+Li/W6Pj3ioNqJolh80GLh
N772ta8Nf0N9GT8AtyE/Yq1mJqy1K5+Cn8RxhN/Qz4vfgN/wGt5SzarcTdd1
URRFURxZwHXIn9gOHjw4e+yxxwZXQPetlsV25ZVXDt03LYcaFX4G/0K+xBwU
cQOuAQdx/vnnj1oS+gr74jXsJ9agvaDDsB++RN40vcBwG97T44Nfgi/Bk5iP
on+G69APJH4PfsTMA305XB9eg2bj4YcfHnFPeY2iOLyBk6Uzu+6664aNMF+S
ncJ56jGEX2V7xD16GZu/hGNNfERnxn6xP3oUFUWx+FCfgqfEMfI7zj777Nlx
xx038hv0obgNNWbWstwGn8EalmOxyYVY39a5da0mDafpHM7bnjpFURRFceQC
H4AXUNNBAyEnunbt2rHp5Wf+CN8Db8HHoKHAQYgZ8BL6l9J8fOELXxh/iydw
FXwSmz4ZalDMdZSn8T6uAmeBx8Cf0Kea6eaR1sNr3/nOd0ZvUHU1auzxHDgU
79N24D5+/vOfz373u98Njqb+TFEc/pD3feCBB4bWjO3Bm+I76drpyOR09e9h
q+g22B8as/QPwm+Ys8SmtTalKJYG1vFDDz00+/Wvfz36ZOn7pSaWvpMeQ12K
elj8Bf2mWpTMVLF5bp3jPOyffdkCtan1B4qiKIqigOeff37Uq6hh4XvYxBJq
V/AXZq6YpUKHod5EjIB7kEPFT+Al9APV91MdLB7EHEf6DryJ/p80G+Y5Oo/Y
Q/2tPKwcjvP42/6Z66rmRD0NPbpae3lbzzdu3Dg7cOBA9RpFcYRh9+7do7co
npN9YUtoyejH2By8Bg7DY/hU+jO9N/TlUEdHw14UxdKAhpRuVE/z9DXHQ+qZ
g6ug0cBj4C9osmzpEYynNIce50Hr4W/rGrfJxzBnqSiKoiiKYgq+h/5cdB1m
zar9oAkXU5i9Km+qbhbXQOcR3kK/Pj0/6TTUkYgt1NXqs6H+Rb2tXqD2w5Wc
fvrpQ5963333zX75y18OrQbdBq4j/UL5Pk8++eSYg7Jnz57RK9U1NT9TFEcm
2CXaLjNT6LnYGfYGx6FPIR2H2Id+TMz0zne+c9Tw672hj7E+HeZHFkWxdNDb
fNeuXbMHH3xw5DXwkDgMtSnmstk81zeU/gqXYQ3jPMyCw2fquUG/YX2rTfnt
b3/bnEdRFEVRFP8U/AV6UnoJc1b0u7DxJehLf/azn438C+5D3086DNyFmpLU
puA2Um9Lr2HuyRVXXDE4DPlYs1zoRuzjnLQjYhC5GDNg8BnlNIqiYAc2b948
7AxdGT0YLRjOlM2hHzMTVp9C9XR6Bcnt6gsk7yuW6nyFolhaqA+zjulD9QdW
82rN0mLQb+A3aK5wGvgN2g4cx1ve8pYxQxafifuw/9ve9rYxQ768ZVEURVEU
rwThF8QGOA8z5vUopanAUeAlbLQYen/SY+A16DPwIdu2bXtZq4ET8Zp5J3oG
2syp/fOf/zzys87bPExRFP8IbA7bYnYKPdipp546+9znPje78MILB8ehBgWf
oU5FPyDzUsydliN2XFEUSwt5C/6AnIhaM/279PkyG0UdivoU3AVtBt5DjYr3
PNe7Cx+inw5NFq0WDakcTFEURVEUxauF6Cz08cBN4CjUutBgeE2+Bifib480
IVAeoyiKVwK2Q/3++vXrRz3bJZdcMrgN9W+0YWpQaDdwGnpymL2U2Ux6DBVF
sbSQJ9FHS52rGUh4yXe9611Di6HuhG5Dv1GaK2tZzZm/1bAcddRRY84z/gPn
gb+kIW3vjaIoiqIoiqIolhvwqHRe6vfNfaLJ+P73vz/69+j3Y9aSGbDHH3/8
iH30GqXj+MpXvtLalKKYA1iHOEp6Tv108JNqyd785jcPTQYewwzYY489dvQr
x29kDpL5KmbC6s+BD9Hv3Lw3OZaiKIqiKIqiKIrlhvRAVuOG5zBn6eabbx56
d/Nj1a6YF/ne97535IBxHHffffdSX3ZRFLP/5SjNd8+cWD3L1ZOpR3nTm940
5r/SXeEo9QhWl0LToW7lNa95zdhe97rXjV47euo4T1EURVEURVEUxXKF2ja1
b3TpegvqT6xfof4+t95668gJq+uX+zVbxcyGoijmA9ajGfQ0HGavHX300UO7
gY+ktzrxxBMHv+F12o305aDbeP3rXz9ew33oWW7OWlEURVEURVEUxXIGjoMu
XX8fM6Q3bdo0+haaSS0nbK6CmbF6dLQ2pSjmB7hJ2g39yNWO6bOh3kSdijlI
eul8+tOfHroOvAd+Q22KGhWzU974xjeOWbH4TL2+iqIoiqIoiqIoDgfgLp57
7rnRP5RWXU3/VVddNWYz6Mehl2FRFPMDa9ZceGsVF0mrYS7KySefPFu9evVs
w4YNo+ZMX2CaDpoN/Ia5sZ6rWfnsZz875rcVRVEURVEURVEcTsjcarUq9957
7+ymm24a2vVrr7129OooimK+oAfHnXfeOWaorFixYvbBD35w9M359re/PXv8
8cdnO3fuHFwH3sP8FNqN9BbVo2PVqlVDu1UURVEURVEURXG4ITOqxU16jpqt
sm3btvF6URTzBb1zrFH8Bi3GRz/60VGToh+HdWvO/K9+9avZOeecM+pX3vCG
N8xe+9rXDg3HO97xjjEfujPmi6IoiqIoiqI4nPHCCy/MDh48OLQcnhdFMX9Q
o7J58+bZ2rVrh04Dj3HGGWfMLrjggtm6detGXZmewf4+7rjjRk0KDYdZKscc
c8zgMIuiKIqiKIqiKA53iJ3aU7Qo5hvqS7Zv3z74DLVkV1555WzNmjWzSy+9
dHAep59++uzjH//47KSTTpq9+93vnr31rW+dHXXUUaMH6aFDh5b68ouiKIqi
KIqiKIqiKEZ9iTqVRx55ZLZ+/fox2/nGG28ctScXX3zx7JOf/OToy6Hv6Ic+
9KHRi+M973nP7Oqrry5/WRRFURRFURRFURTF3MCM5z/+8Y+zrVu3jt7Ad911
15gdS9Nx3nnnvazfoNn4xCc+MepY8CFFURRFURRFURRFURTzgsw+2rdv32zH
jh2D5zA7xaxnOg0zVfQexXHoz3H99deP/YuiKIqiKIqiKIqiKOYJak304tAX
eP/+/YPr0JfjlltumV100UWzlStXjlqVs846a3bPPfd0JlJRFEVRFEWxbPA/
HnyVpA==
    "], {{0, 352.}, {1080., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72, 72}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Exif" -> <|
       "ImageWidth" -> 1080, "ImageLength" -> 352, "XResolution" -> 72, 
        "YResolution" -> 72, "ResolutionUnit" -> "Inch", "Software" -> 
        "Created with the Wolfram Language : www.wolfram.com", "DateTime" -> 
        DateObject[{2024, 4, 19, 13, 16, 23.}, "Instant", "Gregorian", 2.], 
        "TimeZoneOffset" -> 2|>, 
      "Comments" -> {
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "Creation Time" -> 
        DateObject[{2024, 4, 19, 13, 16, 23.}, "Instant", "Gregorian", 
          None]}|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1080., 352.},
  PlotRange->{{0, 1080.}, {0, 352.}}]], "Output",
 CellChangeTimes->{{3.919495707040575*^9, 3.919495713925538*^9}, 
   3.919495978569232*^9, 3.9225141837541113`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"7f404c95-10df-4091-9216-1a3f65e8a446"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d1", "=", 
  RowBox[{"ImageResize", "[", 
   RowBox[{
    RowBox[{"ImageCrop", "[", 
     RowBox[{"img", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"28", "*", "11.5"}], ",", 
        RowBox[{"28", "*", "11.5"}]}], "}"}], ",", "Right"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"28", ",", "28"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9194935190350037`*^9, 3.919493548519622*^9}, {
  3.9194951042245617`*^9, 3.919495134227852*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"c37d502e-b60e-4dc2-99ce-83967ba4a066"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJy1VTtIm1EU1jRKdJBixGcUgvgC8QGCzeCj4tJJSQ2IBoyhRoqPQiyWaBBc
RNBBRHASFBx0c1AcFEEHRRzUQUQQFDHioIOvIT7yNefQExJtK/mTfHATzv0v
5/u+c8+9V2/9YbSpoqKiejTeH2Prr892e6vj60dvYOru+d7e3fbtS/fPtvY2
+yfrB++k7s9QewfegcfjeW9J2EBcNM7Pz/H8/BxRrpeXF/5fWFjA0NAQ3G63
T0OkuA4PD1FWVobJycmAefEdDlAeyvvw8ID6+nqYTCZcXV35voUbsk/Dw8NI
TEzE7Owsx6RB+Ij/9PQ0ZA1Sr93dXRQVFaGkpATX19e++omWubk5jI+Ph8Qn
+i8vL1FaWoqUlBRMTU3xN+ERPWNjY3A4HCHxSU673Q46lrRvlN+/jpLfbDaj
v78/QIMSrvn5efaVmZmJnZ2dgHzCeX9/j4KCAnR1dSni869jYWEhYmJiMDg4
GKDDP+/FxQVSU1PR19f3Zk0w3pxOJ9expqYGNzc3b+oo65aXl1nT6Ogox09P
T0HxERYXF6HVarn/X9dRIHlHRkZY1+rqqiJ/j4+PqK2t5Ry9vb3/zCFznZ2d
iI6Oxvr6uiK+paUlJCQkwGAwwOVysQ/K8brPJW9HRwc0Gg02NzcV8dXV1bG3
lZWVN9+opsIt9W1paUFycjIODg58a4JBfn4+67XZbLwnx8fH3KuvdVNMo6Ki
gvf67OxMER/1pUqlQkZGBnJzc1FZWYmqqioYjUYMDAxgenqa3z9BVlYW0tPT
cXt7y3Gw9wu9a8RZXl6OtLQ03ks6X3q9HtnZ2Xz26VxarVb2r9PpUFxczH2m
hE+wt7fHb4LFYuHR0NDA9yh5ofolJSUhJycHarUa1dXVit9A/14QUHx3d8ca
ZmZmmJv85+XlcW81NzeH5E04/nYOBNRH5J/4GhsbQ+bzh9RKNEivnpycIC4u
Liz+/gd5l/b39/nOozMYST7xt7a2xndZU1OTT0ck+TY2NhAbG8t3mv98uCE+
tra2EB8fj4mJCY6VvEXB8B0dHfFZ397eDpgPBr8BNRgvKw==
    "], {{0, 28.}, {28., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72, 72}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Exif" -> <|
       "ImageWidth" -> 1080, "ImageLength" -> 352, "XResolution" -> 72, 
        "YResolution" -> 72, "ResolutionUnit" -> "Inch", "Software" -> 
        "Created with the Wolfram Language : www.wolfram.com", "DateTime" -> 
        DateObject[{2024, 4, 19, 13, 16, 23.}, "Instant", "Gregorian", 2.], 
        "TimeZoneOffset" -> 2|>, 
      "Comments" -> {
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "Creation Time" -> 
        DateObject[{2024, 4, 19, 13, 16, 23.}, "Instant", "Gregorian", 
          None]}|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{28., 28.},
  PlotRange->{{0, 28.}, {0, 28.}}]], "Output",
 CellChangeTimes->{{3.91949352210306*^9, 3.919493548897812*^9}, 
   3.9194936562259207`*^9, 3.919494798927195*^9, {3.919494836908366*^9, 
   3.919494853021021*^9}, {3.919495106955158*^9, 3.919495134566059*^9}, 
   3.919495266598975*^9, 3.919495433781809*^9, 3.919495524034563*^9, 
   3.919495982754366*^9, 3.922514183765397*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"331d3cc4-4c77-4044-b109-f848cea19f06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "=", "50"}], ";", 
  RowBox[{"ds", "=", "270"}], ";", " ", 
  RowBox[{"dw", "=", "11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"digits", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ImageResize", "[", 
     RowBox[{
      RowBox[{"ImageTrim", "[", 
       RowBox[{"img", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", " ", "ds"}], ",", "y"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"x", " ", "ds"}], "+", 
             RowBox[{"28", "dw"}]}], ",", 
            RowBox[{"y", "+", 
             RowBox[{"28", " ", "dw"}]}]}], "}"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"28", ",", "28"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "3", ",", "1"}], "}"}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.91949395620467*^9, 3.919494025323824*^9}, {
  3.919494061201766*^9, 3.919494100501728*^9}, {3.919494149653451*^9, 
  3.919494538436223*^9}, {3.919494816224017*^9, 3.919494831252336*^9}, {
  3.919494862703228*^9, 3.919495059126191*^9}, {3.919495279712474*^9, 
  3.9194953478877993`*^9}, {3.919495442834538*^9, 3.919495465223542*^9}, {
  3.9194955263608003`*^9, 3.919495541127159*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"48903403-dd9a-4404-8329-efb336f2c919"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztVjlIY1EU1SRixC1uhRqXiCBaqAhCQCyCIMQFwTGChaASExQ0mIwMg1gK
FqKFiI0iCBYiioWYgIIiCm6FooVrJ4iKpftyJvcyL/xkwpD8mUw1B35e3vt5
99xzl/eia7PVWxRhYWEOtfujvvWbwW5v/f5F456Yuh0d1u52s7H7a7u13a5v
U7oXtT8flfvBfzA+Pz//GYfT6cTZ2VlIeT8+PnicnZ1FXV0dLi4uvNZDwXV5
eYny8nLYbDbWJdXmO5cLskF8z8/PaGxsRFlZmSeWodD2/v7O48TEBJKTk1mb
P661tTXc3Nx4fJQDYfPk5AQGgwGpqanY3t72vBN2Hx8fYbVasbe359eXQCDi
+PDwwDmLjo5Gb2+vZ12q4/r6Gk1NTVhZWeG5iEkwEHuGhoagVCqRn5+Pu7s7
L//FuL6+jtLSUmxtbcnSJ36/ubmJrKwsJCUlYXx8/BffxfepqSnEx8djY2Mj
aH0iXk9PT6ioqEBkZCSqq6vx+vrqlTPfGMTExODw8DBofcLG9PQ0IiIikJmZ
if39fb92BLfJZEJiYqKsPiEbx8fHyMvLg0KhwPDwsJcfvlzUl9nZ2ZxfqlPp
u0DR0tICupqot8kecfnaEBqurq4QGxvLNexbt4Hg6OiIayQlJQVLS0t+tUn5
Tk9PERcXB71eL6vv7HY7wsPD0d/fz/O3tze2Q5zSehG2Dw4OkJ6ezjkMVhuh
sLCQ+cbGxrhG/YG4Xl5e2Pbq6irUajWam5u9/AgUlZWViIqKQlpaGqqqqtDX
14eBgQFMTk5id3fXc0YKzMzMcK57enp4HuzZsrOzwz1QUFCAjIwMzqVWq4VO
p2PtlCez2Yz5+XnWSH4Q3+DgIO+n+AcLuue6urpQUlICjUaD3Nxc5OTkoLi4
mH0gf+g8oXOgoaGB+UZHR2XxSeN/fn6OhYUFzM3NYWRkBA6HA0VFRdxvCQkJ
HAOKPfEtLi7yHjln9e9yfn9/j+XlZXR2dqK2tpZ7QaVS8X8auXxSXtovesEX
t7e3MBqNfH/8DT5/oB4gmyJPVJek70/uvkAget9isXAOXS5XyPkINTU1fK5T
38vh+wHImiDu
      "], {{0, 28.}, {28., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{72, 72}],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, 
      MetaInformation -> <|
       "Exif" -> <|
         "ImageWidth" -> 1080, "ImageLength" -> 352, "XResolution" -> 72, 
          "YResolution" -> 72, "ResolutionUnit" -> "Inch", "Software" -> 
          "Created with the Wolfram Language : www.wolfram.com", "DateTime" -> 
          DateObject[{2024, 4, 19, 13, 16, 23.}, "Instant", "Gregorian", 2.], 
          "TimeZoneOffset" -> 2|>, 
        "Comments" -> {
         "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
          "Creation Time" -> 
          DateObject[{2024, 4, 19, 13, 16, 23.}, "Instant", "Gregorian", 
            None]}|>],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28., 28.},
    PlotRange->{{0, 28.}, {0, 28.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJy1Vksso1EUplNUkDQejdKEIaQSEfHK2JnYmE0XqosSQlOaRqLoyJhVPaLW
hFiwYiEWmpDYSMQWTVhYEJGIBSIRrxDi9U3Pydzmr+hMtX+/5Da9597/fuee
e7577leLo75DERMT41T5furbfn3v7W37bVT7OqYup93W1W790fWz3dbe+83y
xWfU/W1KX8N/8Pb2htfXV3+T9l9eXrgJe6T47Bo0P1xe8d3j4yO2t7cxNTWF
4eFh9PX1YWhoCC6Xi23Ly8vY2NjAxcVFxH6enZ3BbrfDaDRCr9cjOTkZ+fn5
3AoKCpCamor09HQeq66uRnd3N05OTj7NSedBcLvdSEpKQmVlJbKysqBWq1FW
VobS0lIUFxczX0ZGBnQ6HbRaLdLS0tDY2Iirq6uQYyvmXF9fMw9xDA4OYnJy
EouLi1haWsLq6io8Hg8mJibgdDphMplQV1eHnJwcFBYWYm9vL8Dvf4HyjUBr
JiYmYm5uLiQfT09POQZ5eXnsq9T3UPhWVlaQnZ2No6Mj7j8/Pwfkv/j/9PTE
42NjY0hISIDBYAh5b1Kf7u/v0dPT4+f7yFexJuUvnV9mZiYWFhb8/n0WdO6k
h2B+Ubu7u0NNTQ0UCgXMZjPPj0SHwSDiPjAwgPj4eBQVFcHr9bIt1Fi+RzAf
xXr7+/uoqqpCSkoKxsfHA/yQE4LParVCpVKhtrbWn0PRiuPW1hZrk7S+ubkZ
MBYNvs7OTlB5cTgcUeMSsbq8vGRt0t4ODg7YHg0+0hStTRqjvVksFv+5yQGx
n5ubG8zPz3M9GhkZQUlJCWugvLwczc3NfI+SVqXfRMJHdWl0dBStra1oaGhA
bGws61uj0fAd3dTUhJ2dHZ4brvbe89KZHR4eor+/H0qlEhUVFcxPXNPT0/57
VG49tLS0sL7X19d57YeHh6B3XrgQ76Hj42POS6q3t7e3snJIIfJydnaW85Le
DVK73BA5QLkSFxeHtbW1qGlO+H9+fo7c3FzWANVG6ZicEHugdx9pzmazcV+O
vP8Iok7Te5N0NzMzE2CXGyJm9P4ije/u7nI/3P39AS4TK0o=
      "], {{0, 28.}, {28., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{72, 72}],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, 
      MetaInformation -> <|
       "Exif" -> <|
         "ImageWidth" -> 1080, "ImageLength" -> 352, "XResolution" -> 72, 
          "YResolution" -> 72, "ResolutionUnit" -> "Inch", "Software" -> 
          "Created with the Wolfram Language : www.wolfram.com", "DateTime" -> 
          DateObject[{2024, 4, 19, 13, 16, 23.}, "Instant", "Gregorian", 2.], 
          "TimeZoneOffset" -> 2|>, 
        "Comments" -> {
         "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
          "Creation Time" -> 
          DateObject[{2024, 4, 19, 13, 16, 23.}, "Instant", "Gregorian", 
            None]}|>],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28., 28.},
    PlotRange->{{0, 28.}, {0, 28.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJytVlsorFEUxrhfMnJN43ISuUYeOF4wEY5cYjqFknAcnQdzNI5Ox+2FREjK
g8gD4kVR3hQvHiUpnvBALrkm19y/M2t19vRzzBgzs2rP/8/e+1/fXt9e+9vr
U8XPwu82VlZWdY7an8Ly30qNpvyPSq7981Vd96NaXfXti/pXVXWV5nOFTNup
+NdstQ0ftOfnZ37u7+9jZmYGZWVlqKysxMTEBO7v73ns6enpo24NYm1sbCAz
MxNKpRJ2dnbw9/dHVFQU0tLSsLm5aRFMgXV9fY3i4mL4+PggODgYkZGRCA8P
h6+vL4KCghAXF4ednR2zMR8fH/k5ODgIuVyOjIwMTE1Ncaxra2uora2Fu7s7
AgMDmeO7uzvdGk2N7+HhgXFKSkpwcHDw35z29nY4ODjAxcUFCwsLL9b5USwy
wqB9W1pa4v+ET5yRT2r0np6eDmtrazQ3N/McUzgVeBcXFxgfH8fl5SX3SfkS
cYyNjUEmkyE3N1eHZSqv9N3V1dWbY+SbxldWVuDk5MR5c3Z2ZhaeIRN4e3t7
8PDwQEJCAm5ubszG0/et4HNxcREkI5RTYh2WNvJJ7fb2FtnZ2XBzc0NPTw+P
UU6ZaxSjyEupv97eXs6V0NBQbG9v69ZiLtZro7Pd1dUFb29v3ruGhgaLYu3u
7mJubg4DAwMYGhqCSqWCn58fnJ2dWbvfOi+mYFE7Pj5GXl4eYmJiWL/s7e05
P0i3SbOFXpuiK1IT3/f397Nm2draMp6joyPj0ZkjDa+pqWFNt0R8hEnc2djY
wNXVFQEBAQgLC+N7KT4+HtHR0byWpqYmXU6Zizc8PIyQkBAkJSWhsbERy8vL
PH50dASNRgNPT0++l2h/pbwY419f//z8vG6fpHPpfk9JSWG9Li0t5b6PxPge
/1LORC0xMjLC+5mTk2OUD2GHh4d654u7R2ri3E9PTzOeWq1+0a9vvWTn5+co
KCjA7Oyszr8hE3pGdwfxSXiTk5NG452cnCAxMZFzT9Qi9N1bsQossvr6es5b
qmlOT09f+DRkFE9RUZFO5yle6ZjgU+qLtMbLy4vPY19fn1G8SOfQPU2aQZqY
nJzMtaa4z6S2tbWFtrY2RERE8LnMyspiXl+vx5AJfqgGIUw616T5+fn5aGlp
QWdnJ0ZHR9Ha2sr7ReeNajaqC1dXV1/4MNbE/O7ubvZHjTAVCgXzRu9U+5Gm
0T4T/1RLmIL1GnN9fZ3vGIqFdJq0KzY2FqmpqaxlHR0duvx4D+svFcfIBQ==

      "], {{0, 28.}, {28., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{72, 72}],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, 
      MetaInformation -> <|
       "Exif" -> <|
         "ImageWidth" -> 1080, "ImageLength" -> 352, "XResolution" -> 72, 
          "YResolution" -> 72, "ResolutionUnit" -> "Inch", "Software" -> 
          "Created with the Wolfram Language : www.wolfram.com", "DateTime" -> 
          DateObject[{2024, 4, 19, 13, 16, 23.}, "Instant", "Gregorian", 2.], 
          "TimeZoneOffset" -> 2|>, 
        "Comments" -> {
         "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
          "Creation Time" -> 
          DateObject[{2024, 4, 19, 13, 16, 23.}, "Instant", "Gregorian", 
            None]}|>],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28., 28.},
    PlotRange->{{0, 28.}, {0, 28.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJylVlkorVEUNs/JPGQWmb0ZwsstZSxcFMmD455rzC1HxIOUFMnwwIPI8KBI
khTCg6GI5MkrUcaMiWRc17e6+/Qf43/cVfsM/17//vZa61vf3l6KPz9/6+no
6KhMXj5+5lX9KC/Pq063evmTWaYqKihT/kooq1AWKMsjFfovD13/DYOXQd+0
5+dnHu/Z09MTPT4+fjj/HSxhq6urNDAwQL29vfx7d3dXwxe4/2PYO+z09JRq
a2spIiKCbGxsyNramnx8fMjLy4uKi4tpZGSEbm5u1PsT733H8H5+fj45ODiQ
m5sbubq6Mk5oaChZWloyvp2dHcXExFBfX9+bvcpZH3Z+fk5bW1u0tLRETk5O
HE9GRgY1NDRQS0sLVVRUUEBAAOP7+fmRh4cHx52enk47Ozuy4xE1GBsbo8LC
Qpqfn6f29nau2+3trYbv0dERzc3NkUqloqCgIHJ0dCRfX18KCQnhOTkm8rCy
skLx8fHU1tb2Jn74vObj5uYmKZVKioqKIn19fVIoFLLwxDrHx8eUnJxMLi4u
NDU1pRG71BfPHh4e1M9ycnLIxMSEkpKSZOFJMTs7O8ne3p5iY2Pp4OBAg3uv
eXhxcUFDQ0MUGRlJaPXq6mqt8cBx5BQ8LC0t5WeIRZrLu7s7mpmZobS0NM4F
fG1tbWltbU02HkzkrqOjgzw9PcnKyorGx8fV84eHhzQ8PMw1wzz46+7uTqam
ptTT06MVlogRsVxdXXGMxsbGlJiYSAsLC9TU1MQ5BjfQe+hN8BM16+/v/1T/
PsKS+tfX13OO0O/4DgwMZJzg4GDGTEhIoO7ubu5ZbU3KgenpaaqqqmIOoJfN
zMzIyMiIYwkPD6fU1FSamJig/f39d9+XGxN6FX3n7OzMcYADFhYWZGhoyPHV
1NSwXkvjea8nP8MSNjo6SiUlJaxR5ubmrGXoQ/Abuok6Dg4OfgtHinV5eclr
gmfQJKzt7+9PjY2NrB0w6Cd6q6ioSH3uaWMih+gz6Cz4DG5D/5AzaQ/Br7W1
lXR1dZkj6LvXuZEbG7QePIDWY6DPxN4Rx/39Pf+GrhkYGPB+Tk5OtMIT6y0u
LvIZBj6Ah9BpsY7gmvheXl7m+nl7e9P29rbG3Fcm/FJSUrgm2LM4t17XRfgC
AzqDs05ojZwaivf39vaY33p6ejQ7O8vPRO6kJuoMvYmOjmbegsdy4xN7wr0D
9QBH0Etf3cNg6BXkA9yRG5/wgdYBD7w/Ozv7Eg9zmZmZzNHm5mat8SYnJzmX
4Mr6+jo/k56dUhP7iIuL4z3irJOLJ60/7jzID86A6+trNSbWgR+G2APOIOQC
uoZ7lFw8KWZXVxfjYWRlZTGHPrK6ujo+36B10Ahtzh3RX7hzZWdnc45wvwoL
C6PKykq+Q6PfNjY2+K6Wm5vLfYC7CTRO5OEz+wuaSlsP
      "], {{0, 28.}, {28., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{72, 72}],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, 
      MetaInformation -> <|
       "Exif" -> <|
         "ImageWidth" -> 1080, "ImageLength" -> 352, "XResolution" -> 72, 
          "YResolution" -> 72, "ResolutionUnit" -> "Inch", "Software" -> 
          "Created with the Wolfram Language : www.wolfram.com", "DateTime" -> 
          DateObject[{2024, 4, 19, 13, 16, 23.}, "Instant", "Gregorian", 2.], 
          "TimeZoneOffset" -> 2|>, 
        "Comments" -> {
         "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
          "Creation Time" -> 
          DateObject[{2024, 4, 19, 13, 16, 23.}, "Instant", "Gregorian", 
            None]}|>],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28., 28.},
    PlotRange->{{0, 28.}, {0, 28.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.919494526390338*^9, 3.919494540386661*^9}, {
   3.919494807379587*^9, 3.9194948315108843`*^9}, {3.919494865476842*^9, 
   3.919495059718938*^9}, 3.91949514206979*^9, {3.919495267577342*^9, 
   3.919495348101204*^9}, {3.919495436928841*^9, 3.919495465531807*^9}, 
   3.919495547552891*^9, 3.9194959846066422`*^9, 3.919496103445995*^9, 
   3.922514183789792*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"df622864-3083-4963-ba6d-ba99210fc99d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", "digits", "]"}]], "Input",
 CellChangeTimes->{{3.919496194882751*^9, 3.9194962029276857`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"28451948-cb29-44dc-a302-980dd3dbc8b8"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnAtQlVsVx+WSdBWMhw9UQBQ5gKjokKhpGoxNZajlveCIj3x0EfHBFQVN
FFApH+MrU0fSfASDio4kaqbmKy2FUrLJMYXQVEzzleED0S5f/7tWrPnudw7H
A+fwnXPnnt8Mzuf32muvvfbaa+29v9Nt6scfTHuvRYsW897HPx9MWRAzd+6U
hR964T/xKfOSk1ISPxqekpaYlDh34FRXnAzDXyX+Pj1WnDhxojt1dXWfqKgj
+Pi/9ch5ewv7f1iSfxKHDh2aNGnSD4ndu3e/efOG74HMdpXxU+rqMXmVNexQ
inUcnGbZfDjNsmk0ViF216EIUFFR8W0iJiamZcuWnYmePXsOGzbs74Rib8tU
K6q0tPSXxI4dO3B8m1DfDPu0pqznz59nZ2enpqaikzZZSEdA2vf169dlxJYt
W3JyctKJZcuWoZpbCNS0pKTkMaF5Vn+Z+eDly5cJCQkdiK5du4aHh4cRvr6+
gYGBfYm7d+8qZJl2MU4ulJWWlZU1YMAAH8Lb2zs4OLgbMWPGjP37978kFNWw
JS9JSUlJSko6c+bMO4sbN27c5cuXLZSN1fgbory8XHEAb8PI4HL//v3k5OQP
CTSrh4dH93oMBgNrsl27drj0NWLOnDn37t2Tl+gstriUrVu3enl5fYsoKiqC
57xKQDxPT88uBEb22tpaOyoc5XJogb4TEBDgT8AaIyIivkKwbr9O7Ny5Ux5U
WyaqjAaCWzBT0Nu3b1HZRgmmOM3SdnwBzRJA4QsXLjRT0IMHD+bNm2eJSOKN
CwsLv0dItOMIobjIsHz5cnd39ygCsRnaOpLAINirVy82y/bt20OfnYi2bdti
vPg3oX+Lo7i3BKwRYjwgNPegRl8mUK9z587xSSsjN8vFw79PicrKyvPnz3ck
MGrHxcX9hFi7dm1aWloPAloNDQ0NJDC4wzP8gzB+84QJE8yUC99iiVlKo0O2
IUOGfExoGtF8jtascKHPCFgjTHEpsXnz5gMHDhQTJ06cgBfaRKDK8fHx3yGg
wJCQkL8Rir45BYvNpohM59KlS3weVqqZNPgm4eLikpmZyffoIycb/6+I6dOn
nz179qcEMp2amhr1nVyLkydPQrc9CUTFGJ56E8Z9bfz48WbKtcQsOXB9TYwZ
M2bw4MHlhGLvxFBg7Z0gWrVqlZ+f/85HUCmejYFHDQoKYpNW9B3HuaxqoqCg
ALmncdfmquUTrq6uI0eOlOFJB1G5oIsEuvD69es18rNtaCTh8CMxMXHQoEGu
xNSpUzVvdpqlSZxmaQmObJasmV8QCGgxfKtlFpD1/4tQdM8dWMJfE35+frdu
3eLzGA3VQ6Ec8wT1BgIx26hRo0zWSB+4cV+8eGHyKjf6FQI9DhEyh8GKLkrm
IrhZR4wYAd1ytqsYBbdcC5yEzuUkbO99IjY2VvNma8xSOub169djCOQIktqr
u8mrV6+SkpL+RCi6ty+LwdNlqampYpbGDSc1Kisr45QHATySOL6qVqmDwEq+
RyCJ6N+//ytC0avvSykI1JEqcpSLUUY9J6mZn+SOs3fv3oEDB7YgjPPuJpul
lIW2RprjTqSnp2vkkfckJCT8llD0yhNNAoUg2DB5SYZIuKbo6Oj3CIiN++2Y
r4lsJs+zJv9IoH2RrfN53Tq+CAYzwDjOE0GzZs1SqBcDteS1tbWIo0YTcK24
sy0B4TWvdZql4DRLawTT0yxv3LixbNkyk5fEtNasWYOolSemHj16pKiGQlHO
2bNno6Ki/kAoDpMKaZAaLVmyxM3NjWskUYejySxbTdBrvku0adNm7dq1fFXP
eIMDchxs2rSpK+Hl5VVcXCw3wCkVEkhzcDWY6NKlC4JhTkmM3yn9yyS7du06
evSo8Xluo98TgYGBMHheTVY+6wnleOfOnZ6enucIxa7esiG3I0EyQISGJv4Z
odhVWjV1qm1OaqtD/sv5rMFgkO0QOs+v8rR/dXU1T/YiT0Q3+R2xatUqRJuD
CGTEHTp04HlLpDmwroaGIR6kjMuCvz18+HBycrLmEcn6a2pqhhGQAUW8ITSz
AWqP6uHh8RdCcUhvySJ9RCA3RL3EBuw4dgvGMtQSq1evRqLhTWRkZCi6O3aN
XeUQcFMBAQE8QIeHh8MaexGwzOHDh28jnj59aua1paWlsD3NpiNw5MgRRIwV
FRUmxXCapc580cxSoVEArWB8HkHshAkTeBJMkEAiLy+vJYEgQdbFNAoRaePj
4318fKycZl+5cuXEiRONF6qsRGqEwNuL8Pf3R2+Vq/aVUBq9qqrqJJGbm4tm
5d0mHTt2bN26NW+QMDnf3qwSqtvx2LFjCxYsGEigj0AqNwLjNYKi7xMYf2Xf
i2LWDDZv3rxv376Grp4+fRoaUJ/hWl+9ejU0NJRz1XXr1imqxlXfqdDmRoBA
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
Il7U7jjNsmk4zdKJk88L/wNjUX6c
    "], {{0, 30.}, {165.75, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->96.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{165.75, 30.},
  PlotRange->{{0, 165.75}, {0, 30.}}]], "Output",
 CellChangeTimes->{{3.919496199125386*^9, 3.919496203343603*^9}, 
   3.9225141838572187`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"8e967b2f-c2f9-49f9-889b-cffc2aa55ff0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<pics/4738-v3-digits.png\>\""}], ",", 
   RowBox[{"Rasterize", "[", "digits", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9194961044114723`*^9, 3.919496140139124*^9}, {
  3.919496207778669*^9, 3.9194962098969088`*^9}, {3.922514114923463*^9, 
  3.922514116786422*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"c88fa772-afd5-467c-a7a2-ea01c3503585"],

Cell[BoxData["\<\"/home/jam/Kuweta/mma_lessons/code/pics/4738-v3-digits.png\"\
\>"], "Output",
 CellChangeTimes->{3.922514183887063*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"a4552ee7-fcd1-4cd0-b287-33b54cfef91a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenetModel", "[", "digits", "]"}]], "Input",
 CellChangeTimes->{{3.9194930579584727`*^9, 3.9194930840585*^9}, {
   3.919493561153741*^9, 3.919493561214961*^9}, {3.9194936057294283`*^9, 
   3.9194936058878527`*^9}, {3.919493670971464*^9, 3.919493671014843*^9}, {
   3.9194945435154057`*^9, 3.919494545076606*^9}, {3.919494846151341*^9, 
   3.919494846266423*^9}, 3.919494956046433*^9, {3.9194954441726303`*^9, 
   3.9194954451799107`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"50378dbe-2f79-4b5b-b36e-21683c45fbdd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "7", ",", "3", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{{3.9194930589911137`*^9, 3.9194930843852*^9}, 
   3.919493561485878*^9, {3.91949360315051*^9, 3.919493606103449*^9}, 
   3.919493671309516*^9, 3.919494545597795*^9, 3.9194948464614983`*^9, {
   3.919494951538145*^9, 3.9194950503780937`*^9}, 3.919495142820387*^9, {
   3.919495273297957*^9, 3.919495349101143*^9}, {3.9194954379899178`*^9, 
   3.919495466299655*^9}, 3.91949554852387*^9, 3.922514183940105*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"9d08f4dc-e957-4979-ab23-823a8aee6f7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"capsnetModel", "=", 
  RowBox[{
  "NetModel", "[", "\"\<CapsNet Trained on MNIST Data\>\"", "]"}]}]], "Input",\

 CellChangeTimes->{{3.919496360482952*^9, 3.919496366836622*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"6cd79d55-afc3-473d-97fe-1dfe08e37ab0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.0149], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.8270000000000001, 0.41200000000000003`, 0.133]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.647, 0.259, 0.08600000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"image\"", "SummaryItem"], "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["2", "SummaryItem"], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.0149], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.8270000000000001, 0.41200000000000003`, 0.133]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.647, 0.259, 0.08600000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetGraph`selection = None}, 
                    GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-8.999999999999996, 
                    2.411540732620606*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"ReLUConv1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}], 
                    
                    Offset[{0, -15.5}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"DigitCaps\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-31, 
                    2]}, {-4.000000026794896, -0.9999998928204116}], 
                    
                    Offset[{
                    0, -15.5}, {-4.000000026794896, -0.9999998928204116}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Norm\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-31, 
                    2]}, {-3.000000026794896, -0.9999999196153085}], 
                    
                    Offset[{
                    0, -15.5}, {-3.000000026794896, -0.9999999196153085}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Pick\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-31, 
                    2]}, {-2.0000000535897935`, -1.9999999464102052`}], 
                    
                    Offset[{
                    0, -15.5}, {-2.0000000535897935`, -1.9999999464102052`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"DynamicRo..\"", "\"DynamicRouting\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "DynamicRouting", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-31, 
                    2]}, {-5.000000026794895, -0.9999998660255145}], 
                    
                    Offset[{
                    0, -15.5}, {-5.000000026794895, -0.9999998660255145}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox["\"Classific..\"", "\"Classification\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Classification", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-2.0000000267948965`, -0.9999999464102056}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Reconstru..\"", "\"Reconstruct\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Reconstruct", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-31, 
                    2]}, {-1.0000000535897937`, -1.9999999732051024`}], 
                    
                    Offset[{
                    0, -15.5}, {-1.0000000535897937`, -1.9999999732051024`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"PrimaryCa..\"", "\"PrimaryCaps\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "PrimaryCaps", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-6.999999999999997, 
                    1.875642792038249*^-7}], 
                    
                    Offset[{0, -15.5}, {-6.999999999999997, 
                    1.875642792038249*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"PrimaryPr..\"", "\"PrimaryPredVects\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "PrimaryPredVects", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{0, -15.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Reconstru..\"", "\"Reconstruction\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Reconstruction", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-5.3589794058235685`*^-8, -1.9999999999999993`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-8.449999999999996, 
                    2.2641687989604576`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117852`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\"", 
                    "\"16\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-3.4500000267948963`, \
-0.9999999075576049}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\"", 
                    "\"16\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.630143503914844, 
                    5.2528689453140025`}, {-2.8930313352095274`, \
-1.9563513557416137`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9550670809661822, -0.29638972798451707`}], 
                    InsetBox[
                    FormBox["\"11520\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399303`*^-7, 
                    5.499999999999999}, {-4.450000026794895, \
-0.999999880762708}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897078907825`*^-8}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399298`*^-7, 
                    5.499999999999999}, {-2.4500000267948963`, \
-0.9999999343525019}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897078907816`*^-8}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    
                    Offset[{3.8890874007337035`, 
                    3.889087192318317}, {-2.45000004153209, \
-1.5499999343525017`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396939, -0.7071068001334007}], 
                    InsetBox[
                    FormBox["\"16\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461559`*^-7, 
                    5.499999999999997}, {-1.4500000535897937`, \
-1.9999999611473986`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930105`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1152\"", 
                    "\"8\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-6.4499999999999975`, 
                    1.728270858378101*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117852`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1152\"", 
                    "\"10\"", "\"16\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{2.561653986813241, 
                    4.867024640562634}, {-4.955225895070069, \
-0.1065023700706137}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.8849135710113879, -0.46575527032968017`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1152\"", 
                    "\"10\"", "\"16\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{3.889087400733703, 
                    3.8890871923183172`}, {-5.450000014737192, \
-0.549999853967811}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.707106762239694, -0.7071068001334005}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{1.4737193332337029`*^-7, 
                    5.499999999999998}, {-0.45000005358979384`, \
-1.9999999879422956`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"20\"", "\"20\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{1.4737193366014802`*^-7, 
                    5.499999999999997}, {-7.4499999999999975`, 
                    1.9962198286692792`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117823`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.999999999999996, 
                    2.411540732620606*^-7}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]28\[Times]28\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.000000026794896, -0.9999998928204116}, \
{-3.000000026794896, -0.9999999196153085}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
10\[Times]16\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 10\[Times]16\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQbRx6hpGBQeBAdWTpsf//3+/XDPlQ9nUO/wGFQtu/
Isc+7J/eFm34UJP/ANNv007bNR/3r3W8ZXR4Gd+BFC+V9spNn/anteZUzxbm
O+AWz/H9xI3P+08GCnFnFfAeWGH56Ia2/Nf9V5adfqi3l+dAx82NOotav+1v
a5nx/+VP7gOv7Mo/afP82H//VUXKbDXuA6cyjbRObvq5/8HNHAFnZ64DWlGP
L1dW/t5/6Gap7uT9nAfak1qK5+f82d8rIrv0mynngXMiDfxazn/3O3Ullecu
4zjwo+Dacsm/f/c/sHJb8l2A4wBXebtN3qx/+9PUTmhPLWU/wKg++ay69P/9
13xe8LpdYTtwr+FnlFv9//3665Z5cemyHVjSsuvJyWP/9xd4MT96WM96wM/o
Wtamj//3z1b8d/nMGZYD9zt93v7//3+/qaPI3/PSLAeqV70G809sO2T5oYT5
gPfmxncgflATZ5fuDaYDPkv43oP4lxa/eNvuynSgpnYSmO8pnZD6fw/jgQd2
vB9A/B0v8j9MtmM8UPKiDsyX45Hodz3FcMCq6jmYX90a4SiSwHDA+IvbRxD/
fIghOzDaDsSEzQXzAVtv/Hs=
                    "]], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
10\[Times]16\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Vectors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 10\[Times]16\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Vectors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.000000026794895, -0.9999998660255145}, \
{-4.000000026794896, -0.9999998928204116}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 11520\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"b\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 11520\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "b"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.000000026794896, -0.9999999196153085}, \
{-2.0000000267948965`, -0.9999999464102056}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Classification\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Classification"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.000000026794896, -0.9999999196153085}, \
{-2.0000000535897935`, -1.9999999464102052`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Norms\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Norms"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.0000000535897935`, -1.9999999464102052`}, \
{-1.0000000535897937`, -1.9999999732051024`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 16\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 16\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.999999999999997, 
                    1.875642792038249*^-7}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
1152\[Times]8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 1152\[Times]8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAA/v//////F8DKydNw/pOFPqdn7OL1
zxfAS6wjXM1ohT5WpAw83ZoXwCuZOGAQOYU+CrZgC7ZgF8BqkBJ9xwSFPsCc
6FCAIRfABZKxsvLLhD58WKQMPN0WwACeFQGSjoQ+PemTPumTFsBatD5opUyE
PgBPt+aHRRbAEtUs6CwGhD7LiQ4FGPIVwCgA4IAou4M+mJmZmZmZFcCcNVgy
mGuDPiwFlxIPQBXA4lhOPreabL9OU0XeeukUwKBrat3wmoy//IOk/NyVFMB3
E3tvLRegvzOXtG01RRTAPU9GHP+arL/1jHUxhPcTwB0n3p4YWba/RWXnR8ms
E8AaRPf0MBfAvx8gCrEEZRPAdCWqt63mxb+Fvd1sNiATwJu3h5cCm8y/dj1i
e17eEsBI/UfKFxrSv/Y0XFGybBLAxr4Lcdo02b8jaMwDCwMSwEhq+E9Pz9+/
/daykmihEcDm/4Yzu/Tiv4KBD/7KRxHAqD8m26fB5b+zZ+JFMvYQwGv02Z5t
Tui/kYkrap6sEMAuHqJ+DJvqvxrn6moPaxDA8rx+eoSn7L9RgCBIhTEQwLbQ
b5LVc+6/M1XMAQAAEMB7WXXG///vv1do4W4=
                    "]], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1152\[Times]10\[Times]16\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"uhat\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1152\[Times]10\[Times]16\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "uhat"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-5.000000026794895, \
-0.9999998660255145}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1152\[Times]10\[Times]16\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1152\[Times]10\[Times]16\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.0000000535897937`, -1.9999999732051024`}, \
{-5.3589794058235685`*^-8, -1.9999999999999993`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Reconstruction\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]28\[Times]28\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Reconstruction"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.999999999999997, 
                    2.1435917623294274`*^-7}, {-6.999999999999997, 
                    1.875642792038249*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[Times]20\[Times]20\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 256\[Times]20\[Times]20\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.449999999999996, 
                    2.2641687989604576`*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]28\[Times]28\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.4500000267948963`, -0.9999999075576049}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
10\[Times]16\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 10\[Times]16\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.8930313352095274`, -1.9563513557416137`}, \
{-0.25, 0}, 
                    Offset[8], {0.07876418437371768, -0.02444319948482776}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
10\[Times]16\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Vectors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 10\[Times]16\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Vectors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.450000026794895, -0.999999880762708}, {-0.25,
                     0}, 
                    Offset[8], {0.9999999999999991, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 11520\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"b\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 11520\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "b"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4500000267948963`, -0.9999999343525019}, \
{-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Classification\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Classification"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.45000004153209, -1.5499999343525017`}, \
{-0.25, 0}, 
                    Offset[8], {0.9999999732051026, -1.0000000267948965`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Norms\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Norms"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4500000535897937`, -1.9999999611473986`}, \
{-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489718993011*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 16\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 16\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.4499999999999975`, 
                    1.728270858378101*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
1152\[Times]8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 1152\[Times]8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.955225895070069, -0.1065023700706137}, \
{-0.25, 0}, 
                    Offset[8], {0.07297863893647616, -0.038410740686576225`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1152\[Times]10\[Times]16\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"uhat\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1152\[Times]10\[Times]16\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "uhat"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.450000014737192, -0.549999853967811}, {-0.25,
                     0}, 
                    Offset[8], {0.999999973205103, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1152\[Times]10\[Times]16\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1152\[Times]10\[Times]16\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.45000005358979384`, -1.9999999879422956`}, \
{-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Reconstruction\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]28\[Times]28\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Reconstruction"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-7.4499999999999975`, 
                    1.9962198286692792`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[Times]20\[Times]20\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 256\[Times]20\[Times]20\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8.999999999999996, 2.411540732620606*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}], 
                    
                    Offset[{-12.5, -12.5}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}], 
                    
                    Offset[{12.5, 12.5}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-7.999999999999997, 
                    2.1435917623294274`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ReLUConv1\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ReLUConv1", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-4.000000026794896, -0.9999998928204116}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-4.000000026794896, -0.9999998928204116}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-4.000000026794896, -0.9999998928204116}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"DigitCaps\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["DigitCaps", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-3.000000026794896, -0.9999999196153085}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-3.000000026794896, -0.9999999196153085}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.732, 0.732, 0.732], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.33], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.732, 0.732, 0.732], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.33], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.732, 0.732, 0.732], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.33], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 
                    0.], {-3.000000026794896, -0.9999999196153085}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Norm\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Norm", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-2.0000000535897935`, -1.9999999464102052`}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-2.0000000535897935`, -1.9999999464102052`}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-2.0000000535897935`, -1.9999999464102052`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Pick\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Pick", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-5.000000026794895, -0.9999998660255145}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-5.000000026794895, -0.9999998660255145}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.732, 0.732, 0.732], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.33], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.732, 0.732, 0.732], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.33], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.732, 0.732, 0.732], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.33], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 
                    0.], {-5.000000026794895, -0.9999998660255145}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"DynamicRouting\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["DynamicRouting", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.0000000267948965`, -0.9999999464102056}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Classification\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Classification", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    
                    Rational[-25, 
                    2]}, {-1.0000000535897937`, -1.9999999732051024`}], 
                    
                    Offset[{-12.5, -12.5}, {-1.0000000535897937`, \
-1.9999999732051024`}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[
                    25, 2]}, {-1.0000000535897937`, -1.9999999732051024`}], 
                    
                    Offset[{12.5, 
                    12.5}, {-1.0000000535897937`, -1.9999999732051024`}]]]}, {
                    
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 
                    2]}, {-1.0000000535897937`, -1.9999999732051024`}], 
                    
                    Offset[{-10.5, -10.5}, {-1.0000000535897937`, \
-1.9999999732051024`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[
                    21, 2]}, {-1.0000000535897937`, -1.9999999732051024`}], 
                    
                    Offset[{10.5, 
                    10.5}, {-1.0000000535897937`, -1.9999999732051024`}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 
                    0.], {-1.0000000535897937`, -1.9999999732051024`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Reconstruct\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Reconstruct", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-6.999999999999997, 
                    1.875642792038249*^-7}], 
                    
                    Offset[{-12.5, -12.5}, {-6.999999999999997, 
                    1.875642792038249*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-6.999999999999997, 
                    1.875642792038249*^-7}], 
                    
                    Offset[{12.5, 12.5}, {-6.999999999999997, 
                    1.875642792038249*^-7}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-6.999999999999997, 
                    1.875642792038249*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-6.999999999999997, 
                    1.875642792038249*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-6.999999999999997, 
                    1.875642792038249*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-6.999999999999997, 
                    1.875642792038249*^-7}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-6.999999999999997, 
                    1.875642792038249*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PrimaryCaps\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["PrimaryCaps", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{-12.5, -12.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{12.5, 12.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-5.999999999999998, 1.6076938217470707`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PrimaryPredVects\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["PrimaryPredVects", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    
                    DiskBox[{-5.3589794058235685`*^-8, -1.9999999999999993`}, 
                    
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Reconstruction\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Reconstruction", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-8.999999999999996, 
                    2.411540732620606*^-7}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}, {-4.000000026794896, \
-0.9999998928204116}, {-3.000000026794896, -0.9999999196153085}, \
{-2.0000000535897935`, -1.9999999464102052`}, {-5.000000026794895, \
-0.9999998660255145}, {-2.0000000267948965`, -0.9999999464102056}, \
{-1.0000000535897937`, -1.9999999732051024`}, {-6.999999999999997, 
                    1.875642792038249*^-7}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-5.3589794058235685`*^-8, \
-1.9999999999999993`}}, NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 25, 25, 25, 25, 8, 25, 25, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {552.9999970525612, 158.50001178975467`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.499998526280667`, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Classification\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Classification\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Classification"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Classification\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Classification"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Reconstruction\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Reconstruction\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Reconstruction"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Reconstruction\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Reconstruction"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "ReLUConv1" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 1, 9, 9}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]|>, 
                    "Parameters" -> <|"OutputChannels" -> 256, 
                    "KernelSize" -> {9, 9}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {20, 20}, 
                    "$WeightsInputChannels" -> 1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 20, 20}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 20, 20}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 20, 20}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 20, 20}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 20, 20}, 
                    NeuralNetworks`RealT]|>|>, 
                    "PrimaryCaps" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 9, 9}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]|>, 
                    "Parameters" -> <|"OutputChannels" -> 256, 
                    "KernelSize" -> {9, 9}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {20, 20}, "$OutputSize" -> {6, 6}, 
                    "$WeightsInputChannels" -> 256|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 20, 20}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 6, 6}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Transpose", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[1, 3], 
                    TwoWayRule[1, 2]}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 6, 6}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{6, 6, 256}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1152, 8}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{6, 6, 256}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1152, 8}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1152, 8}, NeuralNetworks`RealT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1152, 8}, NeuralNetworks`RealT]|>,
                     "Nodes" -> <|"1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[#^2& ], 
                    "$Dimensions" -> {1152, 8}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1152, 8},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1152, 
                    8}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1152, 8},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1152}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Divide[
                    Sqrt[#], 1 + #]& ], "$Dimensions" -> {1152}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1152}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1152}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Replicate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Level" -> 
                    2|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1152}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1152, 
                    8}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{1152, 8}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1152, 8}, NeuralNetworks`RealT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1152, 8}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 20, 20}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1152, 8}, 
                    NeuralNetworks`RealT]|>|>, 
                    "PrimaryPredVects" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1152, 8}, NeuralNetworks`RealT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{1152, 10, 16, 8}]|>, 
                    "Parameters" -> <|"$ArrayDimensions" -> {1152, 10, 16, 8},
                     "Dimensions" -> NeuralNetworks`TensorT[{1152, 10, 16, 8},
                     NeuralNetworks`RealT]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16, 8}, 
                    NeuralNetworks`RealT]|>|>, 
                    "1" -> <|"Type" -> "Replicate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{Automatic, Automatic}],
                     "Level" -> 2|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1152, 8}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16, 8}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{1152, 10, 16,
                     8}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16, 8}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16, 8}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[4]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16, 8}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}|>, 
                    "DynamicRouting" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Replicate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[2], "Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2, 1152, 10, 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "State" -> NeuralNetworks`TensorT[{11520}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{11520},
                     NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"capsule" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "b" -> NeuralNetworks`TensorT[{11520}, 
                    NeuralNetworks`RealT], "uhat" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "c" -> <|"Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1152, 10}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{11520}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1152, 10}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1152, 
                    10}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1152, 10}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{11520}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1152, 
                    10}, NeuralNetworks`RealT]|>|>, 
                    "s" -> <|"Type" -> "Graph", "Inputs" -> <|
                    "c" -> NeuralNetworks`TensorT[{1152, 10}, 
                    NeuralNetworks`RealT], "uhat" -> NeuralNetworks`TensorT[{
                    1152, 10, 16}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10, 
                    16}, NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Replicate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Level" -> 
                    3|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    1152, 10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1152, 
                    10, 16}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{1152, 10, 
                    16}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>|>, "3" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1152, 10,
                     16}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "c"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "uhat"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}|>, "v" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[#^2& ], 
                    "$Dimensions" -> {10, 16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, "3" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Divide[
                    Sqrt[#], 1 + #]& ], "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, "4" -> <|
                    "Type" -> "Replicate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Level" -> 
                    2|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{10},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT]|>|>, "5" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{10, 
                    16}, NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", 
                    "Output"]}|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "b"], 
                    NeuralNetworks`NetPath["Nodes", "s", "Inputs", "c"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "s", "Inputs", "uhat"] -> 
                    NeuralNetworks`NetPath["Inputs", "uhat"], 
                    NeuralNetworks`NetPath["Nodes", "v", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "s", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "v", "Outputs", 
                    "Output"]}|>, "dots" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"v" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT], "uhat" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1152, 10}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Replicate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[1152], "Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{1152, 10, 
                    16}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>|>, "3" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[3]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1152, 10,
                     16}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1152, 
                    10}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "v"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "uhat"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}|>, "dots_flatten" -> <|
                    "Type" -> "Flatten", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> DirectedInfinity[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1152, 
                    10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{11520},
                     NeuralNetworks`RealT]|>|>, 
                    "new_b" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{11520}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    11520}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{11520},
                     NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "capsule", "Inputs", "b"] -> 
                    NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "new_b", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "capsule", "Inputs", 
                    "uhat"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "dots", "Inputs", "uhat"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "dots", "Inputs", "v"] -> 
                    NeuralNetworks`NetPath["Nodes", "capsule", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "dots_flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "dots", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "new_b", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "dots_flatten", "Outputs",
                     "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "new_b", "Outputs", 
                    "Output"]}|>, "$SequenceLength" -> 2, "$InputShape" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{11520}, NeuralNetworks`RealT], 
                    "Recurrence" -> NeuralNetworks`ValidatedParameter[{
                    "Output" -> "State"}], "ConstantPorts" -> {}, 
                    "OutputPorts" -> {"Output"}, "$InputNames" -> {"Input"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2, 1152, 10, 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2, 11520}, 
                    NeuralNetworks`RealT]|>, 
                    "States" -> <|"State" -> 
                    NeuralNetworks`TensorT[{11520}, NeuralNetworks`RealT]|>|>,
                     "3" -> <|"Type" -> "SequenceLast", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2, 11520}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{11520}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{11520}, NeuralNetworks`RealT]|>, 
                    "InteriorStates" -> <|{2, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "States", "State"]|>|>, 
                    "DigitCaps" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"b" -> 
                    NeuralNetworks`TensorT[{11520}, NeuralNetworks`RealT], 
                    "uhat" -> NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10, 16}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"c" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Reshape", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{1152, 
                    10}]|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{11520}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1152, 
                    10}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1152, 
                    10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1152, 
                    10}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{11520}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1152, 10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "s" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"c" -> NeuralNetworks`TensorT[{1152, 10}, 
                    NeuralNetworks`RealT], "uhat" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10, 16}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Replicate", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Automatic], "Level" -> 3|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1152, 
                    10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1152, 
                    10, 16}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{1152, 10, 
                    16}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1152, 10, 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1152, 
                    10, 16}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1152, 10,
                     16}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10, 
                    16}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "c"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "uhat"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}|>, 
                    "v" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10, 16}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10, 16}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[#^2& ], 
                    "$Dimensions" -> {10, 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10, 
                    16}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Divide[
                    Sqrt[#], 1 + #]& ], "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Replicate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Level" -> 
                    2|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10, 
                    16}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{10, 16}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10, 
                    16}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "b"], 
                    NeuralNetworks`NetPath["Nodes", "s", "Inputs", "c"] -> 
                    NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "s", "Inputs", "uhat"] -> 
                    NeuralNetworks`NetPath["Inputs", "uhat"], 
                    NeuralNetworks`NetPath["Nodes", "v", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "s", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "v", "Outputs", "Output"]}|>, 
                    "Norm" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[#^2& ], 
                    "$Dimensions" -> {10, 16}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10, 16}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10, 16}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Sqrt], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10, 16}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "Pick" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Norms" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT], 
                    "Vectors" -> NeuralNetworks`TensorT[{10, 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Ordering", "Arrays" -> <||>, 
                    "Parameters" -> <|"Elements" -> 
                    NeuralNetworks`ValidatedParameter[-1], "$InputLength" -> 
                    10, "$MaxIndex" -> NeuralNetworks`IndexIntegerT[1, 10], 
                    "$InputShape" -> {}, "$OutputLength" -> 1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`IndexIntegerT[1, 10]]|>|>, 
                    "2" -> <|"Type" -> "Extract", "Arrays" -> <||>, 
                    "Parameters" -> <|"$PosShape" -> {1}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10, 16}, NeuralNetworks`RealT], 
                    "Position" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`IndexIntegerT[1, 10]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Norms"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Inputs", "Position"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Vectors"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}|>, 
                    "Reconstruct" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {512}, 
                    "$OutputSize" -> 512, "$InputSize" -> 16, 
                    "$InputDimensions" -> {16}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1024, 512}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {1024}, 
                    "$OutputSize" -> 1024, "$InputSize" -> 512, 
                    "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{784, 1024}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{784}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {784}, 
                    "$OutputSize" -> 784, "$InputSize" -> 1024, 
                    "$InputDimensions" -> {1024}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {784}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 28, 28}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> <|"Form" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT],
                     "Type" -> "Image", "ImageSize" -> 
                    NeuralNetworks`ValidatedParameter[{28, 28}], "ColorSpace" -> 
                    "Grayscale", "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Version" -> "14.0.2", 
                    "Interleaving" -> False, "DataTransposed" -> False, 
                    "Alignment" -> Center, "Padding" -> GrayLevel[0], 
                    "Resampling" -> NeuralNetworks`ValidatedParameter[
                    Automatic], "Method" -> "Stretch"|>|>, 
                    "Outputs" -> <|
                    "Classification" -> <|
                    "Form" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> 
                    Tooltip[{0, 1, 
                    Skeleton[7], 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}], 
                    "InputDepth" -> 1, "Dimensions" -> 10, "$Rank" -> 0, 
                    "$Version" -> "14.0.2", "Multilabel" -> False|>, 
                    "Reconstruction" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ColorSpace" -> 
                    "RGB", "MeanImage" -> None, "VarianceImage" -> None, 
                    "$Dimensions" -> {28, 28}, "$Channels" -> 1, "$Version" -> 
                    "14.0.2", "Interleaving" -> False, "DataTransposed" -> 
                    False|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "ReLUConv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "PrimaryCaps", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ReLUConv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "PrimaryPredVects", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "PrimaryCaps", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "DigitCaps", "Inputs", "uhat"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "PrimaryPredVects", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "DynamicRouting", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "PrimaryPredVects", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "DigitCaps", "Inputs", "b"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "DynamicRouting", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "DigitCaps", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pick", "Inputs", "Vectors"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "DigitCaps", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Classification"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pick", "Inputs", "Norms"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reconstruct", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pick", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Reconstruction"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reconstruct", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "ReLUConv1"], 
                    NeuralNetworks`NetPath["Nodes", "DigitCaps"], 
                    NeuralNetworks`NetPath["Nodes", "Norm"], 
                    NeuralNetworks`NetPath["Nodes", "Pick"], 
                    NeuralNetworks`NetPath["Nodes", "DynamicRouting"], 
                    NeuralNetworks`NetPath["Outputs", "Classification"], 
                    NeuralNetworks`NetPath["Nodes", "Reconstruct"], 
                    NeuralNetworks`NetPath["Nodes", "PrimaryCaps"], 
                    NeuralNetworks`NetPath["Nodes", "PrimaryPredVects"], 
                    NeuralNetworks`NetPath["Outputs", "Reconstruction"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "ReLUConv1"], 
                    NeuralNetworks`NetPath["Nodes", "DigitCaps"], 
                    NeuralNetworks`NetPath["Nodes", "Norm"], 
                    NeuralNetworks`NetPath["Nodes", "Pick"], 
                    NeuralNetworks`NetPath["Nodes", "DynamicRouting"], 
                    NeuralNetworks`NetPath["Outputs", "Classification"], 
                    NeuralNetworks`NetPath["Nodes", "Reconstruct"], 
                    NeuralNetworks`NetPath["Nodes", "PrimaryCaps"], 
                    NeuralNetworks`NetPath["Nodes", "PrimaryPredVects"], 
                    NeuralNetworks`NetPath["Outputs", "Reconstruction"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Initialization :> {NetGraph}], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetGraph, 32830424, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetGraph, 32830424, 
            8009056468866366130500743834569920872884410975991843343664, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<8>, <12>]"& )],
  False,
  BoxID -> 8009056468866366130500743834569920872884410975991843343664,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9194963778265142`*^9, 3.919854077526662*^9, 
  3.922514184491145*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"541136db-8f26-41eb-b3cc-1090b7eb79b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "capsnetModel", "]"}]], "Input",
 CellChangeTimes->{{3.91985408272955*^9, 3.919854085753551*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"0a703bfa-daed-4dff-888a-e1a6486996e4"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    TagBox[GridBox[{
       {
        ItemBox[
         PaneBox[
          StyleBox[
           TagBox[
            TooltipBox[
             StyleBox["\<\" Net Information\"\>", "InformationRowLabel",
              StripOnInput->False],
             "\"NetInformation\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "NetInformation", "Tooltip"]& ], 
           "InformationTitleText",
           StripOnInput->False],
          FrameMargins->{{4, 0}, {-1, 1}}],
         BaseStyle->"InformationTitleBackground",
         StripOnInput->False]},
       {
        PaneBox[GridBox[{
           {
            
            DynamicModuleBox[{System`InformationDump`open$$ = {
             False, False, False, False, False, False, False, False}}, 
             StyleBox[GridBox[{
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Layers Count\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"LayersCount\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "LayersCount", "Tooltip"]& ], "53"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Arrays Count\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"ArraysCount\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ArraysCount", "Tooltip"]& ], "11"},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Shared Arrays Count\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"SharedArraysCount\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "SharedArraysCount", "Tooltip"]& ], "0"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Input Port Names\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"InputPortNames\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "InputPortNames", "Tooltip"]& ], 
                 RowBox[{"{", "\<\"Input\"\>", "}"}]},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Output Port Names\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"OutputPortNames\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "OutputPortNames", "Tooltip"]& ], 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Classification\"\>", 
                   ",", "\<\"Reconstruction\"\>"}], "}"}]},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Arrays Total Element Count\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"ArraysTotalElementCount\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ArraysTotalElementCount", "Tooltip"]& ], 
                 "8141840"},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Arrays Total Size\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"ArraysTotalSize\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ArraysTotalSize", "Tooltip"]& ], 
                 
                 TemplateBox[{
                  "32.56736`", "\"MB\"", "megabytes", "\"Megabytes\""},
                  "Quantity"]}
               },
               AutoDelete->False,
               GridBoxAlignment->{"Columns" -> {Right, Left}},
               GridBoxDividers->None,
               GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}], "DialogStyle",
              StripOnInput->False],
             DynamicModuleValues:>{}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[3.6]}, 
              Offset[0.2]}}],
         FrameMargins->6]}
      },
      DefaultBaseStyle->"Column",
      FrameStyle->Directive[
        GrayLevel[0.8], 
        Thickness[Tiny]],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxDividers->{
       "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "LayersCount" -> 53, "ArraysCount" -> 11, "SharedArraysCount" -> 0, 
    "InputPortNames" -> {"Input"}, 
    "OutputPortNames" -> {"Classification", "Reconstruction"}, 
    "ArraysTotalElementCount" -> 8141840, "ArraysTotalSize" -> 
    Quantity[32.56736, "Megabytes"], "ObjectType" -> "NetInformation"|>, 
   True]]], "Output",
 CellChangeTimes->{3.919854086209509*^9, 3.922514184652466*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"0fbb7eda-413b-4ea1-b05f-c6adbd0e0d62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"capsnetModel", "[", "digits", "]"}]], "Input",
 CellChangeTimes->{
  3.919496383076676*^9, {3.919496454400242*^9, 3.919496465627498*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"cf35d38d-38db-4eec-9419-e6b3f3967a0b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Classification\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "7", ",", "3", ",", "8"}], "}"}]}], ",", 
   RowBox[{"\<\"Reconstruction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
WKSCWB/wuP8flS+lRw==
         "], {{0, 28.}, {28., 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28., 28.},
       PlotRange->{{0, 28.}, {0, 28.}}], ",", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
md0IHh2qfTDqKsTr8H/+N/3A
         "], {{0, 28.}, {28., 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28., 28.},
       PlotRange->{{0, 28.}, {0, 28.}}], ",", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
         "], {{0, 28.}, {28., 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28., 28.},
       PlotRange->{{0, 28.}, {0, 28.}}], ",", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
MMLKcog8DbeM8FwOHLkJv7fApioIaYb/AtBDofU=
         "], {{0, 28.}, {28., 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28., 28.},
       PlotRange->{{0, 28.}, {0, 28.}}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.919496384123089*^9, {3.919496456392754*^9, 3.919496466216053*^9}, 
   3.92251418493324*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"e66e0838-e53a-4a09-9723-0bb718a17ada"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{908.25, 803.25},
WindowMargins->{{408.75, Automatic}, {Automatic, 45.75}},
FrontEndVersion->"14.0 for Linux x86 (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"89db2605-6abb-48c0-afd5-9beb5617930d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 169, 3, 67, "Section",ExpressionUUID->"c32b56a5-33d5-41ff-9463-327af6f35f1d"],
Cell[752, 27, 561, 14, 50, "Input",ExpressionUUID->"4ad2833c-186e-4190-8cd7-5d795319fac9",
 CellID->1037921592],
Cell[CellGroupData[{
Cell[1338, 45, 225, 3, 29, "Input",ExpressionUUID->"690d01b3-9154-40c6-ba48-8177511cba85"],
Cell[1566, 50, 49993, 922, 176, "Output",ExpressionUUID->"c02c1a73-c4fe-4014-a8a3-0c9c64796551"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51596, 977, 208, 4, 31, "Input",ExpressionUUID->"0c6284d8-a82d-4cef-8916-ec6c30b7b1a9"],
Cell[51807, 983, 39782, 778, 86, "Output",ExpressionUUID->"a60447e5-1f60-4553-beb2-0e27343e6bd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91626, 1766, 217, 3, 29, "Input",ExpressionUUID->"04fc85ce-a03b-45cf-a786-f74cbe8a2942"],
Cell[91846, 1771, 6105, 152, 178, "Output",ExpressionUUID->"e3b8a60b-39f7-4ece-9354-b7864400683f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97988, 1928, 237, 4, 29, "Input",ExpressionUUID->"c36b7af2-d6b2-4e4e-bea9-ef8c2de5fc31"],
Cell[98228, 1934, 143127, 3284, 59, "Output",ExpressionUUID->"d12e7c0c-7a68-43e8-b66e-1cac9bc545af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241392, 5223, 332, 6, 29, "Input",ExpressionUUID->"c7ef9739-288e-44fa-9e61-9967c625de3b"],
Cell[241727, 5231, 273, 4, 33, "Output",ExpressionUUID->"6c1567b0-c4f5-4ef0-b6cd-aefae6c5fb9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242037, 5240, 320, 7, 29, "Input",ExpressionUUID->"f5b7b367-5cd2-4e93-ac9f-1d40f4434ca1"],
Cell[242360, 5249, 18689, 553, 336, "Output",ExpressionUUID->"ba285be1-6213-4acf-a2ab-d8cf9eae9b6c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[261098, 5808, 171, 3, 67, "Section",ExpressionUUID->"fff148be-69de-4cfa-9a93-839b38874784"],
Cell[261272, 5813, 745, 17, 50, "Input",ExpressionUUID->"e3df577c-6f7b-4568-919c-f8977894098b"],
Cell[CellGroupData[{
Cell[262042, 5834, 174, 2, 29, "Input",ExpressionUUID->"23e76cd0-ae9e-41da-b8b5-63696415a87e"],
Cell[262219, 5838, 183576, 3013, 248, "Output",ExpressionUUID->"836b3053-7f55-4d82-bebe-6470aa8237a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[445832, 8856, 378, 8, 29, "Input",ExpressionUUID->"d4bd4d7f-3052-476f-ba31-5ee4a8bac619"],
Cell[446213, 8866, 216, 3, 33, "Output",ExpressionUUID->"62869806-275d-4f5f-93e2-bbe78e0e7cc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446466, 8874, 378, 8, 29, "Input",ExpressionUUID->"02c40db9-a45e-4489-b169-45c230c849ca"],
Cell[446847, 8884, 184188, 3027, 248, "Output",ExpressionUUID->"7f404c95-10df-4091-9216-1a3f65e8a446"]
}, Open  ]],
Cell[CellGroupData[{
Cell[631072, 11916, 564, 14, 29, "Input",ExpressionUUID->"c37d502e-b60e-4dc2-99ce-83967ba4a066"],
Cell[631639, 11932, 2469, 47, 45, "Output",ExpressionUUID->"331d3cc4-4c77-4044-b109-f848cea19f06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[634145, 11984, 1395, 35, 52, "Input",ExpressionUUID->"48903403-dd9a-4404-8329-efb336f2c919"],
Cell[635543, 12021, 9454, 184, 47, "Output",ExpressionUUID->"df622864-3083-4963-ba6d-ba99210fc99d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645034, 12210, 214, 3, 29, "Input",ExpressionUUID->"28451948-cb29-44dc-a302-980dd3dbc8b8"],
Cell[645251, 12215, 5276, 91, 47, "Output",ExpressionUUID->"8e967b2f-c2f9-49f9-889b-cffc2aa55ff0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[650564, 12311, 472, 10, 29, "Input",ExpressionUUID->"c88fa772-afd5-467c-a7a2-ea01c3503585"],
Cell[651039, 12323, 215, 3, 33, "Output",ExpressionUUID->"a4552ee7-fcd1-4cd0-b287-33b54cfef91a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651291, 12331, 541, 8, 29, "Input",ExpressionUUID->"50378dbe-2f79-4b5b-b36e-21683c45fbdd"],
Cell[651835, 12341, 600, 9, 33, "Output",ExpressionUUID->"9d08f4dc-e957-4979-ab23-823a8aee6f7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[652472, 12355, 281, 6, 31, "Input",ExpressionUUID->"6cd79d55-afc3-473d-97fe-1dfe08e37ab0"],
Cell[652756, 12363, 298061, 5951, 87, "Output",ExpressionUUID->"541136db-8f26-41eb-b3cc-1090b7eb79b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[950854, 18319, 219, 3, 29, "Input",ExpressionUUID->"0a703bfa-daed-4dff-888a-e1a6486996e4"],
Cell[951076, 18324, 6108, 153, 178, "Output",ExpressionUUID->"0fbb7eda-413b-4ea1-b05f-c6adbd0e0d62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[957221, 18482, 240, 4, 29, "Input",ExpressionUUID->"cf35d38d-38db-4eec-9419-e6b3f3967a0b"],
Cell[957464, 18488, 14057, 252, 47, "Output",ExpressionUUID->"e66e0838-e53a-4a09-9723-0bb718a17ada"]
}, Open  ]]
}, Open  ]]
}
]
*)

