(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    939784,      19212]
NotebookOptionsPosition[    936216,      19142]
NotebookOutlinePosition[    936615,      19158]
CellTagsIndexPosition[    936572,      19155]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Built-in classifiers", "Section",
 CellChangeTimes->{{3.903680646109634*^9, 
  3.9036806540760603`*^9}},ExpressionUUID->"74cf6bf5-e390-40aa-aa1b-\
d1085a8e6f79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cl", "=", 
  RowBox[{"Classify", "[", "\"\<CountryFlag\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.903675946868462*^9, 3.903675996381403*^9}, {
  3.903676154365645*^9, 3.90367615479755*^9}, {3.903679975524779*^9, 
  3.9036799758256474`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"1d9582c8-dce4-4665-9411-e9cbd872eeed"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["232", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[{"\"Afghanistan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Albania\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Algeria\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"American Samoa\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"AmericanSamoa\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"AmericanSamoa\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Andorra\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Angola\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Anguilla\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Anguilla\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Anguilla\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Antigua and Barbuda\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"AntiguaBarbuda\""}], "]"}],
                     "\"Entity[\\\"Country\\\", \\\"AntiguaBarbuda\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Argentina\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Armenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Aruba\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Aruba\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Aruba\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Australia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Australia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Australia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Austria\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Azerbaijan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bahamas\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Bahamas\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Bahamas\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bahrain\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Bahrain\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Bahrain\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bangladesh\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Barbados\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Barbados\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Barbados\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Belarus\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Belgium\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Belize\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Belize\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Belize\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Benin\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Benin\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Benin\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bermuda\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Bermuda\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Bermuda\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bhutan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bolivia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bosnia and Herzegovina\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"BosniaHerzegovina\""}], 
                    "]"}], "\"Entity[\\\"Country\\\", \\\"BosniaHerzegovina\\\
\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Botswana\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Brazil\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"British Virgin Islands\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"BritishVirginIslands\""}], 
                    "]"}], "\"Entity[\\\"Country\\\", \
\\\"BritishVirginIslands\\\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Brunei\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Brunei\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Brunei\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bulgaria\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Burkina Faso\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Burundi\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Burundi\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Burundi\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Cambodia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Cameroon\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Canada\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Cape Verde\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"CapeVerde\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"CapeVerde\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Cayman Islands\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"CaymanIslands\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"CaymanIslands\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Central African Republic\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{"\"Country\"", ",", 
                    "\"CentralAfricanRepublic\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \
\\\"CentralAfricanRepublic\\\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Chad\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Chile\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Christmas Island\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"ChristmasIsland\""}], 
                    "]"}], "\"Entity[\\\"Country\\\", \
\\\"ChristmasIsland\\\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Cocos Keeling Islands\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"CocosKeelingIslands\""}], 
                    "]"}], "\"Entity[\\\"Country\\\", \\\"CocosKeelingIslands\
\\\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Colombia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Comoros\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Comoros\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Comoros\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Cook Islands\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"CookIslands\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"CookIslands\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Costa Rica\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"CostaRica\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"CostaRica\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Croatia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Cuba\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Cuba\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Cuba\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    RowBox[{"\[LeftSkeleton]", "132", "\[RightSkeleton]"}], 
                    ",", 
                    TemplateBox[{"\"Serbia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Serbia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Serbia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Seychelles\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Seychelles\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Seychelles\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Sierra Leone\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"SierraLeone\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"SierraLeone\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Singapore\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Singapore\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Singapore\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Sint Maarten\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"SintMaarten\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"SintMaarten\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Slovakia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Solomon Islands\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"SolomonIslands\""}], "]"}],
                     "\"Entity[\\\"Country\\\", \\\"SolomonIslands\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Somalia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Somalia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Somalia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"South Africa\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"SouthAfrica\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"SouthAfrica\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"South Korea\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"SouthKorea\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"SouthKorea\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"South Sudan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"SouthSudan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"SouthSudan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Spain\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Sri Lanka\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"SriLanka\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"SriLanka\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Sudan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Suriname\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Suriname\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Suriname\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Eswatini\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Swaziland\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Swaziland\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Sweden\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Switzerland\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Switzerland\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Switzerland\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Syria\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Syria\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Syria\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Taiwan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Taiwan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Taiwan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Tajikistan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Tanzania\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Tanzania\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Tanzania\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Thailand\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Thailand\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Thailand\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Togo\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Togo\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Togo\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Tonga\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Tonga\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Tonga\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Trinidad and Tobago\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"TrinidadTobago\""}], "]"}],
                     "\"Entity[\\\"Country\\\", \\\"TrinidadTobago\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Tunisia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Turkey\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Turkmenistan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Turks and Caicos Islands\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"TurksCaicosIslands\""}], 
                    "]"}], "\"Entity[\\\"Country\\\", \
\\\"TurksCaicosIslands\\\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Tuvalu\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Tuvalu\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Tuvalu\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Uganda\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Uganda\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Uganda\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Ukraine\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Ukraine\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Ukraine\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"United Arab Emirates\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedArabEmirates\""}], 
                    "]"}], "\"Entity[\\\"Country\\\", \
\\\"UnitedArabEmirates\\\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"United Kingdom\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"United States\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"United States Virgin Islands\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{"\"Country\"", ",", 
                    "\"UnitedStatesVirginIslands\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \
\\\"UnitedStatesVirginIslands\\\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Uruguay\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Uzbekistan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Vanuatu\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Vanuatu\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Vanuatu\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Vatican City\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"VaticanCity\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"VaticanCity\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Venezuela\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Vietnam\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Wallis and Futuna Islands\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"WallisFutuna\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"WallisFutuna\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"West Bank\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Western Sahara\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Yemen\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Zambia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Zimbabwe\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"", 
                    "\"country\""}, "Entity"]}], "}"}], Short[#, 1]& ]], 
                    Annotation[#, 
                    Short[{
                    Entity["Country", "Afghanistan"], 
                    Entity["Country", "Albania"], 
                    Entity["Country", "Algeria"], 
                    Entity["Country", "AmericanSamoa"], 
                    Entity["Country", "Andorra"], 
                    Entity["Country", "Angola"], 
                    Entity["Country", "Anguilla"], 
                    Entity["Country", "AntiguaBarbuda"], 
                    Entity["Country", "Argentina"], 
                    Entity["Country", "Armenia"], 
                    Entity["Country", "Aruba"], 
                    Entity["Country", "Australia"], 
                    Entity["Country", "Austria"], 
                    Entity["Country", "Azerbaijan"], 
                    Entity["Country", "Bahamas"], 
                    Entity["Country", "Bahrain"], 
                    Entity["Country", "Bangladesh"], 
                    Entity["Country", "Barbados"], 
                    Entity["Country", "Belarus"], 
                    Entity["Country", "Belgium"], 
                    Entity["Country", "Belize"], 
                    Entity["Country", "Benin"], 
                    Entity["Country", "Bermuda"], 
                    Entity["Country", "Bhutan"], 
                    Entity["Country", "Bolivia"], 
                    Entity["Country", "BosniaHerzegovina"], 
                    Entity["Country", "Botswana"], 
                    Entity["Country", "Brazil"], 
                    Entity["Country", "BritishVirginIslands"], 
                    Entity["Country", "Brunei"], 
                    Entity["Country", "Bulgaria"], 
                    Entity["Country", "BurkinaFaso"], 
                    Entity["Country", "Burundi"], 
                    Entity["Country", "Cambodia"], 
                    Entity["Country", "Cameroon"], 
                    Entity["Country", "Canada"], 
                    Entity["Country", "CapeVerde"], 
                    Entity["Country", "CaymanIslands"], 
                    Entity["Country", "CentralAfricanRepublic"], 
                    Entity["Country", "Chad"], 
                    Entity["Country", "Chile"], 
                    Entity["Country", "China"], 
                    Entity["Country", "ChristmasIsland"], 
                    Entity["Country", "CocosKeelingIslands"], 
                    Entity["Country", "Colombia"], 
                    Entity["Country", "Comoros"], 
                    Entity["Country", "CookIslands"], 
                    Entity["Country", "CostaRica"], 
                    Entity["Country", "Croatia"], 
                    Entity["Country", "Cuba"], 
                    Entity["Country", "Curacao"], 
                    Entity["Country", "Cyprus"], 
                    Entity["Country", "CzechRepublic"], 
                    Entity["Country", "DemocraticRepublicCongo"], 
                    Entity["Country", "Denmark"], 
                    Entity["Country", "Djibouti"], 
                    Entity["Country", "Dominica"], 
                    Entity["Country", "DominicanRepublic"], 
                    Entity["Country", "EastTimor"], 
                    Entity["Country", "Ecuador"], 
                    Entity["Country", "Egypt"], 
                    Entity["Country", "ElSalvador"], 
                    Entity["Country", "EquatorialGuinea"], 
                    Entity["Country", "Eritrea"], 
                    Entity["Country", "Estonia"], 
                    Entity["Country", "Ethiopia"], 
                    Entity["Country", "FalklandIslands"], 
                    Entity["Country", "FaroeIslands"], 
                    Entity["Country", "Fiji"], 
                    Entity["Country", "Finland"], 
                    Entity["Country", "France"], 
                    Entity["Country", "FrenchPolynesia"], 
                    Entity["Country", "Gabon"], 
                    Entity["Country", "Gambia"], 
                    Entity["Country", "GazaStrip"], 
                    Entity["Country", "Georgia"], 
                    Entity["Country", "Germany"], 
                    Entity["Country", "Ghana"], 
                    Entity["Country", "Gibraltar"], 
                    Entity["Country", "Greece"], 
                    Entity["Country", "Greenland"], 
                    Entity["Country", "Grenada"], 
                    Entity["Country", "Guam"], 
                    Entity["Country", "Guatemala"], 
                    Entity["Country", "Guernsey"], 
                    Entity["Country", "Guinea"], 
                    Entity["Country", "GuineaBissau"], 
                    Entity["Country", "Guyana"], 
                    Entity["Country", "Haiti"], 
                    Entity["Country", "Honduras"], 
                    Entity["Country", "HongKong"], 
                    Entity["Country", "Hungary"], 
                    Entity["Country", "Iceland"], 
                    Entity["Country", "India"], 
                    Entity["Country", "Indonesia"], 
                    Entity["Country", "Iran"], 
                    Entity["Country", "Iraq"], 
                    Entity["Country", "Ireland"], 
                    Entity["Country", "IsleOfMan"], 
                    Entity["Country", "Israel"], 
                    Entity["Country", "Italy"], 
                    Entity["Country", "IvoryCoast"], 
                    Entity["Country", "Jamaica"], 
                    Entity["Country", "Japan"], 
                    Entity["Country", "Jersey"], 
                    Entity["Country", "Jordan"], 
                    Entity["Country", "Kazakhstan"], 
                    Entity["Country", "Kenya"], 
                    Entity["Country", "Kiribati"], 
                    Entity["Country", "Kosovo"], 
                    Entity["Country", "Kuwait"], 
                    Entity["Country", "Kyrgyzstan"], 
                    Entity["Country", "Laos"], 
                    Entity["Country", "Latvia"], 
                    Entity["Country", "Lebanon"], 
                    Entity["Country", "Lesotho"], 
                    Entity["Country", "Liberia"], 
                    Entity["Country", "Libya"], 
                    Entity["Country", "Liechtenstein"], 
                    Entity["Country", "Lithuania"], 
                    Entity["Country", "Luxembourg"], 
                    Entity["Country", "Macau"], 
                    Entity["Country", "Macedonia"], 
                    Entity["Country", "Madagascar"], 
                    Entity["Country", "Malawi"], 
                    Entity["Country", "Malaysia"], 
                    Entity["Country", "Maldives"], 
                    Entity["Country", "Mali"], 
                    Entity["Country", "Malta"], 
                    Entity["Country", "MarshallIslands"], 
                    Entity["Country", "Mauritania"], 
                    Entity["Country", "Mauritius"], 
                    Entity["Country", "Mexico"], 
                    Entity["Country", "Micronesia"], 
                    Entity["Country", "Moldova"], 
                    Entity["Country", "Monaco"], 
                    Entity["Country", "Mongolia"], 
                    Entity["Country", "Montenegro"], 
                    Entity["Country", "Montserrat"], 
                    Entity["Country", "Morocco"], 
                    Entity["Country", "Mozambique"], 
                    Entity["Country", "Myanmar"], 
                    Entity["Country", "Namibia"], 
                    Entity["Country", "Nauru"], 
                    Entity["Country", "Nepal"], 
                    Entity["Country", "Netherlands"], 
                    Entity["Country", "NewZealand"], 
                    Entity["Country", "Nicaragua"], 
                    Entity["Country", "Niger"], 
                    Entity["Country", "Nigeria"], 
                    Entity["Country", "Niue"], 
                    Entity["Country", "NorfolkIsland"], 
                    Entity["Country", "NorthernMarianaIslands"], 
                    Entity["Country", "NorthKorea"], 
                    Entity["Country", "Norway"], 
                    Entity["Country", "Oman"], 
                    Entity["Country", "Pakistan"], 
                    Entity["Country", "Palau"], 
                    Entity["Country", "Panama"], 
                    Entity["Country", "PapuaNewGuinea"], 
                    Entity["Country", "Paraguay"], 
                    Entity["Country", "Peru"], 
                    Entity["Country", "Philippines"], 
                    Entity["Country", "PitcairnIslands"], 
                    Entity["Country", "Poland"], 
                    Entity["Country", "Portugal"], 
                    Entity["Country", "PuertoRico"], 
                    Entity["Country", "Qatar"], 
                    Entity["Country", "RepublicCongo"], 
                    Entity["Country", "Romania"], 
                    Entity["Country", "Russia"], 
                    Entity["Country", "Rwanda"], 
                    Entity["Country", "SaintHelena"], 
                    Entity["Country", "SaintKittsNevis"], 
                    Entity["Country", "SaintLucia"], 
                    Entity["Country", "SaintPierreMiquelon"], 
                    Entity["Country", "SaintVincentGrenadines"], 
                    Entity["Country", "Samoa"], 
                    Entity["Country", "SanMarino"], 
                    Entity["Country", "SaoTomePrincipe"], 
                    Entity["Country", "SaudiArabia"], 
                    Entity["Country", "Senegal"], 
                    Entity["Country", "Serbia"], 
                    Entity["Country", "Seychelles"], 
                    Entity["Country", "SierraLeone"], 
                    Entity["Country", "Singapore"], 
                    Entity["Country", "SintMaarten"], 
                    Entity["Country", "Slovakia"], 
                    Entity["Country", "Slovenia"], 
                    Entity["Country", "SolomonIslands"], 
                    Entity["Country", "Somalia"], 
                    Entity["Country", "SouthAfrica"], 
                    Entity["Country", "SouthKorea"], 
                    Entity["Country", "SouthSudan"], 
                    Entity["Country", "Spain"], 
                    Entity["Country", "SriLanka"], 
                    Entity["Country", "Sudan"], 
                    Entity["Country", "Suriname"], 
                    Entity["Country", "Swaziland"], 
                    Entity["Country", "Sweden"], 
                    Entity["Country", "Switzerland"], 
                    Entity["Country", "Syria"], 
                    Entity["Country", "Taiwan"], 
                    Entity["Country", "Tajikistan"], 
                    Entity["Country", "Tanzania"], 
                    Entity["Country", "Thailand"], 
                    Entity["Country", "Togo"], 
                    Entity["Country", "Tonga"], 
                    Entity["Country", "TrinidadTobago"], 
                    Entity["Country", "Tunisia"], 
                    Entity["Country", "Turkey"], 
                    Entity["Country", "Turkmenistan"], 
                    Entity["Country", "TurksCaicosIslands"], 
                    Entity["Country", "Tuvalu"], 
                    Entity["Country", "Uganda"], 
                    Entity["Country", "Ukraine"], 
                    Entity["Country", "UnitedArabEmirates"], 
                    Entity["Country", "UnitedKingdom"], 
                    Entity["Country", "UnitedStates"], 
                    Entity["Country", "UnitedStatesVirginIslands"], 
                    Entity["Country", "Uruguay"], 
                    Entity["Country", "Uzbekistan"], 
                    Entity["Country", "Vanuatu"], 
                    Entity["Country", "VaticanCity"], 
                    Entity["Country", "Venezuela"], 
                    Entity["Country", "Vietnam"], 
                    Entity["Country", "WallisFutuna"], 
                    Entity["Country", "WestBank"], 
                    Entity["Country", "WesternSahara"], 
                    Entity["Country", "Yemen"], 
                    Entity["Country", "Zambia"], 
                    Entity["Country", "Zimbabwe"]}, 1], "Tooltip"]& ], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["232", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[{"\"Afghanistan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Albania\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Algeria\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"American Samoa\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"AmericanSamoa\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"AmericanSamoa\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Andorra\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Angola\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Anguilla\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Anguilla\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Anguilla\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Antigua and Barbuda\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"AntiguaBarbuda\""}], "]"}],
                     "\"Entity[\\\"Country\\\", \\\"AntiguaBarbuda\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Argentina\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Armenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Aruba\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Aruba\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Aruba\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Australia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Australia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Australia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Austria\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Azerbaijan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bahamas\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Bahamas\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Bahamas\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bahrain\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Bahrain\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Bahrain\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bangladesh\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Barbados\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Barbados\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Barbados\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Belarus\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Belgium\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Belize\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Belize\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Belize\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Benin\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Benin\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Benin\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bermuda\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Bermuda\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Bermuda\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bhutan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bolivia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bosnia and Herzegovina\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"BosniaHerzegovina\""}], 
                    "]"}], "\"Entity[\\\"Country\\\", \\\"BosniaHerzegovina\\\
\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Botswana\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Brazil\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"British Virgin Islands\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"BritishVirginIslands\""}], 
                    "]"}], "\"Entity[\\\"Country\\\", \
\\\"BritishVirginIslands\\\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Brunei\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Brunei\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Brunei\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Bulgaria\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Burkina Faso\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Burundi\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Burundi\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Burundi\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Cambodia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Cameroon\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Canada\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Cape Verde\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"CapeVerde\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"CapeVerde\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Cayman Islands\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"CaymanIslands\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"CaymanIslands\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Central African Republic\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{"\"Country\"", ",", 
                    "\"CentralAfricanRepublic\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \
\\\"CentralAfricanRepublic\\\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Chad\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Chile\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Christmas Island\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"ChristmasIsland\""}], 
                    "]"}], "\"Entity[\\\"Country\\\", \
\\\"ChristmasIsland\\\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Cocos Keeling Islands\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"CocosKeelingIslands\""}], 
                    "]"}], "\"Entity[\\\"Country\\\", \\\"CocosKeelingIslands\
\\\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Colombia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Comoros\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Comoros\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Comoros\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Cook Islands\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"CookIslands\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"CookIslands\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Costa Rica\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"CostaRica\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"CostaRica\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Croatia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Cuba\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Cuba\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Cuba\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    RowBox[{"\[LeftSkeleton]", "132", "\[RightSkeleton]"}], 
                    ",", 
                    TemplateBox[{"\"Serbia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Serbia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Serbia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Seychelles\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Seychelles\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Seychelles\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Sierra Leone\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"SierraLeone\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"SierraLeone\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Singapore\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Singapore\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Singapore\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Sint Maarten\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"SintMaarten\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"SintMaarten\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Slovakia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Solomon Islands\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"SolomonIslands\""}], "]"}],
                     "\"Entity[\\\"Country\\\", \\\"SolomonIslands\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Somalia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Somalia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Somalia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"South Africa\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"SouthAfrica\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"SouthAfrica\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"South Korea\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"SouthKorea\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"SouthKorea\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"South Sudan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"SouthSudan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"SouthSudan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Spain\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Sri Lanka\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"SriLanka\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"SriLanka\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Sudan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Suriname\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Suriname\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Suriname\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Eswatini\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Swaziland\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Swaziland\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Sweden\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Switzerland\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Switzerland\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Switzerland\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Syria\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Syria\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Syria\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Taiwan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Taiwan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Taiwan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Tajikistan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Tanzania\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Tanzania\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Tanzania\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Thailand\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Thailand\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Thailand\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Togo\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Togo\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Togo\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Tonga\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Tonga\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Tonga\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Trinidad and Tobago\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"TrinidadTobago\""}], "]"}],
                     "\"Entity[\\\"Country\\\", \\\"TrinidadTobago\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Tunisia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Turkey\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Turkmenistan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Turks and Caicos Islands\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"TurksCaicosIslands\""}], 
                    "]"}], "\"Entity[\\\"Country\\\", \
\\\"TurksCaicosIslands\\\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Tuvalu\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Tuvalu\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Tuvalu\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Uganda\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Uganda\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Uganda\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Ukraine\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Ukraine\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Ukraine\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"United Arab Emirates\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedArabEmirates\""}], 
                    "]"}], "\"Entity[\\\"Country\\\", \
\\\"UnitedArabEmirates\\\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"United Kingdom\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"United States\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"United States Virgin Islands\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{"\"Country\"", ",", 
                    "\"UnitedStatesVirginIslands\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \
\\\"UnitedStatesVirginIslands\\\"]\"", "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Uruguay\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Uzbekistan\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Vanuatu\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Vanuatu\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Vanuatu\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Vatican City\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"VaticanCity\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"VaticanCity\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Venezuela\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Vietnam\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Wallis and Futuna Islands\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"WallisFutuna\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"WallisFutuna\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"West Bank\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Western Sahara\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Yemen\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Zambia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", 
                    "\"country\""}, "Entity"], ",", 
                    TemplateBox[{"\"Zimbabwe\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"", 
                    "\"country\""}, "Entity"]}], "}"}], Short[#, 1]& ]], 
                    Annotation[#, 
                    Short[{
                    Entity["Country", "Afghanistan"], 
                    Entity["Country", "Albania"], 
                    Entity["Country", "Algeria"], 
                    Entity["Country", "AmericanSamoa"], 
                    Entity["Country", "Andorra"], 
                    Entity["Country", "Angola"], 
                    Entity["Country", "Anguilla"], 
                    Entity["Country", "AntiguaBarbuda"], 
                    Entity["Country", "Argentina"], 
                    Entity["Country", "Armenia"], 
                    Entity["Country", "Aruba"], 
                    Entity["Country", "Australia"], 
                    Entity["Country", "Austria"], 
                    Entity["Country", "Azerbaijan"], 
                    Entity["Country", "Bahamas"], 
                    Entity["Country", "Bahrain"], 
                    Entity["Country", "Bangladesh"], 
                    Entity["Country", "Barbados"], 
                    Entity["Country", "Belarus"], 
                    Entity["Country", "Belgium"], 
                    Entity["Country", "Belize"], 
                    Entity["Country", "Benin"], 
                    Entity["Country", "Bermuda"], 
                    Entity["Country", "Bhutan"], 
                    Entity["Country", "Bolivia"], 
                    Entity["Country", "BosniaHerzegovina"], 
                    Entity["Country", "Botswana"], 
                    Entity["Country", "Brazil"], 
                    Entity["Country", "BritishVirginIslands"], 
                    Entity["Country", "Brunei"], 
                    Entity["Country", "Bulgaria"], 
                    Entity["Country", "BurkinaFaso"], 
                    Entity["Country", "Burundi"], 
                    Entity["Country", "Cambodia"], 
                    Entity["Country", "Cameroon"], 
                    Entity["Country", "Canada"], 
                    Entity["Country", "CapeVerde"], 
                    Entity["Country", "CaymanIslands"], 
                    Entity["Country", "CentralAfricanRepublic"], 
                    Entity["Country", "Chad"], 
                    Entity["Country", "Chile"], 
                    Entity["Country", "China"], 
                    Entity["Country", "ChristmasIsland"], 
                    Entity["Country", "CocosKeelingIslands"], 
                    Entity["Country", "Colombia"], 
                    Entity["Country", "Comoros"], 
                    Entity["Country", "CookIslands"], 
                    Entity["Country", "CostaRica"], 
                    Entity["Country", "Croatia"], 
                    Entity["Country", "Cuba"], 
                    Entity["Country", "Curacao"], 
                    Entity["Country", "Cyprus"], 
                    Entity["Country", "CzechRepublic"], 
                    Entity["Country", "DemocraticRepublicCongo"], 
                    Entity["Country", "Denmark"], 
                    Entity["Country", "Djibouti"], 
                    Entity["Country", "Dominica"], 
                    Entity["Country", "DominicanRepublic"], 
                    Entity["Country", "EastTimor"], 
                    Entity["Country", "Ecuador"], 
                    Entity["Country", "Egypt"], 
                    Entity["Country", "ElSalvador"], 
                    Entity["Country", "EquatorialGuinea"], 
                    Entity["Country", "Eritrea"], 
                    Entity["Country", "Estonia"], 
                    Entity["Country", "Ethiopia"], 
                    Entity["Country", "FalklandIslands"], 
                    Entity["Country", "FaroeIslands"], 
                    Entity["Country", "Fiji"], 
                    Entity["Country", "Finland"], 
                    Entity["Country", "France"], 
                    Entity["Country", "FrenchPolynesia"], 
                    Entity["Country", "Gabon"], 
                    Entity["Country", "Gambia"], 
                    Entity["Country", "GazaStrip"], 
                    Entity["Country", "Georgia"], 
                    Entity["Country", "Germany"], 
                    Entity["Country", "Ghana"], 
                    Entity["Country", "Gibraltar"], 
                    Entity["Country", "Greece"], 
                    Entity["Country", "Greenland"], 
                    Entity["Country", "Grenada"], 
                    Entity["Country", "Guam"], 
                    Entity["Country", "Guatemala"], 
                    Entity["Country", "Guernsey"], 
                    Entity["Country", "Guinea"], 
                    Entity["Country", "GuineaBissau"], 
                    Entity["Country", "Guyana"], 
                    Entity["Country", "Haiti"], 
                    Entity["Country", "Honduras"], 
                    Entity["Country", "HongKong"], 
                    Entity["Country", "Hungary"], 
                    Entity["Country", "Iceland"], 
                    Entity["Country", "India"], 
                    Entity["Country", "Indonesia"], 
                    Entity["Country", "Iran"], 
                    Entity["Country", "Iraq"], 
                    Entity["Country", "Ireland"], 
                    Entity["Country", "IsleOfMan"], 
                    Entity["Country", "Israel"], 
                    Entity["Country", "Italy"], 
                    Entity["Country", "IvoryCoast"], 
                    Entity["Country", "Jamaica"], 
                    Entity["Country", "Japan"], 
                    Entity["Country", "Jersey"], 
                    Entity["Country", "Jordan"], 
                    Entity["Country", "Kazakhstan"], 
                    Entity["Country", "Kenya"], 
                    Entity["Country", "Kiribati"], 
                    Entity["Country", "Kosovo"], 
                    Entity["Country", "Kuwait"], 
                    Entity["Country", "Kyrgyzstan"], 
                    Entity["Country", "Laos"], 
                    Entity["Country", "Latvia"], 
                    Entity["Country", "Lebanon"], 
                    Entity["Country", "Lesotho"], 
                    Entity["Country", "Liberia"], 
                    Entity["Country", "Libya"], 
                    Entity["Country", "Liechtenstein"], 
                    Entity["Country", "Lithuania"], 
                    Entity["Country", "Luxembourg"], 
                    Entity["Country", "Macau"], 
                    Entity["Country", "Macedonia"], 
                    Entity["Country", "Madagascar"], 
                    Entity["Country", "Malawi"], 
                    Entity["Country", "Malaysia"], 
                    Entity["Country", "Maldives"], 
                    Entity["Country", "Mali"], 
                    Entity["Country", "Malta"], 
                    Entity["Country", "MarshallIslands"], 
                    Entity["Country", "Mauritania"], 
                    Entity["Country", "Mauritius"], 
                    Entity["Country", "Mexico"], 
                    Entity["Country", "Micronesia"], 
                    Entity["Country", "Moldova"], 
                    Entity["Country", "Monaco"], 
                    Entity["Country", "Mongolia"], 
                    Entity["Country", "Montenegro"], 
                    Entity["Country", "Montserrat"], 
                    Entity["Country", "Morocco"], 
                    Entity["Country", "Mozambique"], 
                    Entity["Country", "Myanmar"], 
                    Entity["Country", "Namibia"], 
                    Entity["Country", "Nauru"], 
                    Entity["Country", "Nepal"], 
                    Entity["Country", "Netherlands"], 
                    Entity["Country", "NewZealand"], 
                    Entity["Country", "Nicaragua"], 
                    Entity["Country", "Niger"], 
                    Entity["Country", "Nigeria"], 
                    Entity["Country", "Niue"], 
                    Entity["Country", "NorfolkIsland"], 
                    Entity["Country", "NorthernMarianaIslands"], 
                    Entity["Country", "NorthKorea"], 
                    Entity["Country", "Norway"], 
                    Entity["Country", "Oman"], 
                    Entity["Country", "Pakistan"], 
                    Entity["Country", "Palau"], 
                    Entity["Country", "Panama"], 
                    Entity["Country", "PapuaNewGuinea"], 
                    Entity["Country", "Paraguay"], 
                    Entity["Country", "Peru"], 
                    Entity["Country", "Philippines"], 
                    Entity["Country", "PitcairnIslands"], 
                    Entity["Country", "Poland"], 
                    Entity["Country", "Portugal"], 
                    Entity["Country", "PuertoRico"], 
                    Entity["Country", "Qatar"], 
                    Entity["Country", "RepublicCongo"], 
                    Entity["Country", "Romania"], 
                    Entity["Country", "Russia"], 
                    Entity["Country", "Rwanda"], 
                    Entity["Country", "SaintHelena"], 
                    Entity["Country", "SaintKittsNevis"], 
                    Entity["Country", "SaintLucia"], 
                    Entity["Country", "SaintPierreMiquelon"], 
                    Entity["Country", "SaintVincentGrenadines"], 
                    Entity["Country", "Samoa"], 
                    Entity["Country", "SanMarino"], 
                    Entity["Country", "SaoTomePrincipe"], 
                    Entity["Country", "SaudiArabia"], 
                    Entity["Country", "Senegal"], 
                    Entity["Country", "Serbia"], 
                    Entity["Country", "Seychelles"], 
                    Entity["Country", "SierraLeone"], 
                    Entity["Country", "Singapore"], 
                    Entity["Country", "SintMaarten"], 
                    Entity["Country", "Slovakia"], 
                    Entity["Country", "Slovenia"], 
                    Entity["Country", "SolomonIslands"], 
                    Entity["Country", "Somalia"], 
                    Entity["Country", "SouthAfrica"], 
                    Entity["Country", "SouthKorea"], 
                    Entity["Country", "SouthSudan"], 
                    Entity["Country", "Spain"], 
                    Entity["Country", "SriLanka"], 
                    Entity["Country", "Sudan"], 
                    Entity["Country", "Suriname"], 
                    Entity["Country", "Swaziland"], 
                    Entity["Country", "Sweden"], 
                    Entity["Country", "Switzerland"], 
                    Entity["Country", "Syria"], 
                    Entity["Country", "Taiwan"], 
                    Entity["Country", "Tajikistan"], 
                    Entity["Country", "Tanzania"], 
                    Entity["Country", "Thailand"], 
                    Entity["Country", "Togo"], 
                    Entity["Country", "Tonga"], 
                    Entity["Country", "TrinidadTobago"], 
                    Entity["Country", "Tunisia"], 
                    Entity["Country", "Turkey"], 
                    Entity["Country", "Turkmenistan"], 
                    Entity["Country", "TurksCaicosIslands"], 
                    Entity["Country", "Tuvalu"], 
                    Entity["Country", "Uganda"], 
                    Entity["Country", "Ukraine"], 
                    Entity["Country", "UnitedArabEmirates"], 
                    Entity["Country", "UnitedKingdom"], 
                    Entity["Country", "UnitedStates"], 
                    Entity["Country", "UnitedStatesVirginIslands"], 
                    Entity["Country", "Uruguay"], 
                    Entity["Country", "Uzbekistan"], 
                    Entity["Country", "Vanuatu"], 
                    Entity["Country", "VaticanCity"], 
                    Entity["Country", "Venezuela"], 
                    Entity["Country", "Vietnam"], 
                    Entity["Country", "WallisFutuna"], 
                    Entity["Country", "WestBank"], 
                    Entity["Country", "WesternSahara"], 
                    Entity["Country", "Yemen"], 
                    Entity["Country", "Zambia"], 
                    Entity["Country", "Zimbabwe"]}, 1], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["10672", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[ClassifierFunction, 9427744, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", ClassifierFunction, 9427744, 
            8009040494682814401623088732543786741500257572149382995968, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  BoxID -> 8009040494682814401623088732543786741500257572149382995968,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.922506970004477*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"03699f8d-2f0b-42d7-a127-0b6939138847"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flags", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"CountryData", "[", 
     RowBox[{"#", ",", "\"\<Flag\>\""}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<France\>\"", ",", " ", "\"\<Brazil\>\"", ",", "\"\<Nepal\>\"", ",", 
     "\"\<Sudan\>\""}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.903676054464176*^9, 3.903676091010334*^9}, {
  3.903676142192807*^9, 3.9036761426859927`*^9}, {3.903679982059547*^9, 
  3.903680070760975*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"edbef7a6-e7ac-4e82-99d4-a0cb21dccd90"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    {Thickness[0.001388888888888889], 
     {FaceForm[{RGBColor[0.9294119999999999, 0.160784, 0.223529], Opacity[
      1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 0.}, {
       0., 480.}, {720., 480.}, {720., 0.}}}]}, 
     {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
      FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 480.}, {480.,
        480.}, {480., 0.}, {0., 0.}}}]}, 
     {FaceForm[{RGBColor[0., 0.13725500000000002`, 0.5843139999999999], 
      Opacity[1.]}], 
      FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 480.}, {240.,
        480.}, {240., 0.}, {0., 0.}}}]}},
    AspectRatio->Automatic,
    ImageSize->{{128}, {85}},
    PlotRange->{{0., 720.}, {0., 480.}}], ",", 
   GraphicsBox[{
     {Thickness[0.001736111111111111], 
      {FaceForm[{RGBColor[0., 0.15294100000000005`, 0.46274499999999996`], 
       Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        388.801, 202.598}, {388.801, 146.93}, {343.672, 
        101.80199999999999`}, {288., 101.80199999999999`}, {
        232.32800000000003`, 101.80199999999999`}, {187.19899999999998`, 
        146.93}, {187.19899999999998`, 202.598}, {187.19899999999998`, 
        258.27}, {232.32800000000003`, 303.399}, {288., 303.399}, {343.672, 
        303.399}, {388.801, 258.27}, {388.801, 202.598}}}]}, 
      {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIvIGYC4k1z3y8/dlrnwJeSdRqqLB/sYXy+9qWN8qyG
DksKbLmuL9Y8cC0gS39RqwOEn6x84NAiJT/1RA8Hj4dVIuvcpQ6kLpe/4ioX
4DDpbY29ady//bNYb8kG/Qh2COPTBRop4HDOgjewdXW4w9MLSrd/1hk43Jvg
xuonFO9gGrfLkyfI0UGgL/KbyrskB08eJu32ZT4Omy/zv1I6nOqQORFo4N9g
hw0rOi57zshwWCMTlWJ9PMph+Z/syqd3shxigdqZxBMdgt7ZHXdPzXEAGp61
50OSg6RVWUCnZq6DcPOBUwvvpji4i88O49qf69A7PU+o+UqagweIr5znMOHQ
V42Y0xkOm0D2tec5PF46+4jCmSyHP/cFRVftzHO4AzLvTA6cb3BXha3xbB6c
3/o6cIdcegFc/0WQ95IK4eaDvR9bBLf/vj/QBSHFcPcBfXPf37EE7n5QcDBJ
l8H9ZwcM/YKz5XD/M4CARSU8fA4Dnd+/qAoeftXA2Hh4pBoevpMlWML4Omvg
4Q927+saB1j8gN1nWusAiz9eED+91gEWv2D5mbUOsPgv3zdfSn9zrQMsfcD4
sPTT6Zjw9MKZGgz+9b/JilYiBhD3bK1xiBOx/WCoYQ8xvxXIT3f+N/OnmwMo
NT0Mq3FgWPvz4/Q4PwdwchGocWi49ueH9/kgh6sVL9UMt1Q75GhsFb/oFeag
D4qP31UO4q78NTxOsQ475YA+fFXpkFr4f+LLS4kQ+6ZWOJhMudWdUZviAEo+
9+3LHZQEpQ4eU093yHn+e+XHZaUOX4y/7nL1yoSEz8tih5ijj8xbd2dB7OMq
hoR/SbbDcW/zTkelIoeeRex2bIw5DoobijImmhY6bATFR3yOQy7IPI8Ch0BQ
fO7NgaSv9XkOR8IubDnyJgeenmB8bmD02r7KgvMtt5wo28eeCdcPTk966XDz
we4LTYXbD+a3JsPd1w+y73gi3P3FGcAMND0G7j9w/jYOg/v/GSiA7wXAw6dd
7Oa578Lu8PCD8G3h4evSDQyxTkN4+IPDp0MdHj9aIA3lsvD480sSiLDcIgiP
3wiwB7/bw+KfAQpg6QPGh6UfAPPVFAQ=
        "]]}, 
      {FaceForm[{RGBColor[0., 0.607843, 0.22745100000000001`], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, CompressedData["
1:eJxlUltIVFEUHaaQlAqyPjIlbJpEkB4QMWkMs8QkskSqn5DJbNA6J9zXR1GR
gzAMFmKkET2gh5ZKiREpWn2MNZiY9FFmyZAykMgQPSyibJhqonO8m4I6cLns
e89ae6+19gpP5c7yORaLxaqeFH4/bFm2NgyJwOGzS+daCbN1mcTW+daskwmE
EdtErO6EREaC71xeKuH0BSPZf1lidc+VTzdyCNNe14aSHsYXE7o+jxZ6AhLz
bqUVl/kJTQMzme57Eom67iI813zq/irN94JQu+T2lsmrEr9eHnubESNsbqx4
88Mn4Q8+uZafbKD+/Y77y8sZn2WgWfO5mN9h4JA4M+1NlQi1VTmT1huo0XVU
oEDPv8bAq6fRXVNjAt8y3U0DKQYs+gQFDuxX5zv36xQmfoIw1XFpML1V4JT+
3E24nn/3S7yd6wYy+TqZbx9hXdie4OsXOJ+niDYRPmo/xgUW7c7uHbaRqTPK
+ETmS5NmHa/Av/7PzpP919/c0siIrUhi8rgyykm4qOwPeiRaFcxeQKb+SmnO
s4fweJujIdfL96t5Xh/n18j4OomVKoaD7YSc3uEjD2olbg4pYD+Z/lRJDKbf
qRFjnE8J80XI7FPIec2Q6bdDQnUtjfzkfbDJP/5u1z8WSHQrOUNRwmIdbEzg
a1wRvON9+yBMn0Ls/2sBLX/oEWFU78s4+93J+LBAtTMp1NZM0DIC6r5ek/qj
vJ+K75mS3bGX84kzXxGhT8ltWSjNvFzc3y7h1ou68X//fwNhy3j3
        "]], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
         3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
         3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {{{209.85200000000003`, 
         232.93}, {211.629, 233.055}, {211.383, 236.61399999999998`}, {
         215.21099999999998`, 236.88000000000002`}, {216., 236.934}, {216.762,
          237.313}, {217.277, 237.911}, {217.797, 238.509}, {218.066, 
         239.313}, {218.012, 240.102}, {217.95700000000002`, 
         240.88800000000003`}, {217.578, 241.64899999999997`}, {
         216.98000000000002`, 242.16899999999998`}, {216.383, 242.684}, {
         215.578, 242.954}, {214.789, 242.899}, {209.32000000000002`, 
         242.516}}, {{211.258, 238.39100000000002`}, {214.94899999999998`, 
         238.64899999999997`}, {215.27299999999997`, 238.67299999999997`}, {
         215.58200000000002`, 238.829}, {215.797, 239.071}, {216.008, 
         239.313}, {216.117, 239.64499999999998`}, {216.094, 239.966}, {
         216.07399999999998`, 240.29}, {215.918, 240.602}, {215.676, 
         240.813}, {215.43, 241.024}, {215.102, 241.134}, {214.777, 
         241.11399999999998`}, {211.086, 240.85200000000003`}}}], 
       FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
        217.99200000000002`, 233.501}, {217.895, 234.86800000000002`}, {
        217.684, 237.88000000000002`}, {215.63299999999998`, 
        237.73499999999999`}, {213.035, 237.55200000000002`}, {
        216.04299999999998`, 237.76299999999998`}, {216.254, 234.755}, {
        216.35200000000003`, 233.38800000000003`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
        3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
        0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKF1oy3V98YFsh70lkyVYzHIdvM07HRMCcxx6p+cJ
NVvkOshGpVjfL85x+Hel4qWaZa7DzXPfgx9PzXGofKlmyOGR6/BNI6b/0Noc
h5DHS2cfSYDyj+Y4rDgGNKky10GVrXGq82Wo+jm5DjOAxh64lOPgxcOk3b4v
18GlO+f574s5DulpQPAKaj+QD6Ke8uQ5XFS6/bPuUI7Dl79AB+jlQcxfmeMg
EGG55YRbnsMi122f/07IcRAE8eOg6vNyHBxM43Z55uQ5MICAT47D5rnvlx/L
znNQA7lndzbEP5l5DgUg///IdgCa+lWjIBeuHuz+Qqh/EnMg/gbyQcpiynMg
5lTnOlwA2deW43B9MdCk7lwHoO9OLQSGj+4moIWzch24QBLzoOG5ARp+c3Mc
QN5NO5brYHBXha0RyAfHw4NciH/m5Dh4gsLnW64D0Fdl+yZDw48H6p8WqP3S
eQ4gZzqWQMNPC+r/OKh7jKH+84C6xyjPIWPi2xr7r1D/G+Y5AADhQuX/
        "]], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}}}, {{{234.207, 233.809}, {242.844, 233.509}, {242.90200000000002`, 
        235.29}, {235.914, 235.532}, {236., 238.001}, {241.484, 237.809}, {
        241.539, 239.454}, {236.059, 239.64499999999998`}, {236.125, 
        241.563}, {242.70299999999997`, 241.333}, {242.766, 
        243.11399999999998`}, {234.54299999999998`, 243.403}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}, {0, 1, 0}}}, {{{246.38700000000003`, 233.29}, {
        248.02700000000002`, 233.14499999999998`}, {248.598, 
        239.70399999999998`}, {249.93800000000002`, 232.98100000000002`}, {
        251.441, 232.848}, {253.92600000000002`, 239.23899999999998`}, {
        253.35500000000002`, 232.68}, {254.99200000000002`, 232.536}, {
        255.83200000000002`, 242.102}, {253.43800000000002`, 242.309}, {
        250.953, 235.91899999999998`}, {249.61299999999997`, 
        242.64499999999998`}, {247.22299999999998`, 242.85200000000003`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}}}, {{{266.277, 231.048}, {273.371, 229.829}, {273.65200000000004`, 
        231.45000000000002`}, {268.176, 232.39100000000002`}, {268.547, 
        234.55200000000002`}, {273.008, 233.786}, {273.289, 235.407}, {
        268.828, 236.177}, {269.082, 237.661}, {274.387, 236.751}, {274.668, 
        238.372}, {267.73799999999994`, 239.563}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
         3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
         3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {{{284.508, 227.466}, {
         286.22999999999996`, 227.02}, {287.125, 230.47299999999998`}, {
         290.84400000000005`, 229.51299999999998`}, {291.605, 229.313}, {
         292.449, 229.43}, {293.129, 229.833}, {293.809, 230.231}, {294.32, 
         230.911}, {294.52, 231.677}, {294.719, 232.442}, {
         294.59799999999996`, 233.282}, {294.199, 233.96200000000002`}, {
         293.79699999999997`, 234.64499999999998`}, {293.117, 235.153}, {
         292.35200000000003`, 235.35200000000003`}, {287.043, 236.727}}, {{
         287.57, 232.2}, {291.156, 231.26999999999998`}, {291.469, 
         231.18800000000002`}, {291.812, 231.23899999999998`}, {292.09, 
         231.403}, {292.371, 231.567}, {292.578, 231.845}, {292.66, 
         232.157}, {292.742, 232.47}, {292.691, 232.813}, {292.527, 
         233.091}, {292.363, 233.372}, {292.08599999999996`, 
         233.57899999999998`}, {291.77299999999997`, 233.661}, {288.188, 
         234.58700000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
         3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
         3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {{{296.28499999999997`, 
         224.32500000000002`}, {297.984, 223.79}, {299.059, 
         227.18800000000002`}, {302.719, 226.036}, {303.47299999999996`, 
         225.798}, {304.32, 225.872}, {305.02, 226.23499999999999`}, {305.719,
          226.598}, {306.26599999999996`, 227.251}, {306.504, 228.005}, {
         306.742, 228.759}, {306.668, 229.602}, {306.301, 230.305}, {
         305.93799999999993`, 231.005}, {305.28499999999997`, 
         231.55200000000002`}, {304.53499999999997`, 231.79}, {299.301, 
         233.43800000000002`}}, {{299.594, 228.88800000000003`}, {303.125, 
         227.77399999999997`}, {303.43399999999997`, 227.68}, {303.777, 
         227.708}, {304.066, 227.85600000000002`}, {304.35200000000003`, 
         228.009}, {304.574, 228.27399999999997`}, {304.672, 228.583}, {
         304.77, 228.89100000000002`}, {304.73799999999994`, 
         229.23499999999999`}, {304.59, 229.524}, {304.441, 229.809}, {
         304.176, 230.032}, {303.867, 230.13}, {300.33599999999996`, 
         231.24299999999997`}}}], 
       FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{304.066, 
        221.872}, {304.47999999999996`, 223.18}, {305.387, 226.055}, {
        303.42599999999993`, 226.677}, {300.93799999999993`, 
        227.45800000000003`}, {303.816, 226.55200000000002`}, {
        302.90999999999997`, 223.67299999999997`}, {302.4959999999999, 
        222.364}}}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, CompressedData["
1:eJxlUmtIlFEQXTawByZJERQZm6wSRZRESEVwwpbFLGKTYJEkEwPrjg+8IZpg
LRW+oo+kxw9Zs8TUCDMxiZ5m6xL9MK0kVCSWKJECKcmIMrrTN7VQH1wuw8w9
Z84536rcor2H5jgcDqc5y+Q+tqTDG6nUmFm93+o7qLCmaunIgKXx81XZZPI+
BVdnSf65Zo3yyeSUeX6FwcSxb5XdMn9YYcO4OybQrzH/xoqsvAqFbQteNxe/
1Hj+NfNtS4PCEM+PakSY6LHgRTSmZw3B+2h9hia+t8cTnnwxwKPCv4nsvsFj
tJCfsPhk77Mrhi+1ZnvOu6OE7qelDy+bfdrCGak1AYKXicy+POY5S1i4ris4
Zcl+dYTsu+mxzuPCV05w8Fco+vIJn1/szl2Uo3ErONUa9hKuenqmZ/0aTcvX
j7sTCXGM59NwG1lHfqi/9W8/hhQKDOynP/MdyuY/oMFXa61CQlbe1jcFGjtj
nWurChX+9Z9lDVZrJMUELqRdkrpeg5+HLfG/UfDrFa41hFydbaInqFDBeF3i
X7tCBht1T/oPFDazYY8kj2GFYTOWEhI/Pwq+qT/47qw8PZfQx3n0ir8JhBbm
uy/9jVH/izn4HYTbXF/XyLbMy11k79ck85ni53nh95Gtr1b0ewTvhMYpzm8L
gWN3lUk/iez9teiPI7Cde4o00tnPGWXna+qLaXU0MSZ5lGiMDJgfsl+hmvlK
pX8z6n+83yA3/u//L3ckg3w=
        "]]}, 
      {FaceForm[{RGBColor[0., 0.607843, 0.22745100000000001`], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, CompressedData["
1:eJxlkntIVFEQxpdN1BbR1rRSyHzioxeVJmjpZxmuWqQZ0kNLTGO7gw9sMNx8
YGa2VJYolBpBiaQVYg9JKkOlVIrM9A8zKVERK1EqqAiNusc9FNSBy2E4M3O/
+X3jkZq1K32BRqPRqp+LvKNGTU5NGxheeteOrpcKumKDzRGRjISZsO6oDgVf
+nekLtrDcCzf+827U8Fm3WBd9hHGmvdt66z6FRx3alJbMGK3eGaMjypYXNL+
7KqZMd4c+KlOQzCI/hUMl5DcOLOPjKsZr4cuFB2OIZgjUib6ahiNc5Q3wYSL
mY4l7VXy/9WE+ton7s3lsr6NsPatt3VxMcOwtDZRN0zImJxt/JzN2Fj15ozx
A6HVrXQqPoVhc7+ldPI7oc9z+Efhdka0yFdj9bXVLZRxd8Dho+ek1OPPuJh3
s2nroOznyhgT+lvJMp8jw1vwqZSxjnHi+aEXPZmEkHs9uY8XMm43nB6IjiQE
lC0Z6nVgTCXFx9i6E5bvSwsdcWaACufqZxVULrNKtPdi6AXPdwr+5T//Hi7r
rQiXBA8DI/npWHCpWt/51S/p/G6pb05B8oNoO+1BOY8N/fHHVfDSE16J+XMY
567ZhFn7SH7HpN5NZOmXzzCtiDqalkDwaM4xVhQwYoSfGYRusQ8mmX+SYBLz
5zKu+PTYNtQQjBXT+eFZUs8tWZ/OyDbUaX1bJI/9jJ8jeucbqn8aceIYv3TV
K0seyfxtcr/u/PVnntd1wrhYgPWMXu20vX8VWfisZpwV8xTIfn4M4+VTDZ3p
ZOHhK/2MJczkhwcdCJD7FSj9VusfFq2KLHMjCHt2Bkk9dvQf/9+trlks
        "]]}, 
      {FaceForm[{RGBColor[0., 0.607843, 0.22745100000000001`], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
        325.77299999999997`, 218.622}, {329.105, 217.17299999999997`}, {
        328.559, 215.915}, {325.227, 217.364}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{327.848, 
        217.72}, {329.105, 217.17299999999997`}, {327.191, 
        212.76999999999998`}, {325.93399999999997`, 213.317}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
         3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
         3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {{{330.40999999999997`, 
         211.266}, {332.004, 210.47299999999998`}, {333.594, 213.665}, {
         337.03099999999995`, 211.95000000000002`}, {337.73799999999994`, 
         211.598}, {338.58599999999996`, 211.54}, {339.33599999999996`, 
         211.79}, {340.08599999999996`, 212.04}, {340.727, 212.598}, {341.078,
          213.305}, {341.42999999999995`, 214.01299999999998`}, {
         341.48799999999994`, 214.86}, {341.23799999999994`, 215.606}, {
         340.98799999999994`, 216.35600000000002`}, {340.42999999999995`, 
         216.997}, {339.72299999999996`, 217.35200000000003`}, {334.816, 
         219.798}}, {{334.39099999999996`, 215.259}, {337.703, 213.606}, {
         337.99199999999996`, 213.46200000000002`}, {338.34000000000003`, 
         213.43800000000002`}, {338.648, 213.54}, {338.953, 
         213.64499999999998`}, {339.215, 213.872}, {339.35900000000004`, 
         214.161}, {339.504, 214.45000000000002`}, {339.527, 214.798}, {
         339.42599999999993`, 215.102}, {339.324, 215.411}, {339.094, 
         215.67299999999997`}, {338.805, 215.817}, {335.49199999999996`, 
         217.47}}}], 
       FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
        337.71099999999996`, 207.626}, {338.324, 208.85600000000002`}, {
        339.668, 211.555}, {337.828, 212.47299999999998`}, {335.4959999999999,
         213.634}, {338.195, 212.29}, {336.85200000000003`, 209.591}, {
        336.23799999999994`, 208.36}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}}}, {{{341.277, 205.74699999999999`}, {348.79699999999997`, 
        201.493}, {349.676, 203.04399999999998`}, {343.58599999999996`, 
        206.489}, {344.801, 208.638}, {349.578, 205.934}, {350.387, 
        207.36800000000002`}, {345.613, 210.067}, {346.559, 
        211.73899999999998`}, {352.289, 208.497}, {353.16400000000004`, 
        210.048}, {346.004, 214.102}}}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4gtKt3/WmZQ5rDjmbd6pmOkAohx1yhxeB+6Q
a2XPdNhyomzffKC8YITllhOvMhxaQRLuZQ5OCU8vKF3OcBBuPnBqYWSZwxuQ
+t0ZEP1pZQ4qQGOz9mQ4KGwoypiYXeYgrX9Xhe1shsPbGnvTuJoyh28aMf2H
GDMdMiYCRaTLHPQ2zX2/3C/ToXzffCl9yzIHXRB/VaZD3C5PHqbgMoeenOe/
V/6EyteXOcT2H/qqsSfTQatd7Oa5/jKHz3+vVLxclukA9s8CqPkToep3Q90f
lelw3793et4yqHulMx2uVrxUM+yC8u0zHSZLsITxTS5zUGNrnOocnekQlWJ9
37+zzGFvCVCmLNPhIsj8qjIHoC8TnnZA9edAw2M21P6EMgeONTJRKYszHRhA
IKLMocCW6/pioHqPh1Ui6zyh7ovNdKgWWef+cEWZQ8jjpbOP8GQ6uIPku8sc
/gG9o7YxwwEkrFAG9X9uhsMyIHdDANS+7gwHS1AEmZc5fAH5f1WGwwOQ/5Sg
7j2W4bAVFH9MUD5bpgMoehLEoeHrlukAACq265E=
        "]], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4qgU6/v+N8scXgfukGt1z3B4W2NvGnehzMGL
h0m7XS/DgQEEbpQ5WHQ6JjwVyHDQbhe7ee5lmQPHGpmolO/pDu4Pq0TW/S5z
uHnue/Dju+kOQFNeB3KUOxxR2FCUAeR/uuSbJMBX7rDimLd559t0BxDlqFDu
oHT7Z12WQoZDxkSgjQeh5pVnOIC0TXxY5lD5Us2Q40KGA0h5wt8yBwfTuF2e
MpkOMiAHq5c7tBw4tdD1VoYDr+6mue/Nyx1U2RqnOh/OgNjnUe6gAjJ/TYYD
2H+J5Q6CEZZbThRlOFSLrHN/6FXu8E0jpv+QaYaDUDPQIP1yh0JbruuLYzIc
yvfNl9K3LIe752oF0CEG5Q7XFxfYck3OcJAFGagIlV8OtU+k3MEp4ekFpd0Z
DltOlO2bD/R/8OOls48cgbr/f5nDl79XKl6ugobnhzJIeDRmOOQ+/73yo0+5
A8gby9Wg6nXLHUDOcj2X7gAyRkGs3EFa/64KW2+6A4hq/FjmkJ4GBOvSIeqB
8RcCUnghHeK/I2UOC6SAKt+lO0zPA/pwWZkDKJrcDaH+21vmALLuWH6GAwCE
jOIt
        "]], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, CompressedData["
1:eJxdkm9Ik1EUxodlLIko64NZyTKpwA/SBymR8ImokIr+QYjNEWO9R8JMhTya
6ZexJGItKUyy0LKUQZTmKBtDho0hJTrMipAIi1qi9j8jyuje3gOCHy7vve85
h/M8v3PWOE8cODrPYrEkqLNCvp6J/T1pJxmtqVmvMt4bKHTlvt7rZgz9PPj2
1pCBvh8b7L5GiUcN7Np0dusRP+P85dJk94CBqP4RYiwtyAn0DxuIpY/+qhtk
qOrmyAcDF1PmH1o8ysjLdgTzrQRbZ0VxQ5zRde1TR3Q94VnV+LqNHyW+j3Bj
+/1vM5OM/EUJmfWVhNVa0ASjfEvSi7arhOPx3/4vbxjVqswaJmgZ4RHJf04I
9Ff2tkQZK5XcBVNk6u2W+DSZ+loZdp9y9pmwzB1+fN3LeDmoDI9Lfg2jcdu5
kvhTwqnld3aOlTLWqrJjAcLDNEXMydBp7y4RcnTDw4wMHS8h1Oh8u/DaQfg6
vMe5xCF6bYSioFJC4uePgbn8//c7IzyTCdzbkprlY3Ro0ImEJu33CsOrjVuE
Xzvj74i6JIqfLsa0GlvfQtETkv4pwivC6Nb8M8mc7wBjUsnw5An/GKNM6ysg
tDdHbJ0xqS8jTJ1Wk1Jv6+1Vha56Mvflyex8HNrfI+Hpl/ogQ9GKpT8QP3cZ
RZp/SPi1MTQGj4r3aL5NjO8zytA9MvfHK3puSr2HsVnzvyD9a2XetbIfVaLX
RShuUIqrRd9u2T/1HtOgs8V/3ex85vL/BwXfbw4=
        "]]}, 
      {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{205.71499999999997`, 
        225.024}, {204.379, 220.915}, {206.434, 220.24699999999999`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{205.71499999999997`, 
        225.024}, {207.05100000000002`, 220.915}, {204.996, 
        220.24699999999999`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{209.824, 222.036}, {
        205.504, 222.036}, {205.504, 219.88000000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{209.824, 222.036}, {
        206.32800000000003`, 219.497}, {205.059, 221.24699999999999`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{201.605, 222.036}, {
        205.102, 219.497}, {206.371, 221.24699999999999`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{201.605, 222.036}, {
        205.92600000000002`, 222.036}, {205.92600000000002`, 
        219.88000000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{208.254, 217.208}, {
        206.918, 221.317}, {204.863, 220.64899999999997`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{208.254, 217.208}, {
        204.758, 219.74699999999999`}, {206.02700000000002`, 221.493}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{203.176, 217.208}, {
        206.672, 219.74699999999999`}, {205.40200000000002`, 221.493}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{203.176, 217.208}, {
        204.512, 221.317}, {206.562, 220.64899999999997`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{214.629, 
        182.64499999999998`}, {213.29299999999998`, 178.536}, {215.348, 
        177.86800000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{214.629, 
        182.64499999999998`}, {215.965, 178.536}, {213.91, 
        177.86800000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{218.738, 179.661}, {
        214.418, 179.661}, {214.418, 177.501}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{218.738, 179.661}, {
        215.242, 177.122}, {213.97299999999998`, 178.86800000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{210.52, 179.661}, {214.016,
         177.122}, {215.285, 178.86800000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{210.52, 179.661}, {214.84, 
        179.661}, {214.84, 177.501}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{217.168, 174.829}, {
        215.83200000000002`, 178.93800000000002`}, {213.777, 
        178.26999999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{217.168, 174.829}, {
        213.672, 177.372}, {214.941, 179.118}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{212.09, 174.829}, {215.586,
         177.372}, {214.316, 179.118}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{212.09, 174.829}, {
        213.42600000000002`, 178.93800000000002`}, {215.48000000000002`, 
        178.26999999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{202.285, 172.876}, {
        201.172, 169.45000000000002`}, {202.88700000000003`, 168.895}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{202.285, 172.876}, {
        203.39800000000002`, 169.45000000000002`}, {201.68800000000002`, 
        168.895}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{205.71099999999998`, 
        170.38800000000003`}, {202.10899999999998`, 170.38800000000003`}, {
        202.10899999999998`, 168.58700000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{205.71099999999998`, 
        170.38800000000003`}, {202.797, 168.26999999999998`}, {201.738, 
        169.727}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{198.863, 
        170.38800000000003`}, {201.77299999999997`, 168.26999999999998`}, {
        202.83200000000002`, 169.727}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{198.863, 
        170.38800000000003`}, {202.461, 170.38800000000003`}, {202.461, 
        168.58700000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{204.40200000000002`, 
        166.36}, {203.289, 169.786}, {201.578, 169.231}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{204.40200000000002`, 
        166.36}, {201.48800000000003`, 168.477}, {202.547, 169.934}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{200.168, 166.36}, {
        203.08200000000002`, 168.477}, {202.023, 169.934}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{200.168, 166.36}, {201.281,
         169.786}, {202.99200000000002`, 169.231}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{224.504, 186.555}, {
        223.86700000000002`, 184.598}, {224.844, 184.278}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{224.504, 186.555}, {
        225.137, 184.598}, {224.16, 184.278}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{226.461, 185.134}, {
        224.40200000000002`, 185.134}, {224.40200000000002`, 184.102}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{226.461, 185.134}, {
        224.797, 183.923}, {224.191, 184.755}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{222.547, 185.134}, {
        224.21099999999998`, 183.923}, {224.816, 184.755}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{222.547, 185.134}, {
        224.605, 185.134}, {224.605, 184.102}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{225.71099999999998`, 
        182.833}, {225.078, 184.79}, {224.098, 184.47299999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{225.71099999999998`, 
        182.833}, {224.047, 184.04399999999998`}, {224.65200000000002`, 
        184.876}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{223.29299999999998`, 
        182.833}, {224.95700000000002`, 184.04399999999998`}, {
        224.35200000000003`, 184.876}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{223.29299999999998`, 
        182.833}, {223.93, 184.79}, {224.906, 184.47299999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{235.61299999999997`, 
        171.915}, {234.5, 168.489}, {236.21099999999998`, 167.934}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{235.61299999999997`, 
        171.915}, {236.72299999999998`, 168.489}, {235.012, 167.934}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{239.035, 
        169.42700000000002`}, {235.434, 169.42700000000002`}, {235.434, 
        167.626}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{239.035, 
        169.42700000000002`}, {236.121, 167.309}, {235.066, 168.766}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{232.18800000000002`, 
        169.42700000000002`}, {235.102, 167.309}, {236.156, 168.766}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{232.18800000000002`, 
        169.42700000000002`}, {235.789, 169.42700000000002`}, {235.789, 
        167.626}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{237.727, 165.403}, {
        236.61299999999997`, 168.82500000000002`}, {234.90200000000002`, 
        168.26999999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{237.727, 165.403}, {
        234.816, 167.516}, {235.871, 168.97299999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{233.496, 165.403}, {
        236.406, 167.516}, {235.35200000000003`, 168.97299999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{233.496, 165.403}, {
        234.60899999999998`, 168.82500000000002`}, {236.32000000000002`, 
        168.26999999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{232.594, 161.184}, {
        231.70299999999997`, 158.442}, {233.07399999999998`, 158.001}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{232.594, 161.184}, {
        233.484, 158.442}, {232.11299999999997`, 158.001}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{235.33200000000002`, 
        159.192}, {232.453, 159.192}, {232.453, 157.755}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{235.33200000000002`, 
        159.192}, {233.004, 157.501}, {232.156, 158.665}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{229.85500000000002`, 
        159.192}, {232.184, 157.501}, {233.031, 158.665}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{229.85500000000002`, 
        159.192}, {232.73399999999998`, 159.192}, {232.73399999999998`, 
        157.755}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{234.285, 
        155.97299999999998`}, {233.39800000000002`, 158.712}, {
        232.02700000000002`, 158.266}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{234.285, 
        155.97299999999998`}, {231.95700000000002`, 157.665}, {232.805, 
        158.829}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{230.90200000000002`, 
        155.97299999999998`}, {233.23, 157.665}, {232.38700000000003`, 
        158.829}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{230.90200000000002`, 
        155.97299999999998`}, {231.79299999999998`, 158.712}, {233.16, 
        158.266}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{319.27, 
        238.18800000000002`}, {317.93399999999997`, 234.07899999999998`}, {
        319.98799999999994`, 233.411}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{319.27, 
        238.18800000000002`}, {320.605, 234.07899999999998`}, {318.551, 
        233.411}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{323.379, 
        235.20399999999998`}, {319.059, 235.20399999999998`}, {319.059, 
        233.04399999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{323.379, 
        235.20399999999998`}, {319.883, 232.665}, {318.613, 234.411}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{315.16, 
        235.20399999999998`}, {318.656, 232.665}, {319.92599999999993`, 
        234.411}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{315.16, 
        235.20399999999998`}, {319.47999999999996`, 235.20399999999998`}, {
        319.47999999999996`, 233.04399999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{321.809, 230.372}, {
        320.47299999999996`, 234.48100000000002`}, {318.41799999999995`, 
        233.813}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{321.809, 230.372}, {
        318.312, 232.911}, {319.582, 234.661}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{316.72999999999996`, 
        230.372}, {320.22299999999996`, 232.911}, {318.953, 234.661}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{316.72999999999996`, 
        230.372}, {318.062, 234.48100000000002`}, {320.117, 233.813}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{358.629, 171.536}, {
        357.29299999999995`, 167.43}, {359.348, 166.76299999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{358.629, 171.536}, {
        359.965, 167.43}, {357.90999999999997`, 166.76299999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{362.73799999999994`, 
        168.55200000000002`}, {358.41799999999995`, 168.55200000000002`}, {
        358.41799999999995`, 166.39100000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{362.73799999999994`, 
        168.55200000000002`}, {359.242, 166.01299999999998`}, {
        357.97299999999996`, 167.759}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{354.52, 
        168.55200000000002`}, {358.01599999999996`, 166.01299999999998`}, {
        359.28499999999997`, 167.759}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{354.52, 
        168.55200000000002`}, {358.84000000000003`, 168.55200000000002`}, {
        358.84000000000003`, 166.39100000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{361.168, 
        163.72299999999998`}, {359.832, 167.829}, {357.777, 167.165}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{361.168, 
        163.72299999999998`}, {357.672, 166.26299999999998`}, {358.941, 
        168.009}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{356.09, 
        163.72299999999998`}, {359.58599999999996`, 166.26299999999998`}, {
        358.316, 168.009}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{356.09, 
        163.72299999999998`}, {357.42599999999993`, 167.829}, {
        359.47999999999996`, 167.165}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{372.617, 169.138}, {
        371.727, 166.399}, {373.09799999999996`, 165.954}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{372.617, 169.138}, {
        373.508, 166.399}, {372.137, 165.954}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{375.355, 
        167.14499999999998`}, {372.477, 167.14499999999998`}, {372.477, 
        165.708}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{375.355, 
        167.14499999999998`}, {373.027, 165.454}, {372.18, 166.618}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{369.879, 
        167.14499999999998`}, {372.207, 165.454}, {373.055, 166.618}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{369.879, 
        167.14499999999998`}, {372.758, 167.14499999999998`}, {372.758, 
        165.708}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{374.309, 
        163.92700000000002`}, {373.42199999999997`, 166.665}, {372.051, 
        166.22}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{374.309, 
        163.92700000000002`}, {371.97999999999996`, 165.622}, {372.828, 
        166.786}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{370.92599999999993`, 
        163.92700000000002`}, {373.254, 165.622}, {372.40599999999995`, 
        166.786}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{370.92599999999993`, 
        163.92700000000002`}, {371.812, 166.665}, {373.184, 166.22}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{362.742, 161.903}, {
        361.629, 158.477}, {363.34400000000005`, 157.923}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{362.742, 161.903}, {
        363.855, 158.477}, {362.14500000000004`, 157.923}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{366.168, 159.415}, {
        362.566, 159.415}, {362.566, 157.61399999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{366.168, 159.415}, {
        363.254, 157.298}, {362.195, 158.755}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{359.32, 159.415}, {
        362.22999999999996`, 157.298}, {363.289, 158.755}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{359.32, 159.415}, {
        362.91799999999995`, 159.415}, {362.91799999999995`, 
        157.61399999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{364.85900000000004`, 
        155.39100000000002`}, {363.746, 158.813}, {362.03499999999997`, 
        158.259}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{364.85900000000004`, 
        155.39100000000002`}, {361.945, 157.505}, {363.004, 
        158.96200000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{360.625, 
        155.39100000000002`}, {363.539, 157.505}, {362.47999999999996`, 
        158.96200000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{360.625, 
        155.39100000000002`}, {361.73799999999994`, 158.813}, {363.453, 
        158.259}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{338.469, 140.782}, {
        337.355, 137.36}, {339.066, 136.80200000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{338.469, 140.782}, {
        339.582, 137.36}, {337.867, 136.80200000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{341.89099999999996`, 
        138.29399999999998`}, {338.29299999999995`, 138.29399999999998`}, {
        338.29299999999995`, 136.497}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{341.89099999999996`, 
        138.29399999999998`}, {338.97999999999996`, 136.18}, {
        337.92199999999997`, 137.634}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{335.043, 
        138.29399999999998`}, {337.957, 136.18}, {339.01599999999996`, 
        137.634}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{335.043, 
        138.29399999999998`}, {338.64500000000004`, 138.29399999999998`}, {
        338.64500000000004`, 136.497}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{340.58599999999996`, 
        134.26999999999998`}, {339.47299999999996`, 137.696}, {337.762, 
        137.138}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{340.58599999999996`, 
        134.26999999999998`}, {337.672, 136.38800000000003`}, {
        338.72999999999996`, 137.845}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{336.35200000000003`, 
        134.26999999999998`}, {339.26599999999996`, 136.38800000000003`}, {
        338.207, 137.845}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{336.35200000000003`, 
        134.26999999999998`}, {337.465, 137.696}, {339.176, 137.138}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{338.332, 129.915}, {
        337.441, 127.17699999999999`}, {338.812, 126.73100000000001`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{338.332, 129.915}, {
        339.22299999999996`, 127.17699999999999`}, {337.85200000000003`, 
        126.73100000000001`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{341.07, 127.923}, {338.191,
         127.923}, {338.191, 126.485}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{341.07, 127.923}, {338.742,
         126.23100000000001`}, {337.895, 127.395}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{335.594, 127.923}, {
        337.92199999999997`, 126.23100000000001`}, {338.77, 127.395}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{335.594, 127.923}, {
        338.47299999999996`, 127.923}, {338.47299999999996`, 126.485}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{340.02299999999997`, 
        124.70400000000001`}, {339.133, 127.44200000000001`}, {
        337.76599999999996`, 126.99700000000001`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{340.02299999999997`, 
        124.70400000000001`}, {337.695, 126.395}, {338.539, 127.563}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{336.637, 
        124.70400000000001`}, {338.969, 126.395}, {338.121, 127.563}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{336.637, 
        124.70400000000001`}, {337.527, 127.44200000000001`}, {
        338.89799999999997`, 126.99700000000001`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{348.47999999999996`, 
        148.016}, {347.59, 145.278}, {348.96099999999996`, 144.833}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{348.47999999999996`, 
        148.016}, {349.371, 145.278}, {348., 144.833}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{351.219, 
        146.02800000000002`}, {348.34000000000003`, 146.02800000000002`}, {
        348.34000000000003`, 144.58700000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{351.219, 
        146.02800000000002`}, {348.89099999999996`, 144.333}, {348.043, 
        145.501}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{345.742, 
        146.02800000000002`}, {348.07, 144.333}, {348.91799999999995`, 
        145.501}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{345.742, 
        146.02800000000002`}, {348.621, 146.02800000000002`}, {348.621, 
        144.58700000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{350.172, 142.805}, {
        349.28099999999995`, 145.548}, {347.914, 145.102}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{350.172, 142.805}, {
        347.84400000000005`, 144.501}, {348.688, 145.665}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{346.789, 142.805}, {
        349.117, 144.501}, {348.27, 145.665}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{346.789, 142.805}, {
        347.676, 145.548}, {349.047, 145.102}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{356.57, 153.813}, {355.457,
         150.38800000000003`}, {357.172, 149.833}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{356.57, 153.813}, {357.684,
         150.38800000000003`}, {355.97299999999996`, 149.833}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{359.9959999999999, 
        151.32500000000002`}, {356.395, 151.32500000000002`}, {356.395, 
        149.524}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{359.9959999999999, 
        151.32500000000002`}, {357.082, 149.208}, {356.02299999999997`, 
        150.665}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{353.148, 
        151.32500000000002`}, {356.059, 149.208}, {357.117, 150.665}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{353.148, 
        151.32500000000002`}, {356.746, 151.32500000000002`}, {356.746, 
        149.524}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{358.688, 147.298}, {
        357.574, 150.72299999999998`}, {355.863, 150.165}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{358.688, 147.298}, {
        355.77299999999997`, 149.415}, {356.832, 150.872}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{354.457, 147.298}, {
        357.367, 149.415}, {356.309, 150.872}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{354.457, 147.298}, {
        355.566, 150.72299999999998`}, {357.28099999999995`, 150.165}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{338.059, 
        149.93800000000002`}, {337.168, 147.2}, {338.53499999999997`, 
        146.755}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{338.059, 
        149.93800000000002`}, {338.945, 147.2}, {337.578, 146.755}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{340.79699999999997`, 
        147.946}, {337.91799999999995`, 147.946}, {337.91799999999995`, 
        146.509}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{340.79699999999997`, 
        147.946}, {338.465, 146.255}, {337.621, 147.41899999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{335.316, 147.946}, {
        337.648, 146.255}, {338.4959999999999, 147.41899999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{335.316, 147.946}, {
        338.199, 147.946}, {338.199, 146.509}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{339.75, 144.727}, {
        338.85900000000004`, 147.466}, {337.49199999999996`, 147.02}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{339.75, 144.727}, {
        337.42199999999997`, 146.41899999999998`}, {338.26599999999996`, 
        147.58700000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{336.363, 144.727}, {
        338.695, 146.41899999999998`}, {337.848, 147.58700000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{336.363, 144.727}, {
        337.254, 147.466}, {338.625, 147.02}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{249.602, 
        202.08700000000002`}, {248.48800000000003`, 198.661}, {
        250.19899999999998`, 198.106}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{249.602, 
        202.08700000000002`}, {250.71099999999998`, 198.661}, {249., 
        198.106}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{253.023, 199.598}, {
        249.42200000000003`, 199.598}, {249.42200000000003`, 197.798}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{253.023, 199.598}, {
        250.11299999999997`, 197.48100000000002`}, {249.055, 
        198.93800000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{246.176, 199.598}, {249.09,
         197.48100000000002`}, {250.148, 198.93800000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{246.176, 199.598}, {
        249.777, 199.598}, {249.777, 197.798}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{251.71499999999997`, 
        195.575}, {250.605, 198.997}, {248.89100000000002`, 198.442}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{251.71499999999997`, 
        195.575}, {248.805, 197.68800000000002`}, {249.863, 
        199.14499999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{247.484, 195.575}, {
        250.395, 197.68800000000002`}, {249.34, 199.14499999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{247.484, 195.575}, {
        248.598, 198.997}, {250.309, 198.442}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{315.42999999999995`, 
        210.555}, {314.539, 207.817}, {315.90599999999995`, 207.372}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{315.42999999999995`, 
        210.555}, {316.32, 207.817}, {314.949, 207.372}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{318.168, 208.563}, {
        315.289, 208.563}, {315.289, 207.126}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{318.168, 208.563}, {
        315.83599999999996`, 206.872}, {314.99199999999996`, 208.036}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{312.691, 208.563}, {315.02,
         206.872}, {315.867, 208.036}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{312.691, 208.563}, {315.57,
         208.563}, {315.57, 207.126}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{317.121, 205.345}, {
        316.22999999999996`, 208.083}, {314.863, 207.638}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{317.121, 205.345}, {
        314.79299999999995`, 207.036}, {315.637, 208.20399999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{313.734, 205.345}, {
        316.066, 207.036}, {315.219, 208.20399999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{313.734, 205.345}, {
        314.625, 208.083}, {315.9959999999999, 207.638}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{288., 161.661}, {
        286.66400000000004`, 157.555}, {288.719, 156.88800000000003`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{288., 161.661}, {
        289.33599999999996`, 157.555}, {287.28099999999995`, 
        156.88800000000003`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{292.10900000000004`, 
        158.677}, {287.789, 158.677}, {287.789, 156.516}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{292.10900000000004`, 
        158.677}, {288.613, 156.138}, {287.34400000000005`, 
        157.88800000000003`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{283.89099999999996`, 
        158.677}, {287.387, 156.138}, {288.656, 157.88800000000003`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{283.89099999999996`, 
        158.677}, {288.21099999999996`, 158.677}, {288.21099999999996`, 
        156.516}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{290.539, 153.848}, {
        289.203, 157.95800000000003`}, {287.148, 157.29}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{290.539, 153.848}, {
        287.043, 156.38800000000003`}, {288.312, 158.134}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{285.46099999999996`, 
        153.848}, {288.957, 156.38800000000003`}, {287.688, 158.134}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{285.46099999999996`, 
        153.848}, {286.79699999999997`, 157.95800000000003`}, {
        288.85200000000003`, 157.29}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{299.656, 180.966}, {
        298.543, 177.54399999999998`}, {300.258, 176.985}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{299.656, 180.966}, {300.77,
         177.54399999999998`}, {299.059, 176.985}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{303.082, 178.477}, {
        299.47999999999996`, 178.477}, {299.47999999999996`, 176.677}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{303.082, 178.477}, {
        300.168, 176.364}, {299.10900000000004`, 177.817}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{296.234, 178.477}, {
        299.14500000000004`, 176.364}, {300.203, 177.817}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{296.234, 178.477}, {
        299.832, 178.477}, {299.832, 176.677}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{301.77299999999997`, 
        174.454}, {300.66, 177.876}, {298.949, 177.32100000000003`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{301.77299999999997`, 
        174.454}, {298.85900000000004`, 176.571}, {299.91799999999995`, 
        178.024}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{297.543, 174.454}, {
        300.453, 176.571}, {299.395, 178.024}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{297.543, 174.454}, {
        298.65200000000004`, 177.876}, {300.367, 177.32100000000003`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{288., 190.016}, {286.887, 
        186.595}, {288.59799999999996`, 186.036}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{288., 190.016}, {289.113, 
        186.595}, {287.402, 186.036}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{291.42199999999997`, 
        187.52800000000002`}, {287.824, 187.52800000000002`}, {287.824, 
        185.731}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{291.42199999999997`, 
        187.52800000000002`}, {288.512, 185.415}, {287.453, 
        186.86800000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{284.578, 
        187.52800000000002`}, {287.48799999999994`, 185.415}, {288.547, 
        186.86800000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{284.578, 
        187.52800000000002`}, {288.176, 187.52800000000002`}, {288.176, 
        185.731}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{290.117, 183.505}, {
        289.004, 186.92700000000002`}, {287.29299999999995`, 186.372}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{290.117, 183.505}, {
        287.203, 185.622}, {288.262, 187.075}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{285.883, 183.505}, {
        288.79699999999997`, 185.622}, {287.73799999999994`, 187.075}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{285.883, 183.505}, {
        286.9959999999999, 186.92700000000002`}, {288.707, 186.372}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{277.85200000000003`, 
        180.24699999999999`}, {276.96099999999996`, 177.509}, {278.332, 
        177.063}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{277.85200000000003`, 
        180.24699999999999`}, {278.742, 177.509}, {277.371, 177.063}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{280.59, 178.255}, {
        277.71099999999996`, 178.255}, {277.71099999999996`, 176.817}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{280.59, 178.255}, {278.262,
         176.563}, {277.414, 177.727}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{275.113, 178.255}, {
        277.441, 176.563}, {278.289, 177.727}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{275.113, 178.255}, {
        277.99199999999996`, 178.255}, {277.99199999999996`, 176.817}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{279.543, 175.036}, {
        278.65200000000004`, 177.77399999999997`}, {277.28499999999997`, 
        177.329}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{279.543, 175.036}, {
        277.215, 176.727}, {278.062, 177.895}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{276.16, 175.036}, {
        278.48799999999994`, 176.727}, {277.641, 177.895}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{276.16, 175.036}, {277.047,
         177.77399999999997`}, {278.41799999999995`, 177.329}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{282.92599999999993`, 
        172.43}, {282.289, 170.47299999999998`}, {283.27, 170.153}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{282.92599999999993`, 
        172.43}, {283.562, 170.47299999999998`}, {282.582, 170.153}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{284.883, 171.009}, {
        282.824, 171.009}, {282.824, 169.977}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{284.883, 171.009}, {
        283.219, 169.798}, {282.613, 170.63}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{280.969, 171.009}, {
        282.633, 169.798}, {283.23799999999994`, 170.63}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{280.969, 171.009}, {
        283.027, 171.009}, {283.027, 169.977}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{284.137, 168.708}, {283.5, 
        170.665}, {282.52, 170.345}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{284.137, 168.708}, {
        282.469, 169.915}, {283.074, 170.74699999999999`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{281.715, 168.708}, {
        283.379, 169.915}, {282.777, 170.74699999999999`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{281.715, 168.708}, {
        282.35200000000003`, 170.665}, {283.332, 170.345}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{318.172, 138.313}, {
        317.059, 134.89100000000002`}, {318.77, 134.333}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{318.172, 138.313}, {
        319.28499999999997`, 134.89100000000002`}, {317.57, 134.333}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{321.594, 
        135.82500000000002`}, {317.9959999999999, 135.82500000000002`}, {
        317.9959999999999, 134.02800000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{321.594, 
        135.82500000000002`}, {318.684, 133.712}, {317.625, 
        135.16899999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{314.746, 
        135.82500000000002`}, {317.66, 133.712}, {318.719, 
        135.16899999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{314.746, 
        135.82500000000002`}, {318.348, 135.82500000000002`}, {318.348, 
        134.02800000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{320.289, 
        131.80200000000002`}, {319.176, 135.227}, {317.465, 
        134.66899999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{320.289, 
        131.80200000000002`}, {317.375, 133.91899999999998`}, {
        318.43399999999997`, 135.376}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{316.055, 
        131.80200000000002`}, {318.969, 133.91899999999998`}, {
        317.90999999999997`, 135.376}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{316.055, 
        131.80200000000002`}, {317.168, 135.227}, {318.879, 
        134.66899999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{326.812, 146.509}, {
        325.92199999999997`, 143.76999999999998`}, {327.289, 
        143.32500000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{326.812, 146.509}, {
        327.703, 143.76999999999998`}, {326.332, 143.32500000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{329.551, 144.52}, {326.672,
         144.52}, {326.672, 143.07899999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{329.551, 144.52}, {327.219,
         142.82500000000002`}, {326.375, 143.989}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{324.074, 144.52}, {326.402,
         142.82500000000002`}, {327.25, 143.989}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{324.074, 144.52}, {326.953,
         144.52}, {326.953, 143.07899999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{328.504, 141.298}, {
        327.613, 144.036}, {326.246, 143.595}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{328.504, 141.298}, {
        326.176, 142.993}, {327.02, 144.157}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{325.117, 141.298}, {
        327.449, 142.993}, {326.60200000000003`, 144.157}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{325.117, 141.298}, {
        326.008, 144.036}, {327.379, 143.595}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{310.219, 148.977}, {
        309.328, 146.23899999999998`}, {310.695, 145.79399999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{310.219, 148.977}, {
        311.105, 146.23899999999998`}, {309.73799999999994`, 
        145.79399999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{312.957, 146.989}, {
        310.078, 146.989}, {310.078, 145.548}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{312.957, 146.989}, {
        310.625, 145.29399999999998`}, {309.78099999999995`, 
        146.45800000000003`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{307.477, 146.989}, {
        309.809, 145.29399999999998`}, {310.656, 146.45800000000003`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{307.477, 146.989}, {
        310.35900000000004`, 146.989}, {310.35900000000004`, 145.548}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{311.90999999999997`, 
        143.766}, {311.02, 146.505}, {309.65200000000004`, 146.059}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{311.90999999999997`, 
        143.766}, {309.578, 145.46200000000002`}, {310.42599999999993`, 
        146.626}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{308.52299999999997`, 
        143.766}, {310.855, 145.46200000000002`}, {310.008, 146.626}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{308.52299999999997`, 
        143.766}, {309.414, 146.505}, {310.78499999999997`, 146.059}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{247.54299999999998`, 
        153.434}, {246.207, 149.32500000000002`}, {248.262, 148.657}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{247.54299999999998`, 
        153.434}, {248.879, 149.32500000000002`}, {246.824, 148.657}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{251.65200000000002`, 
        150.45000000000002`}, {247.33200000000002`, 150.45000000000002`}, {
        247.33200000000002`, 148.29}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{251.65200000000002`, 
        150.45000000000002`}, {248.156, 147.911}, {246.88700000000003`, 
        149.657}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{243.434, 
        150.45000000000002`}, {246.93, 147.911}, {248.19899999999998`, 
        149.657}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{243.434, 
        150.45000000000002`}, {247.754, 150.45000000000002`}, {247.754, 
        148.29}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{250.08200000000002`, 
        145.618}, {248.74599999999998`, 149.727}, {246.691, 149.059}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{250.08200000000002`, 
        145.618}, {246.586, 148.157}, {247.85500000000002`, 149.907}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{245.004, 145.618}, {248.5, 
        148.157}, {247.23, 149.907}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{245.004, 145.618}, {246.34,
         149.727}, {248.395, 149.059}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{288., 125.184}, {287.555, 
        123.813}, {288.23799999999994`, 123.59100000000001`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{288., 125.184}, {288.445, 
        123.813}, {287.762, 123.59100000000001`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{289.371, 
        124.18799999999999`}, {287.92999999999995`, 124.18799999999999`}, {
        287.92999999999995`, 123.47}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{289.371, 
        124.18799999999999`}, {288.203, 123.34100000000001`}, {
        287.78099999999995`, 123.923}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{286.629, 
        124.18799999999999`}, {287.79699999999997`, 123.34100000000001`}, {
        288.219, 123.923}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{286.629, 
        124.18799999999999`}, {288.07, 124.18799999999999`}, {288.07, 
        123.47}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{288.848, 122.579}, {
        288.402, 123.94600000000001`}, {287.715, 123.723}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{288.848, 122.579}, {287.68,
         123.423}, {288.105, 124.009}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{287.15200000000004`, 
        122.579}, {288.32, 123.423}, {287.895, 124.009}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{287.15200000000004`, 
        122.579}, {287.59799999999996`, 123.94600000000001`}, {
        288.28499999999997`, 123.723}}}]}}, 
     {RGBColor[0.996078, 0.87451, 0.], 
      FilledCurveBox[{{
        Line[{{48.961, 202.598}, {288., 49.962}, {527.039, 202.598}, {288., 
          355.239}}]}, {
        BezierCurve[{{388.801, 202.598}, {388.801, 146.93}, {343.672, 
          101.80199999999999`}, {288., 101.80199999999999`}, {
          232.32800000000003`, 101.80199999999999`}, {187.19899999999998`, 
          146.93}, {187.19899999999998`, 202.598}, {187.19899999999998`, 
          258.27}, {232.32800000000003`, 303.399}, {288., 303.399}, {343.672, 
          303.399}, {388.801, 258.27}, {388.801, 202.598}}]}}]}, 
     {RGBColor[0., 0.607843, 0.22745100000000001`], 
      FilledCurveBox[{{
        Line[{{0., 404.2}, {576., 404.2}, {576., 1.0009999999999764`}, {0., 
          1.0009999999999764`}}]}, {
        Line[{{48.961, 202.598}, {288., 49.962}, {527.039, 202.598}, {288., 
          355.239}}]}}]}},
    AspectRatio->Automatic,
    ImageSize->{{128}, {85}},
    PlotRange->{{0., 576.}, {0., 405.}}], ",", 
   GraphicsBox[{
     {Thickness[0.0017211703958691911`], 
      {RGBColor[0., 0.21960800000000003`, 0.5764710000000001], Thickness[
       0.07213642512908776], Opacity[1.], CapForm["Butt"], 
       JoinForm[{"Miter", 4.}], 
       JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}}}, {{{21.047, 365.337471}, {507.949, 365.337471}, {21.047, 
        670.247471}, {21.047, 21.04847099999995}, {507.949, 
        21.04847099999995}, {21.047, 507.946471}}},
        CurveClosed->{1}]}, 
      {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{159.875, 
        129.36100000000002`}, {142.77299999999997`, 88.99700000000001}, {
        125.66799999999999`, 129.36100000000002`}}}]}}, {
      {RGBColor[
       0.8627450000000002, 0.07843140000000001, 0.23529400000000003`], 
       PolygonBox[{{{21.047, 365.337}, {507.949, 365.337}, {21.047, 
        670.247}}}]}, 
      {RGBColor[
       0.8627450000000002, 0.07843140000000001, 0.23529400000000003`], 
       PolygonBox[{{21.047, 21.048}, {507.949, 21.048}, {21.047, 507.947}}]}}, 
     {Thickness[0.0017211703958691911`], 
      {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4r0lkyVYnrk5uG37/PfKr1qH4oyJb2vq/RwW
SOnfVZlQ7dB84NRCV79Ih9eBO+Rab1Y63PpZl7XnRiKc/67G3jSOKx3OFwZp
EMyB62cAgR+5cPNh/AJbruuLU2ocgKrYGlfmOGjG9B/6eqHKIW6XJw9TdpbD
QaC12zZWOhSC1OlkOERabjlRNqnCoRVkEWuqgypb41Tn1+Vw98D4vdPzhJoj
YuF8kPN2cYbD9d8Gqe8JgpsPdo+CD9x+WHjA3IcePgAXt4qb
        "]], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        187.90200000000002`, 434.552}, {187.90200000000002`, 409.626}, {
        167.695, 389.42299999999994`}, {142.77299999999997`, 
        389.42299999999994`}, {117.848, 389.42299999999994`}, {97.645, 
        409.626}, {97.645, 434.552}, {97.645, 459.474}, {117.848, 479.677}, {
        142.77299999999997`, 479.677}, {167.695, 479.677}, {
        187.90200000000002`, 459.474}, {187.90200000000002`, 434.552}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{160.04299999999998`, 
        476.243}, {155., 496.02099999999996`}, {142.77299999999997`, 
        479.677}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{174.684, 466.462}, {
        177.594, 486.661}, {160.04299999999998`, 476.243}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{184.465, 451.822}, {
        194.883, 469.368}, {174.684, 466.462}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{187.90200000000002`, 
        434.552}, {204.242, 446.779}, {184.465, 451.822}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{184.465, 417.282}, {
        204.242, 422.325}, {187.90200000000002`, 434.552}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{174.684, 
        402.64200000000005`}, {194.883, 399.73199999999997`}, {184.465, 
        417.282}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{125.504, 476.243}, {
        130.547, 496.02099999999996`}, {142.77299999999997`, 479.677}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{110.863, 466.462}, {
        107.953, 486.661}, {125.504, 476.243}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{101.082, 451.822}, {90.664,
         469.368}, {110.863, 466.462}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{97.645, 434.552}, {
        81.30499999999999, 446.779}, {101.082, 451.822}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{101.082, 417.282}, {
        81.30499999999999, 422.325}, {97.645, 434.552}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{110.863, 
        402.64200000000005`}, {90.664, 399.73199999999997`}, {101.082, 
        417.282}}}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        208.85500000000002`, 193.19299999999998`}, {208.85500000000002`, 
        156.697}, {179.26999999999998`, 127.111}, {142.77299999999997`, 
        127.111}, {106.277, 127.111}, {76.691, 156.697}, {76.691, 
        193.19299999999998`}, {76.691, 229.689}, {106.277, 259.279}, {
        142.77299999999997`, 259.279}, {179.26999999999998`, 259.279}, {
        208.85500000000002`, 229.689}, {208.85500000000002`, 
        193.19299999999998`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{159.875, 
        129.36100000000002`}, {142.77299999999997`, 88.99700000000001}, {
        125.66799999999999`, 129.36100000000002`}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{125.66799999999999`, 
        257.025}, {142.77299999999997`, 297.392}, {159.875, 257.025}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{78.94100000000002, 
        176.091}, {38.574, 193.19299999999998`}, {78.94100000000002, 
        210.298}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{206.605, 210.298}, {
        246.969, 193.19299999999998`}, {206.605, 176.091}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{125.66799999999999`, 
        129.36100000000002`}, {90.67599999999999, 102.95400000000001`}, {
        96.043, 146.466}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{159.875, 257.025}, {
        194.871, 283.4309999999999}, {189.5, 239.923}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{78.94100000000002, 
        210.298}, {52.535000000000004`, 245.29}, {96.043, 239.923}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{206.605, 176.091}, {
        233.012, 141.095}, {189.5, 146.466}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{96.043, 146.466}, {
        52.535000000000004`, 141.095}, {78.94100000000002, 176.091}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{189.5, 239.923}, {233.012, 
        245.29}, {206.605, 210.298}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{96.043, 239.923}, {
        90.67599999999999, 283.4309999999999}, {125.66799999999999`, 
        257.025}}}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{189.5, 146.466}, {194.871, 
        102.95400000000001`}, {159.875, 129.36100000000002`}}}]}}},
    AspectRatio->Automatic,
    ImageSize->{{128}, {85}},
    PlotRange->{{0., 581.}, {0., 709.}}], ",", 
   GraphicsBox[
    {Thickness[0.0020833333333333333`], 
     {FaceForm[{RGBColor[
      0.8235290000000001, 0.06274510000000001, 0.20392200000000002`], Opacity[
      1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
       240.}, {480., 240.}, {480., 160.}, {0., 160.}}}]}, 
     {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
      FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 160.}, {480.,
        160.}, {480., 80.}, {0., 80.}}}]}, 
     {Thickness[0.0020833333333333333`], 
      FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 80.}, {480., 
       80.}, {480., 0.}, {0., 0.}}}]}, 
     {FaceForm[{RGBColor[0., 0.447059, 0.160784], Opacity[1.]}], 
      FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{0., 240.}, {160., 120.}, {
       0., 0.}}}]}},
    AspectRatio->Automatic,
    ImageSize->{{128}, {85}},
    PlotRange->{{0., 480.}, {0., 240.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.922506980681102*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"4457dc48-9d28-4f33-83d6-fdc915f2b9a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cl", "[", 
  RowBox[{"flags", ",", "\"\<TopProbabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.903676156818944*^9, 3.903676162812333*^9}, {
   3.903680022785429*^9, 3.903680032129744*^9}, {3.9036803740184793`*^9, 
   3.90368037493581*^9}, {3.903681327823189*^9, 3.90368132822648*^9}, 
   3.922507015908702*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"fef0ab20-3baa-41f3-9869-b0bfad8370a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"France\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
       "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""},
      "Entity"], "\[Rule]", "0.9094827589272373`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Brazil\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
       "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"country\""},
      "Entity"], "\[Rule]", "0.9094827589272371`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Nepal\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Nepal\""}], "]"}], 
       "\"Entity[\\\"Country\\\", \\\"Nepal\\\"]\"", "\"country\""},
      "Entity"], "\[Rule]", "0.9094827589272376`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Sudan\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}], 
       "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"", "\"country\""},
      "Entity"], "\[Rule]", "0.9094827589272378`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.922506981152451*^9, 3.922507219385418*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"d899276b-3c91-42cf-94ba-51561c93f3cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"cf", ",", "\"\<Classes\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.903679893497211*^9, 3.903679911701223*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"21674367-b914-4891-a01a-71ed1bde6d64"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"UnknownProperty\"\>", ",", "\<\"Classes\"\>"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.922506981266231*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"2423041d-0e36-47b1-9429-74ef81958187"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "cf", "]"}]], "Input",
 CellChangeTimes->{{3.903680520602936*^9, 3.903680520754672*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"007636e1-8cdf-42dc-8e41-20df406b3edb"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`cf\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`cf\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`cf\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`cf", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`cf"|>, True]]], "Output",
 CellChangeTimes->{3.922506981334877*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"3ce964a4-a7fe-4f39-8e24-4221e87a7e78"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating classifiers", "Section",
 CellChangeTimes->{{3.903681355379904*^9, 
  3.903681356854926*^9}},ExpressionUUID->"a7f6733d-4c66-4db3-b0b0-\
3482b8008c16"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mnistTrain", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"\"\<MNIST\>\"", ",", "\"\<TrainingData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mnistTest", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"\"\<MNIST\>\"", ",", "\"\<TestData\>\""}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.903681441124806*^9, 3.903681452502766*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"0b772338-a9ba-4d24-844d-3308920f8e94"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mnistTrainSample", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"mnistTrain", ",", "10000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9036814319835157`*^9, 3.903681458553336*^9}, {
   3.9036815156356792`*^9, 3.903681549460487*^9}, 3.903682781156224*^9, 
   3.903682816204434*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"5686f3e2-6b7c-41b0-8dea-5bb9c77481c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnistCl", "=", 
  RowBox[{"Classify", "[", "mnistTrain", "]"}]}]], "Input",
 CellChangeTimes->{{3.903683782356435*^9, 3.903683813025955*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"65cf7119-d95c-4fa7-8c43-f548ee7ebab9"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["10", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", 
                    "5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], 
                    Short[#, 1]& ]], Annotation[#, 
                    Short[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1], "Tooltip"]& ], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["10", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", 
                    "5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], 
                    Short[#, 1]& ]], Annotation[#, 
                    Short[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["60000", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[ClassifierFunction, 377214792, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", ClassifierFunction, 377214792, 
            8009040494682814401623088732543786741518704316221560008608, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  BoxID -> 8009040494682814401623088732543786741518704316221560008608,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.903683806733486*^9, 3.903684083299748*^9, 
  3.922507138922964*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"07882307-6d0f-4dc5-a85c-adb7a5906edd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnistCl1", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"mnistTrainSample", ",", 
    RowBox[{"Method", "->", "\"\<NearestNeighbors\>\""}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.9036814630946093`*^9, 3.903681474066626*^9}, 
   3.903681522345344*^9, {3.903681570550403*^9, 3.9036815924275723`*^9}, {
   3.903682061457388*^9, 3.903682069212842*^9}, {3.9036822097222013`*^9, 
   3.903682219143742*^9}, {3.903682595291491*^9, 3.903682597281055*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"abe00cf9-95ac-4bdd-8dad-0059208aa679"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["10", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", 
                    "5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], 
                    Short[#, 1]& ]], Annotation[#, 
                    Short[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1], "Tooltip"]& ], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["10", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", 
                    "5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], 
                    Short[#, 1]& ]], Annotation[#, 
                    Short[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["10000", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[ClassifierFunction, 62929600, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", ClassifierFunction, 62929600, 
            8009040494682814401623088732543786741537151060295264595088, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  BoxID -> 8009040494682814401623088732543786741537151060295264595088,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.903681511905174*^9, 3.9036815518787417`*^9}, {
   3.903681585193016*^9, 3.903681593063484*^9}, 3.903681803307206*^9, 
   3.903681873658836*^9, {3.903682057272352*^9, 3.9036820699800467`*^9}, 
   3.903682221048567*^9, 3.903682597774746*^9, 3.903682783281744*^9, 
   3.9036828193247137`*^9, 3.903682960490443*^9, 3.903683545430542*^9, 
   3.922507141192029*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"e7a4655e-8b69-4eab-9aa6-a04c0bcc695c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnistCl2", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"mnistTrainSample", ",", 
    RowBox[{"Method", "->", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.903681824548985*^9, 3.903681833357943*^9}, {
  3.903682224195695*^9, 3.903682233464382*^9}, {3.903682840449589*^9, 
  3.903682841229512*^9}, {3.903683037825329*^9, 3.90368304223991*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"dae1f215-b7a4-4ffa-9b68-599a534c204b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Image\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Number of classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox["10", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", 
                    ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], 
                    Short[#, 1]& ]], Annotation[#, 
                    Short[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1], "Tooltip"]& ], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Image\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Number of classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox["10", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", 
                    ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], 
                    Short[#, 1]& ]], Annotation[#, 
                    Short[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1], "Tooltip"]& ], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["10000", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[<|
   "ExampleNumber" -> 10000, "ClassNumber" -> 10, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Image"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Image"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 10000, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|"f1" -> <|"Type" -> "Image"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Sequence", <|
                  "Input" -> <|"f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>,
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Processors" -> {
                    MachineLearning`MLProcessor[
                    "FeatureChangeType", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 977354774366526235|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 6317144204941985744|>], 
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                    "Index" -> {<|Image[CompressedData["
1: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
fznjnwSCFoo=
                    "], "Real32", ColorSpace -> Automatic, ImageSize -> 
                    Automatic, Interleaving -> None, Magnification -> 
                    Automatic] -> 1|>}, "MissingCode" -> Indeterminate, 
                    "Version" -> {14., 0}, "ID" -> 222300306761183149, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|
                    "Type" -> "NominalVector", "Weight" -> 1, 
                    "SetSize" -> {1}|>|>, "Boundaries" -> {{-0.5, 0.5}}, 
                    "Version" -> {14., 0}, "ID" -> 8969352828768388750, 
                    "Output" -> <|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>|>]}, 
                   "Invertibility" -> "Approximate", "StructurePreserving" -> 
                   True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                "DirectTraining", "BatchProcessing" -> Automatic, 
                "Model" -> <|
                 "RotationMatrix" -> {{1.}}, 
                  "Precisions" -> {12.084907927485615`}, "NoisePrecision" -> 
                  None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {-0.004572706931210259}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 3267205846710161426|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 1, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {-0.004572706931210271}, 
                    "StandardDeviation" -> {0.28765923888569916`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    4887432564448952023|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Mean" -> {-0.004572706931210271}, 
                   "StandardDeviation" -> {0.28765923888569916`}, "Method" -> 
                   "NaiveSampler", "VectorLength" -> 1, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Type" -> "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                   4887432564448952023|>], "InputDimension" -> 0, 
                "OutputDimension" -> 1, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1, "Values" -> {
                    Image[CompressedData["
1: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
fznjnwSCFoo=
                    "], "Real32", ColorSpace -> Automatic, ImageSize -> 
                    Automatic, Interleaving -> None, Magnification -> 
                    Automatic]}, "ID" -> 7010556415243574996|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.204632, "MaxTrainingMemory" -> 2246432, 
                  "DataMemory" -> 36641840, "FunctionMemory" -> 49784, 
                  "LanguageVersion" -> {14., 0}, "Date" -> 
                  DateObject[{
                    2024, 4, 19, 11, 19, 1.727803`6.9900692126260235}, 
                    "Instant", "Gregorian", 2.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-0.5125811770876305, -0.5125811770876305, \
-0.3501120945907746, -0.30189874004446376`, -0.14633008531134462`, \
-0.07158008348672722, -0.06803039793036912, 0.03877394930521939, 
                    0.09907792423403629, 0.10466426783518772`, 
                    0.18824663462166388`}, 
                   "LeftBoundary" -> -0.3501120945907746, "LeftScale" -> 
                   0.08123454124842797, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[0.10197698024552024`, 0.07159634860402582], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|"f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {14., 0}, 
             "ID" -> 4270897793735380344|>], 
           MachineLearning`MLProcessor[
           "ConformImage", <|
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
             "Example" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwUj4JRMAoQAAAJTAyT
               "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None], 
             "Version" -> {14., 0}, "ID" -> 8437933259895095483, 
             "Output" -> <|"f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>|>], 
           
           MachineLearning`MLProcessor[
           "ImageExtractNumericalVector", <|
            "Invertibility" -> "Impossible", "Missing" -> "Forbidden", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
             "ExtractorName" -> "ImagePixels", "ExtractorVersion" -> "V1", 
             "FeatureNumber" -> Automatic, "Shake" -> False, 
             "Version" -> {14., 0}, "ID" -> 6659986185200619550, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>]}, 
         "Invertibility" -> "Impossible", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Version" -> {14., 0}, "ID" -> 7213318638605837256|>], 
           MachineLearning`MLProcessor[
           "IntegerEncodeNominalVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Index" -> {<|
               0 -> 1, 1 -> 2, 2 -> 3, 3 -> 4, 4 -> 5, 5 -> 6, 6 -> 7, 7 -> 8,
                 8 -> 9, 9 -> 10|>}, "MissingCode" -> 0, 
             "Version" -> {14., 0}, "ID" -> 4934427692370913341, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|
                "Type" -> "NominalVector", "Weight" -> 1, 
                 "SetSize" -> {10}|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Version" -> {14., 0}, "ID" -> 1619002214002175335|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 10|>,
              "Key" -> "f1", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
      "Name" -> "class", 
      "Marginal" -> <|
       0 -> 0.1031968031968032, 1 -> 0.11498501498501498`, 2 -> 
        0.0988011988011988, 3 -> 0.0973026973026973, 4 -> 0.0956043956043956, 
        5 -> 0.08771228771228771, 6 -> 0.100999000999001, 7 -> 
        0.10649350649350649`, 8 -> 0.1004995004995005, 9 -> 
        0.0944055944055944|>|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {10, 11}, 0., {
      1, {{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {{2}, {3}, {4}, {5}, {6}, {7}, {
        8}, {9}, {10}, {11}}}, {1., 1., 1., 1., 1., 1., 1., 1., 1., 1.}}], 
    "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
    Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "LogProbabilitiesFunction" -> 
      LinearLayer[<|
        "Type" -> "Linear", "Arrays" -> <|"Weights" -> CompressedData["
1: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
TxG1Nbu516on2jop4v/LApyl
            "], "Biases" -> 
           RawArray["Real32",{0.02348535880446434, -0.04183033108711243, 
             0.027473898604512215`, 
             0.02139660343527794, -0.002919600810855627, 
             0.020337998867034912`, 
             0.010361450724303722`, -0.006738380063325167, 
             0.032676998525857925`}]|>, 
         "Parameters" -> <|
          "OutputDimensions" -> {9}, "$OutputSize" -> 9, "$InputSize" -> 784, 
           "$InputDimensions" -> {784}|>, 
         "Inputs" -> <|
          "Input" -> NeuralNetworks`TensorT[{784}, NeuralNetworks`AtomT]|>, 
         "Outputs" -> <|
          "Output" -> NeuralNetworks`TensorT[{9}, NeuralNetworks`RealT]|>|>, <|
        "Version" -> "14.0.2", "Unstable" -> False|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "FirstValues", <|
        "Info" -> <|"Weight" -> 1, "Type" -> "NumericalVector"|>, "Key" -> 
         "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
      "LogisticRegression", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
        "L2Regularization" -> <|"Value" -> 0.1, "Options" -> <||>|>, 
        "OptimizationMethod" -> <|"Value" -> "LBFGS", "Options" -> <||>|>, 
        MaxIterations -> <|"Value" -> 30, "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
      Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
      "PreprocessingTime" -> 1.564058`6.645797847471018, "LossName" -> 
      "MeanCrossEntropy", "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[0.3788096807198896, 0.03330009019582478], "Accuracy" -> 
         Around[0.888021723685552, 0.009960687856440402], "EvaluationTime" -> 
         0.00003518127004766529, "TestSize" -> 2000, "ModelMemory" -> 40008, 
         "ModelUtility" -> 0.26013202120913803`, "Round" -> 5, "Iteration" -> 
         46, "Time" -> {
          29.348283`7.919127691739305, 30.737308`7.93921082243914}, 
         "TrainingSize" -> 8000, "TrainingTime" -> 1.2589254117941673`, 
         "TrainingMemory" -> 150763704, "ExperimentCount" -> 1, 
         "MeanCrossEntropyHistory" -> {
           Around[0.3788096807198896, 0.023546719591591367`]}, 
         "AccuracyHistory" -> {
           Around[0.888021723685552, 0.007043269928571504]}, 
         "IterationHistory" -> {46}, 
         "TimeHistory" -> {{
           29.348283`7.919127691739305, 30.737308`7.93921082243914}}, 
         "Configuration" -> {
          "LogisticRegression", "L1Regularization" -> 0, "L2Regularization" -> 
           0.1, "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
         "FinalTrainingSize" -> 10000|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], TypeSystem`AnyType, 19], <||>], 
      "Configurations" -> 
      Dataset[<|<|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 1.*^-6|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[3.719107029175524, 0.6260261887812988], "Accuracy" -> 
              Around[0.4564380455806668, 0.07037823770495281], 
              "EvaluationTime" -> 0.0007943282347242814, "TestSize" -> 100, 
              "ModelMemory" -> 40008, "ModelUtility" -> -2.0397561521492324`, 
              "Round" -> 1, "Iteration" -> 1, 
              "Time" -> {
               1.66043`6.671765564936227, 1.925549`6.736099568212111}, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.12589254117941673`, 
              "TrainingMemory" -> 3418744, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[3.719107029175524, 0.4426673632876261]}, 
              "AccuracyHistory" -> {
                Around[0.4564380455806668, 0.0497649291291309]}, 
              "IterationHistory" -> {1}, 
              "TimeHistory" -> {{
                1.66043`6.671765564936227, 1.925549`6.736099568212111}}|>, <|
             "MeanCrossEntropy" -> 
              Around[4.793092563774317, 0.35652888424721324`], "Accuracy" -> 
              Around[0.6938643062523752, 0.01676188280616967], 
              "EvaluationTime" -> 0.00010096120158844399`, "TestSize" -> 1500,
               "ModelMemory" -> 40008, "ModelUtility" -> -2.275103773077772, 
              "Round" -> 2, "Iteration" -> 32, 
              "Time" -> {
               18.703019`7.723456708546639, 19.127484`7.733202840847976}, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.15848931924611134`, 
              "TrainingMemory" -> 4115488, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[4.793092563774317, 0.25210399174007814`]}, 
              "AccuracyHistory" -> {
                Around[0.6938643062523752, 0.01185244099769677]}, 
              "IterationHistory" -> {32}, 
              "TimeHistory" -> {{
                18.703019`7.723456708546639, 19.127484`7.733202840847976}}|>},
            "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00010096120158844399`, "MeanCrossEntropy" -> 
             Around[4.793092563774317, 0.35652888424721324`], "ModelMemory" -> 
             40008, "TrainingMemory" -> 4115488, "TrainingTime" -> 
             15.974824465790551`|>, "Index" -> 1|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.01|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.3222753744482074`, 0.07221498376901729], "Accuracy" -> 
              Around[0.6866831931973957, 0.014250792495300767`], 
              "EvaluationTime" -> 0.00005080681532742491, "TestSize" -> 2100, 
              "ModelMemory" -> 40008, "ModelUtility" -> -0.9833783195248539, 
              "Round" -> 2, "Iteration" -> 3, 
              "Time" -> {
               2.135348`6.7810136560718925, 2.872793`6.909849327390279}, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.5011872336272722, 
              "TrainingMemory" -> 4161264, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.3222753744482074`, 0.05106370472634859]}, 
              "AccuracyHistory" -> {
                Around[0.6866831931973957, 0.010076832010709533`]}, 
              "IterationHistory" -> {3}, 
              "TimeHistory" -> {{
                2.135348`6.7810136560718925, 2.872793`6.909849327390279}}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.7530910618175928`, 0.028318282058184503`], "Accuracy" -> 
              Around[0.48246633755585094`, 0.01905046889131798], 
              "EvaluationTime" -> 0.0000538402035650229, "TestSize" -> 
              1533.3333333333333`, "ModelMemory" -> 40008., 
              "ModelUtility" -> -1.257766701118991, "Round" -> 1, "Iteration" -> 
              18, "Time" -> {
               10.503215`7.472867249046167, 10.757978`7.483275645313116}, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.11040596861042053`, 
              "TrainingMemory" -> 3.418893333333333*^6, "ExperimentCount" -> 
              2, "MeanCrossEntropyHistory" -> {
                Around[1.7555432791067933`, 0.05031204248119991], 
                Around[1.750638844528392, 0.034072646645297314`]}, 
              "AccuracyHistory" -> {
                Around[0.49950164310934314`, 0.014371114918403502`], 
                Around[0.46543103200235875`, 0.010594219600169694`]}, 
              "IterationHistory" -> {14, 18}, 
              "TimeHistory" -> {{
                8.45256`7.3785332557585575, 8.722845`7.392203148874157}, {
                10.503215`7.472867249046167, 
                 10.757978`7.483275645313116}}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.5028183235614196`, 0.16689988923182644`], "Accuracy" -> 
              Around[0.8068171948893039, 0.015420797270985671`], 
              "EvaluationTime" -> 0.00008959550523816813, "TestSize" -> 1300, 
              "ModelMemory" -> 40008, "ModelUtility" -> -1.1224714535855274`, 
              "Round" -> 3, "Iteration" -> 39, 
              "Time" -> {
               23.506739`7.822737378786998, 24.013663`7.8320034050878045}, 
              "TrainingSize" -> 300, "TrainingTime" -> 0.31622776601683794`, 
              "TrainingMemory" -> 7569016, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5028183235614196`, 0.11801604345510812`]}, 
              "AccuracyHistory" -> {
                Around[0.8068171948893039, 0.010904150321616974`]}, 
              "IterationHistory" -> {39}, 
              "TimeHistory" -> {{
                23.506739`7.822737378786998, 
                 24.013663`7.8320034050878045}}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.43630664499564303`, 0.01905031777687309], "Accuracy" -> 
              Around[0.8719774832591014, 0.005673163403071684], 
              "EvaluationTime" -> 0.00002342840101463073, "TestSize" -> 6900, 
              "ModelMemory" -> 40008, "ModelUtility" -> 0.12755468198773645`, 
              "Round" -> 4, "Iteration" -> 45, 
              "Time" -> {
               28.337649`7.9039088101667705, 28.983626`7.9136977104931905}, 
              "TrainingSize" -> 1500, "TrainingTime" -> 0.3981071705534972, 
              "TrainingMemory" -> 37703472, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.43630664499564303`, 0.013470608883785595`]}, 
              "AccuracyHistory" -> {
                Around[0.8719774832591014, 0.004011532313091338]}, 
              "IterationHistory" -> {45}, 
              "TimeHistory" -> {{
                28.337649`7.9039088101667705, 
                 28.983626`7.9136977104931905}}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.4040899601653172, 0.03789438887526882], "Accuracy" -> 
              Around[0.8881584925249312, 0.009960333868130684], 
              "EvaluationTime" -> 0.000027326509266368902`, "TestSize" -> 
              2000, "ModelMemory" -> 40008, "ModelUtility" -> 
              0.1943753818079671, "Round" -> 5, "Iteration" -> 50, 
              "Time" -> {
               34.841454`7.993641264142746, 36.903988`8.018618293877493}, 
              "TrainingSize" -> 8000, "TrainingTime" -> 1.9952623149688797`, 
              "TrainingMemory" -> 150763672, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.4040899601653172, 0.026795379342622647`]}, 
              "AccuracyHistory" -> {
                Around[0.8881584925249312, 0.007043019621037242]}, 
              "IterationHistory" -> {50}, 
              "TimeHistory" -> {{
                34.841454`7.993641264142746, 36.903988`8.018618293877493}}|>},
            "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.000027326509266368902`, "MeanCrossEntropy" -> 
             Around[0.4040899601653172, 0.03789438887526882], "ModelMemory" -> 
             40008, "TrainingMemory" -> 150763672, "TrainingTime" -> 
             2.9952651273383717`|>, "Index" -> 2|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 1.*^6|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.3025528949625746`, 0.00070521892750315], "Accuracy" -> 
              Around[0.16144368470826964`, 0.028523489988448888`], 
              "EvaluationTime" -> 0.000277123415178321, "TestSize" -> 
              833.3333333333333, "ModelMemory" -> 40008., 
              "ModelUtility" -> -1.5272406274830037`, "Round" -> 1, 
              "Iteration" -> 19, 
              "Time" -> {
               10.774239`7.483931598567981, 11.084002`7.496241588970376}, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.0840280033584851, 
              "TrainingMemory" -> 2.909613333333333*^6, "ExperimentCount" -> 
              2, "MeanCrossEntropyHistory" -> {
                Around[2.30255943238861, 0.003454703527896965], 
                Around[2.30254635753654, 0.0007203557174341376]}, 
              "AccuracyHistory" -> {
                Around[0.1891113129073992, 0.039124366743723805`], 
                Around[0.13377605650914007`, 0.007046402202775543]}, 
              "IterationHistory" -> {2, 19}, 
              "TimeHistory" -> {{
                1.941349`6.73964860984748, 2.10949`6.775722464453452}, {
                10.774239`7.483931598567981, 
                 11.084002`7.496241588970376}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.302532094546356, 0.0014734055984126334`], "Accuracy" -> 
              Around[0.10506597746572721`, 0.013060502538886517`], 
              "EvaluationTime" -> 0.00014907944805533888`, "TestSize" -> 1100,
               "ModelMemory" -> 40008, "ModelUtility" -> -1.5272981853886773`,
               "Round" -> 2, "Iteration" -> 24, 
              "Time" -> {
               13.744439`7.58967201165316, 13.999427`7.5976552537577255}, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.03162277660168379, 
              "TrainingMemory" -> 2206496, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.302532094546356, 0.001041855090075796]}, 
              "AccuracyHistory" -> {
                Around[0.10506597746572721`, 0.009235169910950776]}, 
              "IterationHistory" -> {24}, 
              "TimeHistory" -> {{
                13.744439`7.58967201165316, 
                 13.999427`7.5976552537577255}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.302359242434345, 0.0011558741113331737`], "Accuracy" -> 
              Around[0.11095745641255333`, 0.010455834646253685`], 
              "EvaluationTime" -> 0.00006066477345638924, "TestSize" -> 1800, 
              "ModelMemory" -> 40008, "ModelUtility" -> -1.5271954533264314`, 
              "Round" -> 3, "Iteration" -> 38, 
              "Time" -> {
               23.255939`7.81807887311154, 23.493412`7.822491088398891}, 
              "TrainingSize" -> 300, "TrainingTime" -> 0.05011872336272722, 
              "TrainingMemory" -> 7569016, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.302359242434345, 0.0008173264223216614]}, 
              "AccuracyHistory" -> {
                Around[0.11095745641255333`, 0.007393391581331226]}, 
              "IterationHistory" -> {38}, 
              "TimeHistory" -> {{
                23.255939`7.81807887311154, 23.493412`7.822491088398891}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.30116579817269, 0.00029184745409189145`], "Accuracy" -> 
              Around[0.1268738717605371, 0.0050913259761613365`], 
              "EvaluationTime" -> 0.000015979549395057284`, "TestSize" -> 
              8500, "ModelMemory" -> 40008, 
              "ModelUtility" -> -1.5266018792503036`, "Round" -> 4, 
              "Iteration" -> 44, 
              "Time" -> {
               28.040651`7.899333085616053, 28.327738`7.903756890524746}, 
              "TrainingSize" -> 1500, "TrainingTime" -> 0.1, "TrainingMemory" -> 
              37703528, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.30116579817269, 0.00020636731386040606`]}, 
              "AccuracyHistory" -> {
                Around[0.1268738717605371, 0.0036001111229748994`]}, 
              "IterationHistory" -> {44}, 
              "TimeHistory" -> {{
                28.040651`7.899333085616053, 28.327738`7.903756890524746}}|>},
            "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.000015979549395057284`, "MeanCrossEntropy" -> 
             Around[2.30116579817269, 0.00029184745409189145`], "ModelMemory" -> 
             40008, "TrainingMemory" -> 37703528, "TrainingTime" -> 
             0.7506946700251519|>, "Index" -> 3|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.1|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.9581975118677089, 0.16335331340220488`], "Accuracy" -> 
              Around[0.799570617591918, 0.028244832452000133`], 
              "EvaluationTime" -> 0.00016270938633815228`, "TestSize" -> 400, 
              "ModelMemory" -> 40008, "ModelUtility" -> -0.68398702167171, 
              "Round" -> 3, "Iteration" -> 4, 
              "Time" -> {
               3.180383`6.954024416867409, 
                3.4985480000000000001`6.99543283029555}, "TrainingSize" -> 
              300, "TrainingTime" -> 0.19952623149688792`, "TrainingMemory" -> 
              7568824, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.9581975118677089, 0.1155082356359904]}, 
              "AccuracyHistory" -> {
                Around[0.799570617591918, 0.019972112560287154`]}, 
              "IterationHistory" -> {4}, 
              "TimeHistory" -> {{
                3.180383`6.954024416867409, 
                 3.4985480000000000001`6.99543283029555}}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.6832713671225144`, 0.03964352175711118], "Accuracy" -> 
              Around[0.4680310564687247, 0.014233447453755254`], 
              "EvaluationTime" -> 0.00006140371930292695, "TestSize" -> 
              1033.3333333333333`, "ModelMemory" -> 40008., 
              "ModelUtility" -> -1.2185990749183389`, "Round" -> 1, 
              "Iteration" -> 20, 
              "Time" -> {
               11.4662230000000000001`7.510965377361258, 
                11.739278`7.5211863808455455}, "TrainingSize" -> 15, 
              "TrainingTime" -> 0.11726169411961114`, "TrainingMemory" -> 
              3.4187866666666665`*^6, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[1.7122070580467388`, 0.05340807378358232], 
                Around[1.65433567619829, 0.031447196920690104`]}, 
              "AccuracyHistory" -> {
                Around[0.47803601344625696`, 0.01876395433103873], 
                Around[0.4580260994911925, 0.01202408076315968]}, 
              "IterationHistory" -> {6, 20}, 
              "TimeHistory" -> {{
                4.122096`7.066663095394472, 4.360241`7.091055487828221}, {
                11.4662230000000000001`7.510965377361258, 
                 11.739278`7.5211863808455455}}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.0474142725152358`, 0.05376065850029828], "Accuracy" -> 
              Around[0.6915743694381458, 0.01578108450938103], 
              "EvaluationTime" -> 0.00007825583952519604, "TestSize" -> 1700, 
              "ModelMemory" -> 40008, "ModelUtility" -> -0.7496983163099827, 
              "Round" -> 2, "Iteration" -> 22, 
              "Time" -> {
               12.538361`7.549785763230128, 12.875534`7.56131024351554}, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.12589254117941673`, 
              "TrainingMemory" -> 4115736, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.0474142725152358`, 0.03801452618661512]}, 
              "AccuracyHistory" -> {
                Around[0.6915743694381458, 0.011158911871061307`]}, 
              "IterationHistory" -> {22}, 
              "TimeHistory" -> {{
                12.538361`7.549785763230128, 12.875534`7.56131024351554}}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.450318539014938, 0.018006062908627184`], "Accuracy" -> 
              Around[0.8725153351004998, 0.005110916310173962], 
              "EvaluationTime" -> 0.000022045923525299074`, "TestSize" -> 
              8500, "ModelMemory" -> 40008, "ModelUtility" -> 
              0.09667419799764232, "Round" -> 4, "Iteration" -> 43, 
              "Time" -> {
               27.115588`7.884764020020965, 27.692026`7.893899724193978}, 
              "TrainingSize" -> 1500, "TrainingTime" -> 0.31622776601683794`, 
              "TrainingMemory" -> 37703408, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.450318539014938, 0.01273220918516185]}, 
              "AccuracyHistory" -> {
                Around[0.8725153351004998, 0.0036139635810009366`]}, 
              "IterationHistory" -> {43}, 
              "TimeHistory" -> {{
                27.115588`7.884764020020965, 
                 27.692026`7.893899724193978}}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.3788096807198896, 0.03330009019582478], "Accuracy" -> 
              Around[0.888021723685552, 0.009960687856440402], 
              "EvaluationTime" -> 0.00003518127004766529, "TestSize" -> 2000, 
              "ModelMemory" -> 40008, "ModelUtility" -> 0.26013202120913803`, 
              "Round" -> 5, "Iteration" -> 46, 
              "Time" -> {
               29.348283`7.919127691739305, 30.737308`7.93921082243914}, 
              "TrainingSize" -> 8000, "TrainingTime" -> 1.2589254117941673`, 
              "TrainingMemory" -> 150763704, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.3788096807198896, 0.023546719591591367`]}, 
              "AccuracyHistory" -> {
                Around[0.888021723685552, 0.007043269928571504]}, 
              "IterationHistory" -> {46}, 
              "TimeHistory" -> {{
                29.348283`7.919127691739305, 30.737308`7.93921082243914}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00003518127004766529, "MeanCrossEntropy" -> 
             Around[0.3788096807198896, 0.03330009019582478], "ModelMemory" -> 
             40008, "TrainingMemory" -> 150763704, "TrainingTime" -> 
             1.773182996239597|>, "Index" -> 4|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 1.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.46817911634826437`, 0.0671161694458176], "Accuracy" -> 
              Around[0.8666225091640428, 0.019533021138773955`], 
              "EvaluationTime" -> 0.0001548875127307931, "TestSize" -> 600, 
              "ModelMemory" -> 40008, "ModelUtility" -> 0.03747571493229329, 
              "Round" -> 4, "Iteration" -> 8, 
              "Time" -> {
               5.193744`7.1670255329118335, 5.801947`7.215118750759468}, 
              "TrainingSize" -> 1500, "TrainingTime" -> 0.3981071705534972, 
              "TrainingMemory" -> 37703416, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.46817911634826437`, 0.04745829854240299]}, 
              "AccuracyHistory" -> {
                Around[0.8666225091640428, 0.013811931704287241`]}, 
              "IterationHistory" -> {8}, 
              "TimeHistory" -> {{
                5.193744`7.1670255329118335, 5.801947`7.215118750759468}}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.6919487218846363`, 0.021454016174363384`], "Accuracy" -> 
              Around[0.4611966807829715, 0.02113271145396475], 
              "EvaluationTime" -> 0.00004972253268426312, "TestSize" -> 
              1033.3333333333333`, "ModelMemory" -> 40008., 
              "ModelUtility" -> -1.221574441672502, "Round" -> 1, "Iteration" -> 
              17, "Time" -> {
               9.824707`7.443864600871112, 10.10927`7.456264789401693}, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.10863084705980558`, 
              "TrainingMemory" -> 3.4188426666666665`*^6, "ExperimentCount" -> 
              2, "MeanCrossEntropyHistory" -> {
                Around[1.689439347769606, 0.033717163041665464`], 
                Around[1.6944580959996667`, 0.02749157276016419]}, 
              "AccuracyHistory" -> {
                Around[0.4794968498023395, 0.016555676005034752`], 
                Around[0.44289651176360356`, 0.013730233428578384`]}, 
              "IterationHistory" -> {9, 17}, 
              "TimeHistory" -> {{
                6.193115`7.243454137997989, 6.409443`7.258365283149405}, {
                9.824707`7.443864600871112, 10.10927`7.456264789401693}}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.02235176671446, 0.03484365210922547], "Accuracy" -> 
              Around[0.6923088549719787, 0.013860719507924509`], 
              "EvaluationTime" -> 0.00006213156385016352, "TestSize" -> 2200, 
              "ModelMemory" -> 40008, "ModelUtility" -> -0.7220595702680834, 
              "Round" -> 2, "Iteration" -> 15, 
              "Time" -> {
               8.740728`7.393092599267219, 9.232522`7.416865344692234}, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.25118864315095796`, 
              "TrainingMemory" -> 4115656, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.02235176671446, 0.024638182687738278`]}, 
              "AccuracyHistory" -> {
                Around[0.6923088549719787, 0.009801008756178085]}, 
              "IterationHistory" -> {15}, 
              "TimeHistory" -> {{
                8.740728`7.393092599267219, 9.232522`7.416865344692234}}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.571203272133016, 0.035553781810898556`], "Accuracy" -> 
              Around[0.815924072111202, 0.012199237586927252`], 
              "EvaluationTime" -> 0.00007747571105553733, "TestSize" -> 2000, 
              "ModelMemory" -> 40008, "ModelUtility" -> -0.14552245664423724`,
               "Round" -> 3, "Iteration" -> 36, 
              "Time" -> {
               21.567055`7.785335839360257, 21.951296`7.793005159487922}, 
              "TrainingSize" -> 300, "TrainingTime" -> 0.15848931924611134`, 
              "TrainingMemory" -> 7568592, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.571203272133016, 0.025140320215313296`]}, 
              "AccuracyHistory" -> {
                Around[0.815924072111202, 0.008626163623022074]}, 
              "IterationHistory" -> {36}, 
              "TimeHistory" -> {{
                21.567055`7.785335839360257, 
                 21.951296`7.793005159487922}}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.4025821946654099, 0.037042853174027925`], "Accuracy" -> 
              Around[0.8881584925249312, 0.009960333868130684], 
              "EvaluationTime" -> 0.00003521889138228103, "TestSize" -> 2000, 
              "ModelMemory" -> 40008, "ModelUtility" -> 0.19845997285804173`, 
              "Round" -> 5, "Iteration" -> 51, 
              "Time" -> {
               37.3497`8.023832111324293, 38.825997`8.040667610144842}, 
              "TrainingSize" -> 8000, "TrainingTime" -> 1.2589254117941673`, 
              "TrainingMemory" -> 150763840, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.4025821946654099, 0.02619325267385277]}, 
              "AccuracyHistory" -> {
                Around[0.8881584925249312, 0.007043019621037242]}, 
              "IterationHistory" -> {51}, 
              "TimeHistory" -> {{
                37.3497`8.023832111324293, 38.825997`8.040667610144842}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00003521889138228103, "MeanCrossEntropy" -> 
             Around[0.4025821946654099, 0.037042853174027925`], "ModelMemory" -> 
             40008, "TrainingMemory" -> 150763840, "TrainingTime" -> 
             1.9717639352962064`|>, "Index" -> 5|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 10.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.8660606453413937`, 0.016555758894882103`], "Accuracy" -> 
              Around[0.43239931042158136`, 0.026820263427031518`], 
              "EvaluationTime" -> 0.00015169628149985526`, "TestSize" -> 700.,
               "ModelMemory" -> 40008., "ModelUtility" -> -1.318763223872915, 
              "Round" -> 1, "Iteration" -> 21, 
              "Time" -> {
               11.761348`7.522002093757482, 12.107256`7.534590718877457}, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.13675813386831492`, 
              "TrainingMemory" -> 3.418984*^6, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[1.8610107819850108`, 0.027093824825347144`], 
                Around[1.8711105086977764`, 0.019387721327796613`]}, 
              "AccuracyHistory" -> {
                Around[0.4562344760321913, 0.022210983410940594`], 
                Around[0.4085641448109714, 0.014766349394828475`]}, 
              "IterationHistory" -> {12, 21}, 
              "TimeHistory" -> {{
                7.355922`7.318182108957449, 7.646661`7.335016830501589}, {
                11.761348`7.522002093757482, 
                 12.107256`7.534590718877457}}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2519728803735717`, 0.036416719682455724`], "Accuracy" -> 
              Around[0.675224839894244, 0.020894089860874872`], 
              "EvaluationTime" -> 0.00012619657301530014`, "TestSize" -> 1000,
               "ModelMemory" -> 40008, "ModelUtility" -> -0.9236820098173091, 
              "Round" -> 2, "Iteration" -> 26, 
              "Time" -> {
               14.9079850000000000001`7.624963940602965, 
                15.236858`7.634440413652767}, "TrainingSize" -> 70, 
              "TrainingTime" -> 0.12589254117941673`, "TrainingMemory" -> 
              4115784, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.2519728803735717`, 0.025750509436034057`]}, 
              "AccuracyHistory" -> {
                Around[0.675224839894244, 0.01477435262734571]}, 
              "IterationHistory" -> {26}, 
              "TimeHistory" -> {{
                14.9079850000000000001`7.624963940602965, 
                 15.236858`7.634440413652767}}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.7473061468710822, 0.0678622489108265], "Accuracy" -> 
              Around[0.7982059109579069, 0.032687675640459254`], 
              "EvaluationTime" -> 0.00045391488129735907`, "TestSize" -> 300, 
              "ModelMemory" -> 40008, "ModelUtility" -> -0.4198796238504017, 
              "Round" -> 3, "Iteration" -> 31, 
              "Time" -> {
               17.757357`7.700923319480586, 18.248825`7.712779899962753}, 
              "TrainingSize" -> 300, "TrainingTime" -> 0.31622776601683794`, 
              "TrainingMemory" -> 7568776, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.7473061468710822, 0.04798585639141481]}, 
              "AccuracyHistory" -> {
                Around[0.7982059109579069, 0.023113677106595062`]}, 
              "IterationHistory" -> {31}, 
              "TimeHistory" -> {{
                17.757357`7.700923319480586, 
                 18.248825`7.712779899962753}}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.4279215107648932, 0.02718473688668892], "Accuracy" -> 
              Around[0.8714918134459168, 0.01178713500348371], 
              "EvaluationTime" -> 0.00010753250270236814`, "TestSize" -> 1600,
               "ModelMemory" -> 40008, "ModelUtility" -> 0.14302930290216198`,
               "Round" -> 4, "Iteration" -> 37, 
              "Time" -> {
               21.962552`7.793227796265065, 22.801366`7.809505859289921}, 
              "TrainingSize" -> 1500, "TrainingTime" -> 0.5011872336272722, 
              "TrainingMemory" -> 37703288, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.4279215107648932, 0.01922251179734981]}, 
              "AccuracyHistory" -> {
                Around[0.8714918134459168, 0.00833476309172465]}, 
              "IterationHistory" -> {37}, 
              "TimeHistory" -> {{
                21.962552`7.793227796265065, 
                 22.801366`7.809505859289921}}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.40094980934238367`, 0.031529174127845144`], "Accuracy" -> 
              Around[0.8906109577702078, 0.009864390886720177], 
              "EvaluationTime" -> 0.00003867463231475127, "TestSize" -> 2000, 
              "ModelMemory" -> 40008, "ModelUtility" -> 0.20515349858137333`, 
              "Round" -> 5, "Iteration" -> 47, 
              "Time" -> {
               31.174729`7.945347680367769, 32.600756`7.964772664816103}, 
              "TrainingSize" -> 8000, "TrainingTime" -> 1.2589254117941673`, 
              "TrainingMemory" -> 150763904, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.40094980934238367`, 0.02229449283101075]}, 
              "AccuracyHistory" -> {
                Around[0.8906109577702078, 0.006975177688274617]}, 
              "IterationHistory" -> {47}, 
              "TimeHistory" -> {{
                31.174729`7.945347680367769, 32.600756`7.964772664816103}}|>},
            "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00003867463231475127, "MeanCrossEntropy" -> 
             Around[0.40094980934238367`, 0.031529174127845144`], 
             "ModelMemory" -> 40008, "TrainingMemory" -> 150763904, 
             "TrainingTime" -> 1.710414898611024|>, "Index" -> 6|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.00001|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.8224438799812495`, 0.4532318585568446], "Accuracy" -> 
              Around[0.7857396785357932, 0.023611315715617854`], 
              "EvaluationTime" -> 0.00019488420934696583`, "TestSize" -> 600, 
              "ModelMemory" -> 40008, "ModelUtility" -> -1.7623752898868408`, 
              "Round" -> 3, "Iteration" -> 7, 
              "Time" -> {
               4.376569`7.092678773342332, 4.814314`7.13407940598673}, 
              "TrainingSize" -> 300, "TrainingTime" -> 0.25118864315095796`, 
              "TrainingMemory" -> 7568952, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.8224438799812495`, 0.320483320635327]}, 
              "AccuracyHistory" -> {
                Around[0.7857396785357932, 0.016695721455249883`]}, 
              "IterationHistory" -> {7}, 
              "TimeHistory" -> {{
                4.376569`7.092678773342332, 4.814314`7.13407940598673}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.611639644721379, 0.12270378294181394`], "Accuracy" -> 
              Around[0.5053982842170482, 0.01876229010294735], 
              "EvaluationTime" -> 0.00004810310786918529, "TestSize" -> 1400, 
              "ModelMemory" -> 40008, "ModelUtility" -> -1.6624917350428152`, 
              "Round" -> 1, "Iteration" -> 16, 
              "Time" -> {
               9.562961`7.43213737812095, 9.807892`7.443120668445366}, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.12589254117941673`, 
              "TrainingMemory" -> 3418920, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.611639644721379, 0.08676467699539885]}, 
              "AccuracyHistory" -> {
                Around[0.5053982842170482, 0.013266942562383316`]}, 
              "IterationHistory" -> {16}, 
              "TimeHistory" -> {{
                9.562961`7.43213737812095, 9.807892`7.443120668445366}}|>, <|
             "MeanCrossEntropy" -> 
              Around[3.4252980531427037`, 0.27551761253645984`], "Accuracy" -> 
              Around[0.6824785379806705, 0.01894744631903076], 
              "EvaluationTime" -> 0.00012605712152111425`, "TestSize" -> 1200,
               "ModelMemory" -> 40008, "ModelUtility" -> -1.9403084436062246`,
               "Round" -> 2, "Iteration" -> 29, 
              "Time" -> {
               16.542793`7.670153828947396, 16.995042`7.681867235692233}, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.19952623149688792`, 
              "TrainingMemory" -> 4115656, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[3.4252980531427037`, 0.19482037216085848`]}, 
              "AccuracyHistory" -> {
                Around[0.6824785379806705, 0.013397867778354739`]}, 
              "IterationHistory" -> {29}, 
              "TimeHistory" -> {{
                16.542793`7.670153828947396, 16.995042`7.681867235692233}}|>},
            "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00012605712152111425`, "MeanCrossEntropy" -> 
             Around[3.4252980531427037`, 0.27551761253645984`], "ModelMemory" -> 
             40008, "TrainingMemory" -> 4115656, "TrainingTime" -> 
             20.20381179283975|>, "Index" -> 7|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.001|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.9297132671622252`, 0.07622679919229544], "Accuracy" -> 
              Around[0.47519702207192627`, 0.033956528301134103`], 
              "EvaluationTime" -> 0.00018436254657999858`, "TestSize" -> 500.,
               "ModelMemory" -> 40008., 
              "ModelUtility" -> -1.3584015248602943`, "Round" -> 1, 
              "Iteration" -> 23, 
              "Time" -> {
               12.892227`7.561872937247494, 13.306891`7.575621592977882}, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.1504371046185738, 
              "TrainingMemory" -> 3.4190026666666665`*^6, "ExperimentCount" -> 
              2, "MeanCrossEntropyHistory" -> {
                Around[1.9581274361996501`, 0.09151561402571509], 
                Around[1.9012990981248001`, 0.11147487017783742`]}, 
              "AccuracyHistory" -> {
                Around[0.5048560240388095, 0.020276479606152812`], 
                Around[0.4455380201050431, 0.028565614914271276`]}, 
              "IterationHistory" -> {10, 23}, 
              "TimeHistory" -> {{
                6.422997`7.259282712663468, 6.652748`7.274546066576442}, {
                12.892227`7.561872937247494, 
                 13.306891`7.575621592977882}}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.8405360592803206`, 0.1218169334196996], "Accuracy" -> 
              Around[0.6811291563777044, 0.01643512631268253], 
              "EvaluationTime" -> 0.00006741318992262202, "TestSize" -> 1600, 
              "ModelMemory" -> 40008, "ModelUtility" -> -1.3163678378009012`, 
              "Round" -> 2, "Iteration" -> 27, 
              "Time" -> {
               15.250057`7.634816460440365, 15.75225`7.648887589259281}, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.31622776601683794`, 
              "TrainingMemory" -> 4115744, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.8405360592803206`, 0.08613757968441975]}, 
              "AccuracyHistory" -> {
                Around[0.6811291563777044, 0.011621389265355275`]}, 
              "IterationHistory" -> {27}, 
              "TimeHistory" -> {{
                15.250057`7.634816460440365, 15.75225`7.648887589259281}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00006741318992262202, "MeanCrossEntropy" -> 
             Around[1.8405360592803206`, 0.1218169334196996], "ModelMemory" -> 
             40008, "TrainingMemory" -> 4115744, "TrainingTime" -> 
             31.773213706302368`|>, "Index" -> 8|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 100000.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.3006683112961124`, 0.0020360922505310575`], "Accuracy" -> 
              Around[0.12864233147386672`, 0.015745449891823242`], 
              "EvaluationTime" -> 0.000070932281536554, "TestSize" -> 900, 
              "ModelMemory" -> 40008, "ModelUtility" -> -1.5265373413137784`, 
              "Round" -> 3, "Iteration" -> 5, 
              "Time" -> {
               3.542458`7.000849703374858, 3.805758`7.03198616246903}, 
              "TrainingSize" -> 300, "TrainingTime" -> 0.12589254117941673`, 
              "TrainingMemory" -> 7568824, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.3006683112961124`, 0.0014397346374718893`]}, 
              "AccuracyHistory" -> {
                Around[0.12864233147386672`, 0.011133714391341204`]}, 
              "IterationHistory" -> {5}, 
              "TimeHistory" -> {{
                3.542458`7.000849703374858, 3.805758`7.03198616246903}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.302579095627826, 0.0014790879320093456`], "Accuracy" -> 
              Around[0.18387881729687508`, 0.016494061815810028`], 
              "EvaluationTime" -> 0.0000629016399766865, "TestSize" -> 1100, 
              "ModelMemory" -> 40008, "ModelUtility" -> -1.527319002669861, 
              "Round" -> 1, "Iteration" -> 13, 
              "Time" -> {
               7.674481`7.336594008725662, 8.040276`7.356815950605082}, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.19952623149688792`, 
              "TrainingMemory" -> 3418728, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.302579095627826, 0.0010458731066949954`]}, 
              "AccuracyHistory" -> {
                Around[0.18387881729687508`, 0.011663062959269369`]}, 
              "IterationHistory" -> {13}, 
              "TimeHistory" -> {{
                7.674481`7.336594008725662, 8.040276`7.356815950605082}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.3022975389439244`, 0.0010913052445556718`], "Accuracy" -> 
              Around[0.10565588536953888`, 0.009475025607594256], 
              "EvaluationTime" -> 0.00006778614487923744, "TestSize" -> 2100, 
              "ModelMemory" -> 40008, "ModelUtility" -> -1.527163054131743, 
              "Round" -> 2, "Iteration" -> 30, 
              "Time" -> {
               17.463006`7.6936639967169445, 17.740806`7.700518340299504}, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.05011872336272722, 
              "TrainingMemory" -> 2588192, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.3022975389439244`, 0.0007716693387697591]}, 
              "AccuracyHistory" -> {
                Around[0.10565588536953888`, 0.006699854859046086]}, 
              "IterationHistory" -> {30}, 
              "TimeHistory" -> {{
                17.463006`7.6936639967169445, 
                 17.740806`7.700518340299504}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.292170178903668, 0.0015019877291254213`], "Accuracy" -> 
              Around[0.2803944178774707, 0.007518084098949221], 
              "EvaluationTime" -> 0.00002535979065006963, "TestSize" -> 7100, 
              "ModelMemory" -> 40008, "ModelUtility" -> -1.5227907508441003`, 
              "Round" -> 4, "Iteration" -> 48, 
              "Time" -> {
               33.068337`7.97095734837691, 33.518193`7.976825590826459}, 
              "TrainingSize" -> 1500, "TrainingTime" -> 0.19952623149688792`, 
              "TrainingMemory" -> 37703288, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.292170178903668, 0.0010620657085235686`]}, 
              "AccuracyHistory" -> {
                Around[0.2803944178774707, 0.005316088247897748]}, 
              "IterationHistory" -> {48}, 
              "TimeHistory" -> {{
                33.068337`7.97095734837691, 33.518193`7.976825590826459}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00002535979065006963, "MeanCrossEntropy" -> 
             Around[2.292170178903668, 0.0015019877291254213`], "ModelMemory" -> 
             40008, "TrainingMemory" -> 37703288, "TrainingTime" -> 
             1.4560674178253363`|>, "Index" -> 9|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 10000.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.3025390368848697`, 0.0010216007458578279`], "Accuracy" -> 
              Around[0.1538035255118721, 0.03328657332631248], 
              "EvaluationTime" -> 0.000049344494276323545`, "TestSize" -> 
              1100., "ModelMemory" -> 40008., 
              "ModelUtility" -> -1.5272618605482087`, "Round" -> 1, 
              "Iteration" -> 25, 
              "Time" -> {
               14.01517`7.598143363491968, 14.411078`7.610241462300295}, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.1504371046185738, 
              "TrainingMemory" -> 3.418856*^6, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[2.3029848397303248`, 0.0015034721107504102`], 
                Around[2.3020932340394142`, 0.0011615828545943488`]}, 
              "AccuracyHistory" -> {
                Around[0.18633826675208442`, 0.01296182509453564], 
                Around[0.1212687842716598, 0.008375481120738345]}, 
              "IterationHistory" -> {11, 25}, 
              "TimeHistory" -> {{
                6.6686990000000000001`7.275586108936944, 
                 6.922824`7.29182828411356}, {
                14.01517`7.598143363491968, 14.411078`7.610241462300295}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.3000464195613146`, 0.0017560235900385148`], "Accuracy" -> 
              Around[0.1377203214137214, 0.009187062499276439], 
              "EvaluationTime" -> 0.000044676239706323296`, "TestSize" -> 
              2800, "ModelMemory" -> 40008, 
              "ModelUtility" -> -1.526242667909265, "Round" -> 2, "Iteration" -> 
              28, "Time" -> {
               16.21386`7.661431412239526, 16.531802`7.669865188628369}, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 3988240, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.3000464195613146`, 0.0012416961884397797`]}, 
              "AccuracyHistory" -> {
                Around[0.1377203214137214, 0.006496234192423]}, 
              "IterationHistory" -> {28}, 
              "TimeHistory" -> {{
                16.21386`7.661431412239526, 16.531802`7.669865188628369}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.2820165196962487`, 0.003851129176159697], "Accuracy" -> 
              Around[0.41138159030222277`, 0.014759269756437769`], 
              "EvaluationTime" -> 0.00006373815824786706, "TestSize" -> 2200, 
              "ModelMemory" -> 40008, "ModelUtility" -> -1.5185576522873165`, 
              "Round" -> 3, "Iteration" -> 41, 
              "Time" -> {
               24.973874`7.849030909748926, 25.479725`7.85773972988978}, 
              "TrainingSize" -> 300, "TrainingTime" -> 0.25118864315095796`, 
              "TrainingMemory" -> 7568712, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.2820165196962487`, 0.002723159555687884]}, 
              "AccuracyHistory" -> {
                Around[0.41138159030222277`, 0.010436379730138669`]}, 
              "IterationHistory" -> {41}, 
              "TimeHistory" -> {{
                24.973874`7.849030909748926, 25.479725`7.85773972988978}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.1819064075294197`, 0.00634846363404385], "Accuracy" -> 
              Around[0.6354520828864839, 0.013316781375242016`], 
              "EvaluationTime" -> 0.00006766242665097166, "TestSize" -> 2600, 
              "ModelMemory" -> 40008, "ModelUtility" -> -1.473941446016966, 
              "Round" -> 4, "Iteration" -> 49, 
              "Time" -> {
               33.528072`7.976953573950286, 34.306088`7.986916190803748}, 
              "TrainingSize" -> 1500, "TrainingTime" -> 0.5011872336272722, 
              "TrainingMemory" -> 37703288, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.1819064075294197`, 0.004489041685748599]}, 
              "AccuracyHistory" -> {
                Around[0.6354520828864839, 0.009416386414012348]}, 
              "IterationHistory" -> {49}, 
              "TimeHistory" -> {{
                33.528072`7.976953573950286, 34.306088`7.986916190803748}}|>},
            "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00006766242665097166, "MeanCrossEntropy" -> 
             Around[2.1819064075294197`, 0.00634846363404385], "ModelMemory" -> 
             40008, "TrainingMemory" -> 37703288, "TrainingTime" -> 
             3.491685328800389|>, "Index" -> 10|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.0001|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.4246836626236044`, 0.17580078130690519`], "Accuracy" -> 
              Around[0.6849660189801879, 0.01689980868499988], 
              "EvaluationTime" -> 0.0000961279352830519, "TestSize" -> 1500, 
              "ModelMemory" -> 40008, "ModelUtility" -> -1.5932585909171286`, 
              "Round" -> 2, "Iteration" -> 33, 
              "Time" -> {
               19.146539`7.733635274200298, 19.708277`7.746193651154361}, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.25118864315095796`, 
              "TrainingMemory" -> 4115568, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.4246836626236044`, 0.1243099246000059]}, 
              "AccuracyHistory" -> {
                Around[0.6849660189801879, 0.011949969321918724`]}, 
              "IterationHistory" -> {33}, 
              "TimeHistory" -> {{
                19.146539`7.733635274200298, 19.708277`7.746193651154361}}|>},
            "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0000961279352830519, "MeanCrossEntropy" -> 
             Around[2.4246836626236044`, 0.17580078130690519`], "ModelMemory" -> 
             40008, "TrainingMemory" -> 4115568, "TrainingTime" -> 
             25.370052958246752`|>, "Index" -> 11|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 100.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.8739582671421782`, 0.018949283270156242`], "Accuracy" -> 
              Around[0.6277565451160456, 0.022733023382143315`], 
              "EvaluationTime" -> 0.0001876002217426846, "TestSize" -> 900, 
              "ModelMemory" -> 40008, "ModelUtility" -> -1.3232340751256668`, 
              "Round" -> 2, "Iteration" -> 34, 
              "Time" -> {
               20.137089`7.755541683019903, 20.527992`7.763891463277191}, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.12589254117941673`, 
              "TrainingMemory" -> 4115552, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.8739582671421782`, 0.013399166698952273`]}, 
              "AccuracyHistory" -> {
                Around[0.6277565451160456, 0.01607467499038588]}, 
              "IterationHistory" -> {34}, 
              "TimeHistory" -> {{
                20.137089`7.755541683019903, 
                 20.527992`7.763891463277191}}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2700556415684385`, 0.013398911416733295`], "Accuracy" -> 
              Around[0.7562719232738079, 0.009694392040416219], 
              "EvaluationTime" -> 0.00003774396602870044, "TestSize" -> 3900, 
              "ModelMemory" -> 40008, "ModelUtility" -> -0.9343291341138426, 
              "Round" -> 3, "Iteration" -> 40, 
              "Time" -> {
               24.543169`7.8414756313636165, 24.955417`7.848709824732209}, 
              "TrainingSize" -> 300, "TrainingTime" -> 0.19952623149688792`, 
              "TrainingMemory" -> 7568776, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2700556415684385`, 0.009474461123289963]}, 
              "AccuracyHistory" -> {
                Around[0.7562719232738079, 0.006854970351259198]}, 
              "IterationHistory" -> {40}, 
              "TimeHistory" -> {{
                24.543169`7.8414756313636165, 
                 24.955417`7.848709824732209}}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.7258545212516418, 0.011794913854643018`], "Accuracy" -> 
              Around[0.8496448863760576, 0.006345530135232725], 
              "EvaluationTime" -> 0.00003394916704180868, "TestSize" -> 6300, 
              "ModelMemory" -> 40008, "ModelUtility" -> -0.37599967004188195`,
               "Round" -> 4, "Iteration" -> 42, 
              "Time" -> {
               25.963821`7.865913599848595, 26.71903`7.878365681083386}, 
              "TrainingSize" -> 1500, "TrainingTime" -> 0.3981071705534972, 
              "TrainingMemory" -> 37703528, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.7258545212516418, 0.008340263570129238]}, 
              "AccuracyHistory" -> {
                Around[0.8496448863760576, 0.004486967388846649]}, 
              "IterationHistory" -> {42}, 
              "TimeHistory" -> {{
                25.963821`7.865913599848595, 26.71903`7.878365681083386}}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.467343708029205, 0.02448470328204779], "Accuracy" -> 
              Around[0.8855613861117683, 0.010061213977351017`], 
              "EvaluationTime" -> 0.000036513518441251864`, "TestSize" -> 
              2000, "ModelMemory" -> 40008, "ModelUtility" -> 
              0.057105902783134876`, "Round" -> 5, "Iteration" -> 52, 
              "Time" -> {
               39.282153`8.045740276337849, 
                40.8071540000000000001`8.062281300467346}, "TrainingSize" -> 
              8000, "TrainingTime" -> 1.5848931924611136`, "TrainingMemory" -> 
              150763704, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.467343708029205, 0.01731329972607651]}, 
              "AccuracyHistory" -> {
                Around[0.8855613861117683, 0.007114352630353779]}, 
              "IterationHistory" -> {52}, 
              "TimeHistory" -> {{
                39.282153`8.045740276337849, 
                 40.8071540000000000001`8.062281300467346}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.000036513518441251864`, "MeanCrossEntropy" -> 
             Around[0.467343708029205, 0.02448470328204779], "ModelMemory" -> 
             40008, "TrainingMemory" -> 150763704, "TrainingTime" -> 
             2.107009031755809|>, "Index" -> 12|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 1000.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.2549418978605806`, 0.006346494767511621], "Accuracy" -> 
              Around[0.3343009082353419, 0.01662817543959181], 
              "EvaluationTime" -> 0.00009312669593516617, "TestSize" -> 1600, 
              "ModelMemory" -> 40008, "ModelUtility" -> -1.5068476731084428`, 
              "Round" -> 2, "Iteration" -> 35, 
              "Time" -> {
               20.545941`7.764271030150025, 21.044173`7.774676856885139}, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.19952623149688792`, 
              "TrainingMemory" -> 4115768, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.2549418978605806`, 0.0044876494868724085`]}, 
              "AccuracyHistory" -> {
                Around[0.3343009082353419, 0.01175789561209497]}, 
              "IterationHistory" -> {35}, 
              "TimeHistory" -> {{
                20.545941`7.764271030150025, 21.044173`7.774676856885139}}|>},
            "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00009312669593516617, "MeanCrossEntropy" -> 
             Around[2.2549418978605806`, 0.006346494767511621], "ModelMemory" -> 
             40008, "TrainingMemory" -> 4115768, "TrainingTime" -> 
             20.15214938118568|>, "Index" -> 13|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["LogisticRegression"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "Round", "Iteration", "Time", 
              "TrainingSize", "TrainingTime", "TrainingMemory", 
              "ExperimentCount", "MeanCrossEntropyHistory", "AccuracyHistory",
               "IterationHistory", "TimeHistory"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`AnyType, TypeSystem`AnyType}], TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 13], <||>], 
      "TrainingSizes" -> {15, 70, 300, 1500, 8000}, "MaxTrainingSize" -> 
      10000, "PreprocessorEvaluationTime" -> 0.00001353125, 
      "PreprocessorMemory" -> 70416, "InputDimension" -> 784, 
      "OutputDimension" -> 1, "BaselineLogProbability" -> -2.30016199459629, 
      "VariableBudget" -> True, 
      "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 15, "TimeBudgets" -> 2.4308766418318695`, 
          "ElapsedTimes" -> 7.765996000000001, "ExperimentCounts" -> 17|>, <|
         "TrainingSizes" -> 70, "TimeBudgets" -> 3.4726809169026684`, 
          "ElapsedTimes" -> 8.041316, "ExperimentCounts" -> 13|>, <|
         "TrainingSizes" -> 300, "TimeBudgets" -> 4.960972738432393, 
          "ElapsedTimes" -> 5.6766380000000005`, "ExperimentCounts" -> 9|>, <|
         "TrainingSizes" -> 1500, "TimeBudgets" -> 7.087103912046272, 
          "ElapsedTimes" -> 7.380749, "ExperimentCounts" -> 8|>, <|
         "TrainingSizes" -> 8000, "TimeBudgets" -> 10.124434160066077`, 
          "ElapsedTimes" -> 10.108565, "ExperimentCounts" -> 5|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 5], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|"Type" -> "Image", "Weight" -> 1, "Values" -> {
             Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcK1DlIGRwe0mFqkJQowyDg76jHoYMu9smaWXffj//4eoFrrUQQvu
vDcgxk5WMzSpffz618GMyxJsa9HkZge8AlG/p4iz1OJwqAsjYz02iUQvVmZG
833/sEg9lGBkZPR9hd3Aze0RkoySU+9hl/3/aq0lI+/EXzhk/3ZyM05AE+s9
D2Pt5kQLl3VSF+HsYH5UKzX1EexIxnPIUhdZD8GZkcyWKI45y7gHwvgzRZJR
+yGKkZfY3N4BqQ87kxi5sl+iOdOIUdLe3l6ekd1gO4a3vuRKAkNMMO0yhgwd
AQDlY7un
              "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           "ID" -> 4477200613334879949|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 43.018799, 
      "MaxTrainingMemory" -> 213901520, "DataMemory" -> 12400080, 
      "FunctionMemory" -> 383432, "LanguageVersion" -> {14., 0}, "Date" -> 
      DateObject[{2024, 4, 19, 11, 19, 44.367353`8.39963849621152}, "Instant",
         "Gregorian", 2.], "ProcessorCount" -> 4, "ProcessorType" -> "x86-64",
       "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.903681840320362*^9, 3.903682076854752*^9, 
  3.9036822343046427`*^9, 3.903682784702569*^9, 3.903682822394256*^9, 
  3.903683012116091*^9, 3.903683066116434*^9, 3.9036835676738853`*^9, 
  3.9225071844175863`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"4e46b0c7-86fd-4c47-8056-65e9b9727705"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"{", 
   RowBox[{"mnistCl1", ",", "mnistCl2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.903681527717891*^9, 3.903681537314216*^9}, 
   3.90368160055892*^9, 3.903682082349455*^9, {3.9036822383124743`*^9, 
   3.903682239119433*^9}, {3.903683583907846*^9, 3.903683587610843*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"3a8a5230-9679-4cab-847d-4eabc43bacd2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    StyleBox[
     FrameBox[GridBox[{
        {
         ItemBox[
          FrameBox[
           StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
            StripOnInput->False,
            FontSize->12],
           FrameMargins->{{10, 5}, {-4, 2}},
           FrameStyle->None,
           StripOnInput->False],
          Alignment->{Left, Bottom},
          Background->RGBColor[0.96, 0.96, 0.96],
          Frame->{{False, False}, {True, False}},
          FrameStyle->Opacity[0.1],
          ItemSize->{Automatic, 1},
          StripOnInput->False]},
        {
         ItemBox[
          TagBox[
           FrameBox[
            TagBox[GridBox[{
               {
                TemplateBox[{
                  TemplateBox[{5}, "Spacer1"], 
                  StyleBox[
                   InterpretationBox[
                    Cell["Data type"], 
                    TextCell["Data type"]], 
                   GrayLevel[0.4], StripOnInput -> False]},
                 "RowDefault"], 
                
                InterpretationBox[Cell[
                 "Image",ExpressionUUID->
                  "a07eabee-bbcb-4664-a48a-6b561defed7f"],
                 TextCell["Image"]]},
               {
                TemplateBox[{
                  TemplateBox[{5}, "Spacer1"], 
                  StyleBox[
                   InterpretationBox[
                    Cell["Number of classes"], 
                    TextCell["Number of classes"]], 
                   GrayLevel[0.4], StripOnInput -> False]},
                 "RowDefault"], 
                TagBox[
                 TooltipBox["10",
                  TagBox[
                   RowBox[{"{", 
                    
                    RowBox[{
                    "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", 
                    ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], 
                   Short[#, 1]& ]],
                 Annotation[#, 
                  Short[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1], "Tooltip"]& ]},
               {
                TemplateBox[{
                  TemplateBox[{5}, "Spacer1"], 
                  StyleBox[
                   InterpretationBox[
                    Cell["Method"], 
                    TextCell["Method"]], 
                   GrayLevel[0.4], StripOnInput -> False]},
                 "RowDefault"], 
                TagBox[
                 TooltipBox[
                  
                  InterpretationBox[Cell[
                   "NearestNeighbors",ExpressionUUID->
                    "0af97fa8-cd3f-4747-b233-1e1c3ee3718d"],
                   TextCell["NearestNeighbors"]],
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{"\"NeighborsNumber\"", "10"}, {
                    "\"DistributionSmoothing\"", "0.5`"}, {
                    "\"NearestMethod\"", "\"Scan\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                    FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                   "Verdana", StripOnInput -> False]],
                 Annotation[#, 
                  Style[
                   
                   Grid[{{"NeighborsNumber", 10}, {
                    "DistributionSmoothing", 0.5}, {"NearestMethod", "Scan"}},
                     Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                  "Tooltip"]& ]},
               {
                TemplateBox[{
                  TemplateBox[{5}, "Spacer1"], 
                  StyleBox[
                   InterpretationBox[
                    Cell["Single evaluation time"], 
                    TextCell["Single evaluation time"]], 
                   GrayLevel[0.4], StripOnInput -> False]},
                 "RowDefault"], 
                TemplateBox[{"76.8`", 
                  
                  RowBox[{
                   "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}], 
                  "milliseconds per example", 
                  FractionBox["\"Milliseconds\"", "\"Examples\""]},
                 "Quantity"]},
               {
                TemplateBox[{
                  TemplateBox[{5}, "Spacer1"], 
                  StyleBox[
                   InterpretationBox[
                    Cell["Batch evaluation speed"], 
                    TextCell["Batch evaluation speed"]], 
                   GrayLevel[0.4], StripOnInput -> False]},
                 "RowDefault"], 
                TemplateBox[{"763.`", 
                  
                  RowBox[{
                   "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                  FractionBox["\"Examples\"", "\"Seconds\""]},
                 "Quantity"]},
               {
                TemplateBox[{
                  TemplateBox[{5}, "Spacer1"], 
                  StyleBox[
                   InterpretationBox[
                    Cell["Model memory"], 
                    TextCell["Model memory"]], 
                   GrayLevel[0.4], StripOnInput -> False]},
                 "RowDefault"], 
                
                TemplateBox[{"62.9`", "\"MB\"", "megabytes", "\"Megabytes\""},
                 
                 "Quantity"]},
               {
                TemplateBox[{
                  TemplateBox[{5}, "Spacer1"], 
                  StyleBox[
                   InterpretationBox[
                    Cell["Training examples used"], 
                    TextCell["Training examples used"]], 
                   GrayLevel[0.4], StripOnInput -> False]},
                 "RowDefault"], 
                
                TemplateBox[{
                 "10000", "\"examples\"", "examples", "\"Examples\""},
                 "Quantity"]},
               {
                TemplateBox[{
                  TemplateBox[{5}, "Spacer1"], 
                  StyleBox[
                   InterpretationBox[
                    Cell["Training time"], 
                    TextCell["Training time"]], 
                   GrayLevel[0.4], StripOnInput -> False]},
                 "RowDefault"], 
                TemplateBox[{"1.75`", "\"s\"", "seconds", "\"Seconds\""},
                 "Quantity"]}
              },
              AutoDelete->False,
              ColumnsEqual->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              GridBoxDividers->{"Columns" -> {False, {
                   Opacity[0.15]}, False}},
              
              GridBoxItemSize->{
               "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], 
                  Offset[1.1199999999999999`], {
                   Offset[1.75]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[0.8]}, 
                  Offset[0.2]}}],
             "Grid"],
            FrameMargins->{{10, 10}, {10, 5}},
            FrameStyle->None,
            StripOnInput->False],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Alignment->Center,
          
          BaseStyle->{
           FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans",
             NumberMarks -> False, Deployed -> False},
          StripOnInput->False]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], 
           Offset[0.8], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Background->GrayLevel[1],
      FrameMargins->{{0, 0}, {0, 0}},
      FrameStyle->GrayLevel[0.85],
      RoundingRadius->5,
      StripOnInput->False],
     StripOnInput->False,
     LineBreakWithin->False],
    Deploy,
    DefaultBaseStyle->"Deploy"], ",", 
   InterpretationBox[
    TagBox[
     StyleBox[
      FrameBox[GridBox[{
         {
          ItemBox[
           FrameBox[
            StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
             StripOnInput->False,
             FontSize->12],
            FrameMargins->{{10, 5}, {-4, 2}},
            FrameStyle->None,
            StripOnInput->False],
           Alignment->{Left, Bottom},
           Background->RGBColor[0.96, 0.96, 0.96],
           Frame->{{False, False}, {True, False}},
           FrameStyle->Opacity[0.1],
           ItemSize->{Automatic, 1},
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            FrameBox[
             TagBox[GridBox[{
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Data type"], 
                    TextCell["Data type"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 
                 InterpretationBox[Cell[
                  "Image",ExpressionUUID->
                   "66e6213b-9040-415c-b4cb-952126c264f9"],
                  TextCell["Image"]]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Number of classes"], 
                    TextCell["Number of classes"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox["10",
                   TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", 
                    ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], 
                    Short[#, 1]& ]],
                  Annotation[#, 
                   Short[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Accuracy"], 
                    TextCell["Accuracy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"88.8", "1.0"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    88.8021723685552046845`3., 0.9960687856440402221`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Method"], 
                    TextCell["Method"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   
                   InterpretationBox[Cell[
                    "LogisticRegression",ExpressionUUID->
                    "76723e7f-0da8-45e3-b629-16973bd8a987"],
                    TextCell["LogisticRegression"]],
                   StyleBox[
                    TagBox[
                    
                    GridBox[{{"\"L1Regularization\"", "0"}, {
                    "\"L2Regularization\"", "0.1`"}, {
                    "\"OptimizationMethod\"", "\"LBFGS\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                    FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                    "Verdana", StripOnInput -> False]],
                  Annotation[#, 
                   Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.1}, {
                    "OptimizationMethod", "LBFGS"}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                   "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Single evaluation time"], 
                    TextCell["Single evaluation time"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"4.15`", 
                   
                   RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}], 
                   "milliseconds per example", 
                   FractionBox["\"Milliseconds\"", "\"Examples\""]},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Batch evaluation speed"], 
                    TextCell["Batch evaluation speed"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"8.13`", 
                   
                   RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}], 
                   "examples per millisecond", 
                   FractionBox["\"Examples\"", "\"Milliseconds\""]},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    InterpretationBox[
                    Cell["Loss"], 
                    TextCell["Loss"]], "\"Mean cross entropy\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.3788096807198895744`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0333000901958247775`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.3122095003282400194`3.", "\", \"", 
                    "0.4454098611115391293`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.3122095003282400194`3., ", ", 0.4454098611115391293`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Model memory"], 
                    TextCell["Model memory"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"387.`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Training examples used"], 
                    TextCell["Training examples used"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 
                 TemplateBox[{
                  "10000", "\"examples\"", "examples", "\"Examples\""},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Training time"], 
                    TextCell["Training time"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"43.`", "\"s\"", "seconds", "\"Seconds\""},
                  "Quantity"]},
                {
                 ItemBox[
                  
                  DynamicModuleBox[{
                   MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                   DynamicBox[ToBoxes[
                    Show[
                    Part[{
                    Graphics[{{{{}, 
                    Annotation[
                    GraphicsComplex[CompressedData["
1:eJxTTMoPSmViYGAQAWIQLe/haym2itWhqet7mt/Z+/aKjumdpf8EHCR5Dqyc
sa9z/42pCVFrLog5aIlFKwj8erxf9Wf0jT0Osg4fbEPW6jq/3b/21bQ7hT8V
HQpiWz2/MXzcDzPP5q9B8/SMh3DzdN2ZJLSr1tjDzEvuvLnj0c/7cPM0jqzR
+WjwEm5enQHTtzexb/YPdvcBAHwym8Y=
                    "], {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    GraphicsGroup[{
                    
                    Polygon[{{1, 2, 3, 4, 5, 10, 9, 8, 7, 
                    6}}]}]}, {}, {}, {}}, {{}, {}, {}, 
                    Annotation[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{1, 2, 3, 4, 5}]}, "Charting`Private`Tag#1"], 
                    Annotation[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{6, 7, 8, 9, 10}]}, "Charting`Private`Tag#2"]}}], <|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{2.5772346465280545`, 
                    8.987196820661973}, {-1.0627348777687438`, 
                    0.5440175592738465}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {2.5772346465280545`, 0}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, 
                    "Primitives" -> {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    GraphicsGroup[{{
                    
                    Polygon[{{2.70805020110221, 0.4969058995758716}, {
                    4.248495242049359, -0.0125705649188657}, {
                    5.703782474656201, -0.6242752677869181}, {
                    7.313220387090301, -0.9144504914601708}, {
                    8.987196820661973, -1.0627348777687438`}, {
                    8.987196820661973, -0.8864655308584728}, {
                    7.313220387090301, -0.7872243759685533}, {
                    5.703782474656201, -0.49962680865987447`}, {
                    4.248495242049359, 0.05561957042767882}, {
                    2.70805020110221, 
                    0.5440175592738465}}]}}]}, {}, {}, {}}, {{}, {}, {}, 
                    Annotation[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 0.4969058995758716}, {
                    4.248495242049359, -0.0125705649188657}, {
                    5.703782474656201, -0.6242752677869181}, {
                    7.313220387090301, -0.9144504914601708}, {
                    8.987196820661973, -1.0627348777687438`}}]}, 
                    "Charting`Private`Tag#1"], 
                    Annotation[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 0.5440175592738465}, {
                    4.248495242049359, 0.05561957042767882}, {
                    5.703782474656201, -0.49962680865987447`}, {
                    7.313220387090301, -0.7872243759685533}, {
                    8.987196820661973, -0.8864655308584728}}]}, 
                    "Charting`Private`Tag#2"]}}, "GCFlag" -> True|>, 
                    "Meta" -> <|"DefaultHighlight" -> {"Dynamic", None}, 
                    "Index" -> {}, "Function" -> ListPlot, "GroupHighlight" -> 
                    False|>|>, "DynamicHighlight"], {{}, {}}}}, 
                    
                    GraphicsComplex[{{2.70805020110221, 0.5207391423312073}, {
                    4.248495242049359, 0.02210562699704547}, {
                    5.703782474656201, -0.5600101394489826}, {
                    7.313220387090301, -0.848815486280954}, {
                    8.987196820661973, -0.9707213617140626}, {
                    2.70805020110221, 0.5207391423312073}, {4.248495242049359,
                     0.02210562699704547}, {
                    5.703782474656201, -0.5600101394489826}, {
                    7.313220387090301, -0.848815486280954}, {
                    8.987196820661973, -0.9707213617140626}, {
                    2.70805020110221, 0.5207391423312073}, {4.248495242049359,
                     0.02210562699704547}, {
                    5.703782474656201, -0.5600101394489826}, {
                    7.313220387090301, -0.848815486280954}, {
                    8.987196820661973, -0.9707213617140626}}, {{{}, {}, 
                    Annotation[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Line[{6, 7, 8, 9, 10}]}, "Charting`Private`Tag#1"]}, {
                    Annotation[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Point[{1, 2, 3, 4, 5, 11, 12, 13, 14, 15}]}, 
                    "Charting`Private`Tag#1"], {}}, {
                    Tooltip[{
                    Opacity[0.], 
                    Point[1]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.1}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[2]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {"L2Regularization", 1.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[3]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {"L2Regularization", 1.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[4]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 10.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[5]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.1}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[11]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.1}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[12]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {"L2Regularization", 1.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[13]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {"L2Regularization", 1.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[14]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 10.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[15]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.1}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}], {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.5062644236555687`, -1.0874366102385111`},
                     DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> GrayLevel[0.5, 0.2], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
                    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> 
                    Automatic, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.641700301399414, 
                    9.210340371976184}, {-1.0874366102385111`, 
                    0.5207391423312073}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}], 
                    Graphics[{{{{}, 
                    Annotation[
                    GraphicsComplex[CompressedData["
1:eJxTTMoPSmViYGAQAWIQLe/haym2itXhl2WeAiv3XXtFx/TO0n8CDlNMre/e
2PrU/sbUhKg1F8QcmCtfqMjueGmv+jP6xh4HWQdrmSNJm5te2699Ne1O4U9F
h61PJEqFJd/Yw8zjmCn+IfvuPbh5Ip5V7z/MeAY3j3NdW8mf+ldw877vnmV2
yfkN3DzFGXZzXPcgzBus7gMAVPmXIA==
                    "], {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    GraphicsGroup[{
                    
                    Polygon[{{1, 2, 3, 4, 5, 10, 9, 8, 7, 
                    6}}]}]}, {}, {}, {}}, {{}, {}, {}, 
                    Annotation[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{1, 2, 3, 4, 5}]}, "Charting`Private`Tag#1"], 
                    Annotation[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{6, 7, 8, 9, 10}]}, "Charting`Private`Tag#2"]}}], <|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{2.5772346465280545`, 
                    8.987196820661973}, {0.42912067554124717`, 
                    0.8979824115419924}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {2.5772346465280545`, 
                    0.42912067554124717`}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, 
                    "Primitives" -> {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    GraphicsGroup[{{
                    
                    Polygon[{{2.70805020110221, 0.45379760901496946`}, {
                    4.248495242049359, 0.6784481354640541}, {
                    5.703782474656201, 0.8037248345242748}, {
                    7.313220387090301, 0.859704678442433}, {8.987196820661973,
                     0.8780610358291115}, {8.987196820661973, 
                    0.8979824115419924}, {7.313220387090301, 
                    0.8832789484494005}, {5.703782474656201, 
                    0.8281233096981292}, {4.248495242049359, 
                    0.7061695744799033}, {2.70805020110221, 
                    0.48226450392248}}]}}]}, {}, {}, {}}, {{}, {}, {}, 
                    Annotation[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 0.45379760901496946`}, {
                    4.248495242049359, 0.6784481354640541}, {
                    5.703782474656201, 0.8037248345242748}, {
                    7.313220387090301, 0.859704678442433}, {8.987196820661973,
                     0.8780610358291115}}]}, "Charting`Private`Tag#1"], 
                    Annotation[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 0.48226450392248}, {
                    4.248495242049359, 0.7061695744799033}, {
                    5.703782474656201, 0.8281233096981292}, {
                    7.313220387090301, 0.8832789484494005}, {
                    8.987196820661973, 0.8979824115419924}}]}, 
                    "Charting`Private`Tag#2"]}}, "GCFlag" -> True|>, 
                    "Meta" -> <|"DefaultHighlight" -> {"Dynamic", None}, 
                    "Index" -> {}, "Function" -> ListPlot, "GroupHighlight" -> 
                    False|>|>, "DynamicHighlight"], {{}, {}}}}, 
                    
                    GraphicsComplex[{{2.70805020110221, 0.4680310564687247}, {
                    4.248495242049359, 0.6923088549719787}, {
                    5.703782474656201, 0.815924072111202}, {7.313220387090301,
                     0.8714918134459168}, {8.987196820661973, 
                    0.888021723685552}, {2.70805020110221, 
                    0.4680310564687247}, {4.248495242049359, 
                    0.6923088549719787}, {5.703782474656201, 
                    0.815924072111202}, {7.313220387090301, 
                    0.8714918134459168}, {8.987196820661973, 
                    0.888021723685552}, {2.70805020110221, 
                    0.4680310564687247}, {4.248495242049359, 
                    0.6923088549719787}, {5.703782474656201, 
                    0.815924072111202}, {7.313220387090301, 
                    0.8714918134459168}, {8.987196820661973, 
                    0.888021723685552}}, {{{}, {}, 
                    Annotation[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Line[{6, 7, 8, 9, 10}]}, "Charting`Private`Tag#1"]}, {
                    Annotation[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Point[{1, 2, 3, 4, 5, 11, 12, 13, 14, 15}]}, 
                    "Charting`Private`Tag#1"], {}}, {
                    Tooltip[{
                    Opacity[0.], 
                    Point[1]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.1}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[2]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {"L2Regularization", 1.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[3]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {"L2Regularization", 1.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[4]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 10.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[5]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.1}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[11]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.1}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[12]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {"L2Regularization", 1.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[13]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {"L2Regularization", 1.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[14]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 10.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[15]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.1}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}], {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.5062644236555687`, 0.4400326910197112}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> GrayLevel[0.5, 0.2], 
                    ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
                    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> 
                    Automatic, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.641700301399414, 9.210340371976184}, {
                    0.4400326910197112, 1.}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {
                    Scaled[0.05], 
                    Scaled[0.08090169943749476]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], Automatic}}], 
                    Graphics[{{{{{Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5304420314259355, -0.017638316552406885`, \
-0.3164726089645262], 
                    Opacity[0.2019830017413331]], {}, {
                    
                    Line[{{2.70805020110221, 1.1291676299259517`}, {
                    2.70805020110221, 1.3134835935488636`}}], 
                    
                    Line[{{2.70805020110221, 1.3134835935488636`}, {
                    2.70805020110221, 1.469056418306453}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5304420314259355, -0.017638316552406885`, \
-0.3164726089645262], 
                    Opacity[0.2019830017413331]], {}, {
                    
                    Line[{{4.248495242049359, 1.489880130740814}, {
                    4.248495242049359, 1.5671758322744105`}}], 
                    Line[{{4.248495242049359, 1.5671758322744105`}, {
                    4.248495242049359, 1.6389232067354644`}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5859807769910856, -0.08494734537523412, \
-0.29617364000403534`], 
                    Opacity[0.20326941715077126`]], {}, {
                    
                    Line[{{2.70805020110221, 0.9118552543831137}, {
                    2.70805020110221, 0.959978240457648}}], 
                    
                    Line[{{2.70805020110221, 0.959978240457648}, {
                    2.70805020110221, 1.0058913440425779`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5859807769910856, -0.08494734537523412, \
-0.29617364000403534`], 
                    Opacity[0.20326941715077126`]], {}, {
                    
                    Line[{{4.248495242049359, 1.1473327490134433`}, {
                    4.248495242049359, 1.231188490743311}}], 
                    
                    Line[{{4.248495242049359, 1.231188490743311}, {
                    4.248495242049359, 1.3085532455381654`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5859807769910856, -0.08494734537523412, \
-0.29617364000403534`], 
                    Opacity[0.20326941715077126`]], {}, {
                    
                    Line[{{5.703782474656201, 0.8625574194515301}, {
                    5.703782474656201, 1.0376031337549918`}}], 
                    
                    Line[{{5.703782474656201, 1.0376031337549918`}, {
                    5.703782474656201, 1.1865241801816617`}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5582114042085106, -0.0512928309638205, \
-0.3063231244842808], 
                    Opacity[0.20539035759926838`]], {}, {
                    
                    Line[{{4.248495242049359, 0.8104335957282073}, {
                    4.248495242049359, 0.8857010674776763}}], 
                    
                    Line[{{4.248495242049359, 0.8857010674776763}, {
                    4.248495242049359, 0.9556977522598236}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5526575296519955, -0.04456192808153778, \
-0.3083530213803299], 
                    Opacity[0.20888719723059385`]], {}, {
                    
                    Line[{{2.70805020110221, 0.8337121378388699}, {
                    2.70805020110221, 0.8340184617227907}}], 
                    
                    Line[{{2.70805020110221, 0.8340184617227907}, {
                    2.70805020110221, 0.8343246918011239}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5526575296519955, -0.04456192808153778, \
-0.3083530213803299], 
                    Opacity[0.20888719723059385`]], {}, {
                    
                    Line[{{4.248495242049359, 0.8333693165723511}, {
                    4.248495242049359, 0.834009428049681}}], 
                    
                    Line[{{4.248495242049359, 0.834009428049681}, {
                    4.248495242049359, 0.8346491300464067}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5526575296519955, -0.04456192808153778, \
-0.3083530213803299], 
                    Opacity[0.20888719723059385`]], {}, {
                    
                    Line[{{5.703782474656201, 0.8334321897305137}, {
                    5.703782474656201, 0.833934354785431}}], 
                    
                    Line[{{5.703782474656201, 0.833934354785431}, {
                    5.703782474656201, 0.8344362677971678}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5526575296519955, -0.04456192808153778, \
-0.3083530213803299], 
                    Opacity[0.20888719723059385`]], {}, {
                    
                    Line[{{7.313220387090301, 0.8332890293348316}, {
                    7.313220387090301, 0.8334158632912544}}], 
                    
                    Line[{{7.313220387090301, 0.8334158632912544}, {
                    7.313220387090301, 0.8335426811628647}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5359959059824505, -0.024369219434689608`, \
-0.3144427120684771], 
                    Opacity[0.21465251111098735`]], {}, {
                    
                    Line[{{2.70805020110221, 0.8333872728187989}, {
                    2.70805020110221, 0.8340298406215085}}], 
                    Line[{{2.70805020110221, 0.8340298406215085}, {
                    2.70805020110221, 0.8346719957959646}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5359959059824505, -0.024369219434689608`, \
-0.3144427120684771], 
                    Opacity[0.21465251111098735`]], {}, {
                    
                    Line[{{4.248495242049359, 0.8334334348940714}, {
                    4.248495242049359, 0.833907554312191}}], 
                    
                    Line[{{4.248495242049359, 0.833907554312191}, {
                    4.248495242049359, 0.83438144904761}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5359959059824505, -0.024369219434689608`, \
-0.3144427120684771], 
                    Opacity[0.21465251111098735`]], {}, {
                    
                    Line[{{5.703782474656201, 0.8323142586669471}, {
                    5.703782474656201, 0.8331996508565246}}], 
                    
                    Line[{{5.703782474656201, 0.8331996508565246}, {
                    5.703782474656201, 0.8340842598201837}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5359959059824505, -0.024369219434689608`, \
-0.3144427120684771], 
                    Opacity[0.21465251111098735`]], {}, {
                    
                    Line[{{7.313220387090301, 0.8288435615438366}, {
                    7.313220387090301, 0.8294990451815362}}], 
                    
                    Line[{{7.313220387090301, 0.8294990451815362}, {
                    7.313220387090301, 0.8301540994418709}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5804269024345706, -0.0782164424929514, \
-0.29820353690008444`], 
                    Opacity[0.22415790673785482`]], {}, {
                    
                    Line[{{4.248495242049359, 0.8103057559896505}, {
                    4.248495242049359, 0.8131242067072094}}], 
                    
                    Line[{{4.248495242049359, 0.8131242067072094}, {
                    4.248495242049359, 0.8159347360810091}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5471036550954805, -0.037831025199255054`, \
-0.310382918276379], 
                    Opacity[0.23982965469429118`]], {}, {
                    
                    Line[{{2.70805020110221, 0.8335686602356042}, {
                    2.70805020110221, 0.8340124431338418}}], 
                    
                    Line[{{2.70805020110221, 0.8340124431338418}, {
                    2.70805020110221, 0.8344560291761767}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5471036550954805, -0.037831025199255054`, \
-0.310382918276379], 
                    Opacity[0.23982965469429118`]], {}, {
                    
                    Line[{{4.248495242049359, 0.8321655404467104}, {
                    4.248495242049359, 0.8329293051494047}}], 
                    
                    Line[{{4.248495242049359, 0.8329293051494047}, {
                    4.248495242049359, 0.8336924869607413}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5471036550954805, -0.037831025199255054`, \
-0.310382918276379], 
                    Opacity[0.23982965469429118`]], {}, {
                    
                    Line[{{5.703782474656201, 0.8233704657784687}, {
                    5.703782474656201, 0.8250594905443778}}], 
                    
                    Line[{{5.703782474656201, 0.8250594905443778}, {
                    5.703782474656201, 0.8267456673152851}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5471036550954805, -0.037831025199255054`, \
-0.310382918276379], 
                    Opacity[0.23982965469429118`]], {}, {
                    
                    Line[{{7.313220387090301, 0.7772851575724055}, {
                    7.313220387090301, 0.7801989935163477}}], 
                    
                    Line[{{7.313220387090301, 0.7801989935163477}, {
                    7.313220387090301, 0.7831043636822974}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6081962752171457, -0.11187095690436501`, \
-0.28805405241983906`], 
                    Opacity[0.2656679988991191]], {}, {
                    
                    Line[{{2.70805020110221, 0.6170684427834717}, {
                    2.70805020110221, 0.6573714256425486}}], 
                    Line[{{2.70805020110221, 0.6573714256425486}, {
                    2.70805020110221, 0.6961128119022455}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6081962752171457, -0.11187095690436501`, \
-0.28805405241983906`], 
                    Opacity[0.2656679988991191]], {}, {
                    
                    Line[{{4.248495242049359, 0.5415793191357666}, {
                    4.248495242049359, 0.6100568657560295}}], 
                    
                    Line[{{4.248495242049359, 0.6100568657560295}, {
                    4.248495242049359, 0.6741442596903351}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5693191533215406, -0.06475463672838594, \
-0.30226333069218264`], 
                    Opacity[0.3082682265892902]], {}, {
                    
                    Line[{{4.248495242049359, 0.6178895391053646}, {
                    4.248495242049359, 0.6280529141670781}}], 
                    
                    Line[{{4.248495242049359, 0.6280529141670781}, {
                    4.248495242049359, 0.6381140334288513}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5693191533215406, -0.06475463672838594, \
-0.30226333069218264`], 
                    Opacity[0.3082682265892902]], {}, {
                    
                    Line[{{5.703782474656201, 0.22845480571946558`}, {
                    5.703782474656201, 0.23906071176938395`}}], 
                    
                    Line[{{5.703782474656201, 0.23906071176938395`}, {
                    5.703782474656201, 0.24955531204237616`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5693191533215406, -0.06475463672838594, \
-0.30226333069218264`], 
                    Opacity[0.3082682265892902]], {}, {
                    
                    Line[{{7.313220387090301, -0.33678883637782886`}, {
                    7.313220387090301, -0.32040566818779387`}}], 
                    
                    Line[{{7.313220387090301, -0.32040566818779387`}, {
                    7.313220387090301, -0.3042865874206779}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5693191533215406, -0.06475463672838594, \
-0.30226333069218264`], 
                    Opacity[0.3082682265892902]], {}, {
                    
                    Line[{{8.987196820661973, -0.8145038333052763}, {
                    8.987196820661973, -0.7606903005249366}}], 
                    
                    Line[{{8.987196820661973, -0.7606903005249366}, {
                    8.987196820661973, -0.7096253808173224}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5748730278780556, -0.07148553961066867, \
-0.30023343379613354`], 
                    Opacity[0.3785041281187439]], {}, {
                    
                    Line[{{2.70805020110221, 0.5450953199286307}, {
                    2.70805020110221, 0.5613805508635206}}], 
                    
                    Line[{{2.70805020110221, 0.5613805508635206}, {
                    2.70805020110221, 0.577404817244818}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5748730278780556, -0.07148553961066867, \
-0.30023343379613354`], 
                    Opacity[0.3785041281187439]], {}, {
                    
                    Line[{{4.248495242049359, 0.22319186269054847`}, {
                    4.248495242049359, 0.2793540211358094}}], 
                    
                    Line[{{4.248495242049359, 0.2793540211358094}, {
                    4.248495242049359, 0.3325290139110733}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5748730278780556, -0.07148553961066867, \
-0.30023343379613354`], 
                    Opacity[0.3785041281187439]], {}, {
                    
                    Line[{{5.703782474656201, 0.28961902110218757`}, {
                    5.703782474656201, 0.4073422275907879}}], 
                    
                    Line[{{5.703782474656201, 0.4073422275907879}, {
                    5.703782474656201, 0.512654877336993}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5748730278780556, -0.07148553961066867, \
-0.30023343379613354`], 
                    Opacity[0.3785041281187439]], {}, {
                    
                    Line[{{7.313220387090301, -0.874054552459852}, {
                    7.313220387090301, -0.8294099686324475}}], 
                    Line[{{7.313220387090301, -0.8294099686324475}, {
                    7.313220387090301, -0.7866736340508115}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5748730278780556, -0.07148553961066867, \
-0.30023343379613354`], 
                    Opacity[0.3785041281187439]], {}, {
                    
                    Line[{{8.987196820661973, -1.0045877405066954`}, {
                    8.987196820661973, -0.9061177521325627}}], 
                    
                    Line[{{8.987196820661973, -0.9061177521325627}, {
                    8.987196820661973, -0.8164808069418059}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5415497805389655, -0.03110012231697233, \
-0.312412815172428], 
                    Opacity[0.4943035529371539]], {}, {
                    
                    Line[{{2.70805020110221, 0.51311981352517}, {
                    2.70805020110221, 0.5258809545100349}}], 
                    
                    Line[{{2.70805020110221, 0.5258809545100349}, {
                    2.70805020110221, 0.53848129857326}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5415497805389655, -0.03110012231697233, \
-0.312412815172428], 
                    Opacity[0.4943035529371539]], {}, {
                    
                    Line[{{4.248495242049359, -0.0125705649188657}, {
                    4.248495242049359, 0.02210562699704547}}], 
                    
                    Line[{{4.248495242049359, 0.02210562699704547}, {
                    4.248495242049359, 0.05561957042767882}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5415497805389655, -0.03110012231697233, \
-0.312412815172428], 
                    Opacity[0.4943035529371539]], {}, {
                    
                    Line[{{5.703782474656201, -0.6242752677869181}, {
                    5.703782474656201, -0.5600101394489826}}], 
                    
                    Line[{{5.703782474656201, -0.5600101394489826}, {
                    5.703782474656201, -0.49962680865987447`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5415497805389655, -0.03110012231697233, \
-0.312412815172428], 
                    Opacity[0.4943035529371539]], {}, {
                    
                    Line[{{7.313220387090301, -0.9136368891757564}, {
                    7.313220387090301, -0.7589043290459974}}], 
                    
                    Line[{{7.313220387090301, -0.7589043290459974}, {
                    7.313220387090301, -0.6249367482831123}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5415497805389655, -0.03110012231697233, \
-0.312412815172428], 
                    Opacity[0.4943035529371539]], {}, {
                    
                    Line[{{8.987196820661973, -1.006381368125478}, {
                    8.987196820661973, -0.9098559926227696}}], 
                    
                    Line[{{8.987196820661973, -0.9098559926227696}, {
                    8.987196820661973, -0.8218330793692581}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5637652787650256, -0.05802373384610322, \
-0.30429322758823174`], 
                    Opacity[0.6852245277701068]], {}, {
                    
                    Line[{{2.70805020110221, 0.614917974323384}, {
                    2.70805020110221, 0.6238296020799874}}], 
                    
                    Line[{{2.70805020110221, 0.6238296020799874}, {
                    2.70805020110221, 0.6326625136998802}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5637652787650256, -0.05802373384610322, \
-0.30429322758823174`], 
                    Opacity[0.6852245277701068]], {}, {
                    
                    Line[{{4.248495242049359, 0.1952017174838213}, {
                    4.248495242049359, 0.2247206113998299}}], 
                    
                    Line[{{4.248495242049359, 0.2247206113998299}, {
                    4.248495242049359, 0.25339306645849335`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5637652787650256, -0.05802373384610322, \
-0.30429322758823174`], 
                    Opacity[0.6852245277701068]], {}, {
                    
                    Line[{{5.703782474656201, -0.3864806125077421}, {
                    5.703782474656201, -0.29128034264002883`}}], 
                    Line[{{5.703782474656201, -0.29128034264002883`}, {
                    5.703782474656201, -0.2043605664930698}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5637652787650256, -0.05802373384610322, \
-0.30429322758823174`], 
                    Opacity[0.6852245277701068]], {}, {
                    
                    Line[{{7.313220387090301, -0.9144504914601708}, {
                    7.313220387090301, -0.848815486280954}}], 
                    
                    Line[{{7.313220387090301, -0.848815486280954}, {
                    7.313220387090301, -0.7872243759685533}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5637652787650256, -0.05802373384610322, \
-0.30429322758823174`], 
                    Opacity[0.6852245277701068]], {}, {
                    
                    Line[{{8.987196820661973, -0.9958193513409725}, {
                    8.987196820661973, -0.9139190232439058}}], 
                    
                    Line[{{8.987196820661973, -0.9139190232439058}, {
                    8.987196820661973, -0.8382215469233064}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5970885261041157, -0.09840915113979956, \
-0.2921138462119372], 
                    Opacity[1.]], {}, {
                    
                    Line[{{2.70805020110221, 0.4969058995758716}, {
                    2.70805020110221, 0.5207391423312073}}], 
                    
                    Line[{{2.70805020110221, 0.5207391423312073}, {
                    2.70805020110221, 0.5440175592738465}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5970885261041157, -0.09840915113979956, \
-0.2921138462119372], 
                    Opacity[1.]], {}, {
                    
                    Line[{{4.248495242049359, -0.006366609903868121}, {
                    4.248495242049359, 0.046324529384153094`}}], 
                    
                    Line[{{4.248495242049359, 0.046324529384153094`}, {
                    4.248495242049359, 0.09637772887601748}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5970885261041157, -0.09840915113979956, \
-0.2921138462119372], 
                    Opacity[1.]], {}, {
                    
                    Line[{{5.703782474656201, -0.2296091603067133}, {
                    5.703782474656201, -0.04270135120971892}}], 
                    
                    Line[{{5.703782474656201, -0.04270135120971892}, {
                    5.703782474656201, 0.11471239296142789`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5970885261041157, -0.09840915113979956, \
-0.2921138462119372], 
                    Opacity[1.]], {}, {
                    
                    Line[{{7.313220387090301, -0.8386066278908199}, {
                    7.313220387090301, -0.7978000821580232}}], 
                    
                    Line[{{7.313220387090301, -0.7978000821580232}, {
                    7.313220387090301, -0.7585936296357705}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.5970885261041157, -0.09840915113979956, \
-0.2921138462119372], 
                    Opacity[1.]], {}, {
                    
                    Line[{{8.987196820661973, -1.0627348777687438`}, {
                    8.987196820661973, -0.9707213617140626}}], 
                    
                    Line[{{8.987196820661973, -0.9707213617140626}, {
                    8.987196820661973, -0.8864655308584728}}]}}}}}, {{{}, {}, \
{}, {}, {}, {}, {}, {}, {}, 
                    Annotation[
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.6081962752171457, -0.11187095690436501`, \
-0.28805405241983906`], 
                    Opacity[0.2656679988991191]], 
                    
                    Line[{{2.730211945831398, 0.6566907306678456}, {
                    4.248495242049359, 0.6100568657560295}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.001}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#8"], 
                    Annotation[
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5693191533215406, -0.06475463672838594, \
-0.30226333069218264`], 
                    Opacity[0.3082682265892902]], 
                    
                    Line[{{4.248495242049359, 0.6280529141670781}, {
                    5.703782474656201, 0.23906071176938395`}, {
                    7.313220387090301, -0.32040566818779387`}, {
                    8.987196820661973, -0.7606903005249366}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 100.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#9"], 
                    Annotation[
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5748730278780556, -0.07148553961066867, \
-0.30023343379613354`], 
                    Opacity[0.3785041281187439]], 
                    
                    Line[{{2.70805020110221, 0.5613805508635206}, {
                    4.248495242049359, 0.2793540211358094}, {
                    5.703782474656201, 0.4073422275907879}, {
                    7.313220387090301, -0.8294099686324475}, {
                    8.987196820661973, -0.9061177521325627}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.01}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#10"], 
                    Annotation[
                    Tooltip[{
                    Hue[0.030679774997896203`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5415497805389655, -0.03110012231697233, \
-0.312412815172428], 
                    Opacity[0.4943035529371539]], 
                    
                    Line[{{2.70805020110221, 0.5258809545100349}, {
                    4.248495242049359, 0.02210562699704547}, {
                    5.703782474656201, -0.5600101394489826}, {
                    7.313220387090301, -0.7589043290459974}, {
                    8.987196820661973, -0.9098559926227696}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {"L2Regularization", 1.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#11"], 
                    Annotation[
                    Tooltip[{
                    Hue[0.266747752497686, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5637652787650256, -0.05802373384610322, \
-0.30429322758823174`], 
                    Opacity[0.6852245277701068]], 
                    
                    Line[{{2.70805020110221, 0.6238296020799874}, {
                    4.248495242049359, 0.2247206113998299}, {
                    5.703782474656201, -0.29128034264002883`}, {
                    7.313220387090301, -0.848815486280954}, {
                    8.987196820661973, -0.9139190232439058}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 10.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#12"], 
                    Annotation[
                    Tooltip[{
                    Hue[0.5028157299974758, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5970885261041157, -0.09840915113979956, \
-0.2921138462119372], 
                    Opacity[1.]], 
                    
                    Line[{{2.70805020110221, 0.5207391423312073}, {
                    4.248495242049359, 0.046324529384153094`}, {
                    5.703782474656201, -0.04270135120971892}, {
                    7.313220387090301, -0.7978000821580232}, {
                    8.987196820661973, -0.9707213617140626}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.1}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#13"]}, {
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5304420314259355, -0.017638316552406885`, \
-0.3164726089645262], 
                    Opacity[0.2019830017413331]], {}, {}, 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 1.3134835935488636`}}, {{
                    4.248495242049359, 1.5671758322744105`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 1.*^-6}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#1"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5859807769910856, -0.08494734537523412, \
-0.29617364000403534`], 
                    Opacity[0.20326941715077126`]], {}, {}, {}, 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.959978240457648}}, {{
                    4.248495242049359, 1.231188490743311}}, {{
                    5.703782474656201, 1.0376031337549918`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.00001}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#2"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5582114042085106, -0.0512928309638205, \
-0.3063231244842808], 
                    Opacity[0.20539035759926838`]], {}, {}, 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.248495242049359, 0.8857010674776763}}, {{
                    4.248495242049359, 0.8857010674776763}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.0001}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#3"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5526575296519955, -0.04456192808153778, \
-0.3083530213803299], 
                    Opacity[0.20888719723059385`]], {}, {}, {}, {}, 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.8340184617227907}}, {{
                    4.248495242049359, 0.834009428049681}}, {{
                    5.703782474656201, 0.833934354785431}}, {{
                    7.313220387090301, 0.8334158632912544}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 1.*^6}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#4"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5359959059824505, -0.024369219434689608`, \
-0.3144427120684771], 
                    Opacity[0.21465251111098735`]], {}, {}, {}, {}, 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.8340298406215085}}, {{
                    4.248495242049359, 0.833907554312191}}, {{
                    5.703782474656201, 0.8331996508565246}}, {{
                    7.313220387090301, 0.8294990451815362}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 100000.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#5"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5804269024345706, -0.0782164424929514, \
-0.29820353690008444`], 
                    Opacity[0.22415790673785482`]], {}, {}, 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.248495242049359, 0.8131242067072094}}, {{
                    4.248495242049359, 0.8131242067072094}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 1000.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#6"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5471036550954805, -0.037831025199255054`, \
-0.310382918276379], 
                    Opacity[0.23982965469429118`]], {}, {}, {}, {}, 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.8340124431338418}}, {{
                    4.248495242049359, 0.8329293051494047}}, {{
                    5.703782474656201, 0.8250594905443778}}, {{
                    7.313220387090301, 0.7801989935163477}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 10000.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#7"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.6081962752171457, -0.11187095690436501`, \
-0.28805405241983906`], 
                    Opacity[0.2656679988991191]], {}, 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.248495242049359, 0.6100568657560295}}, {{
                    2.70805020110221, 0.6573714256425486}}, {{
                    4.248495242049359, 0.6100568657560295}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.001}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#8"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5693191533215406, -0.06475463672838594, \
-0.30226333069218264`], 
                    Opacity[0.3082682265892902]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.248495242049359, 0.6280529141670781}}, {{
                    5.703782474656201, 0.23906071176938395`}}, {{
                    7.313220387090301, -0.32040566818779387`}}, {{
                    8.987196820661973, -0.7606903005249366}}, {{
                    4.248495242049359, 0.6280529141670781}}, {{
                    5.703782474656201, 0.23906071176938395`}}, {{
                    7.313220387090301, -0.32040566818779387`}}, {{
                    8.987196820661973, -0.7606903005249366}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 100.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#9"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5748730278780556, -0.07148553961066867, \
-0.30023343379613354`], 
                    Opacity[0.3785041281187439]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.5613805508635206}}, {{
                    4.248495242049359, 0.2793540211358094}}, {{
                    5.703782474656201, 0.4073422275907879}}, {{
                    7.313220387090301, -0.8294099686324475}}, {{
                    8.987196820661973, -0.9061177521325627}}, {{
                    2.70805020110221, 0.5613805508635206}}, {{
                    4.248495242049359, 0.2793540211358094}}, {{
                    5.703782474656201, 0.4073422275907879}}, {{
                    7.313220387090301, -0.8294099686324475}}, {{
                    8.987196820661973, -0.9061177521325627}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.01}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#10"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5415497805389655, -0.03110012231697233, \
-0.312412815172428], 
                    Opacity[0.4943035529371539]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.5258809545100349}}, {{
                    4.248495242049359, 0.02210562699704547}}, {{
                    5.703782474656201, -0.5600101394489826}}, {{
                    7.313220387090301, -0.7589043290459974}}, {{
                    8.987196820661973, -0.9098559926227696}}, {{
                    2.70805020110221, 0.5258809545100349}}, {{
                    4.248495242049359, 0.02210562699704547}}, {{
                    5.703782474656201, -0.5600101394489826}}, {{
                    7.313220387090301, -0.7589043290459974}}, {{
                    8.987196820661973, -0.9098559926227696}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {"L2Regularization", 1.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#11"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5637652787650256, -0.05802373384610322, \
-0.30429322758823174`], 
                    Opacity[0.6852245277701068]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.6238296020799874}}, {{
                    4.248495242049359, 0.2247206113998299}}, {{
                    5.703782474656201, -0.29128034264002883`}}, {{
                    7.313220387090301, -0.848815486280954}}, {{
                    8.987196820661973, -0.9139190232439058}}, {{
                    2.70805020110221, 0.6238296020799874}}, {{
                    4.248495242049359, 0.2247206113998299}}, {{
                    5.703782474656201, -0.29128034264002883`}}, {{
                    7.313220387090301, -0.848815486280954}}, {{
                    8.987196820661973, -0.9139190232439058}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 10.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#12"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5970885261041157, -0.09840915113979956, \
-0.2921138462119372], 
                    Opacity[1.]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.5207391423312073}}, {{
                    4.248495242049359, 0.046324529384153094`}}, {{
                    5.703782474656201, -0.04270135120971892}}, {{
                    7.313220387090301, -0.7978000821580232}}, {{
                    8.987196820661973, -0.9707213617140626}}, {{
                    2.70805020110221, 0.5207391423312073}}, {{
                    4.248495242049359, 0.046324529384153094`}}, {{
                    5.703782474656201, -0.04270135120971892}}, {{
                    7.313220387090301, -0.7978000821580232}}, {{
                    8.987196820661973, -0.9707213617140626}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.1}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#13"]}, {
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5304420314259355, -0.017638316552406885`, \
-0.3164726089645262], 
                    Opacity[0.2019830017413331]], {
                    Point[{2.70805020110221, 1.3134835935488636`}], 
                    Point[{4.248495242049359, 1.5671758322744105`}]}}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 1.*^-6}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#1"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5859807769910856, -0.08494734537523412, \
-0.29617364000403534`], 
                    Opacity[0.20326941715077126`]], {
                    Point[{2.70805020110221, 0.959978240457648}], 
                    Point[{4.248495242049359, 1.231188490743311}], 
                    Point[{5.703782474656201, 1.0376031337549918`}]}}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.00001}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#2"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5582114042085106, -0.0512928309638205, \
-0.3063231244842808], 
                    Opacity[0.20539035759926838`]], {
                    Point[{4.248495242049359, 0.8857010674776763}], 
                    Point[{4.248495242049359, 0.8857010674776763}]}}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.0001}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#3"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5526575296519955, -0.04456192808153778, \
-0.3083530213803299], 
                    Opacity[0.20888719723059385`]], {
                    Point[{2.70805020110221, 0.8340184617227907}], 
                    Point[{4.248495242049359, 0.834009428049681}], 
                    Point[{5.703782474656201, 0.833934354785431}], 
                    Point[{7.313220387090301, 0.8334158632912544}]}}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 1.*^6}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#4"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5359959059824505, -0.024369219434689608`, \
-0.3144427120684771], 
                    Opacity[0.21465251111098735`]], {
                    Point[{2.70805020110221, 0.8340298406215085}], 
                    Point[{4.248495242049359, 0.833907554312191}], 
                    Point[{5.703782474656201, 0.8331996508565246}], 
                    Point[{7.313220387090301, 0.8294990451815362}]}}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 100000.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#5"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5804269024345706, -0.0782164424929514, \
-0.29820353690008444`], 
                    Opacity[0.22415790673785482`]], {
                    Point[{4.248495242049359, 0.8131242067072094}], 
                    Point[{4.248495242049359, 0.8131242067072094}]}}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 1000.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#6"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5471036550954805, -0.037831025199255054`, \
-0.310382918276379], 
                    Opacity[0.23982965469429118`]], {
                    Point[{2.70805020110221, 0.8340124431338418}], 
                    Point[{4.248495242049359, 0.8329293051494047}], 
                    Point[{5.703782474656201, 0.8250594905443778}], 
                    Point[{7.313220387090301, 0.7801989935163477}]}}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 10000.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#7"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.6081962752171457, -0.11187095690436501`, \
-0.28805405241983906`], 
                    Opacity[0.2656679988991191]], {
                    Point[{4.248495242049359, 0.6100568657560295}], 
                    Point[{2.70805020110221, 0.6573714256425486}], 
                    Point[{4.248495242049359, 0.6100568657560295}]}}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.001}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#8"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5693191533215406, -0.06475463672838594, \
-0.30226333069218264`], 
                    Opacity[0.3082682265892902]], {
                    Point[{4.248495242049359, 0.6280529141670781}], 
                    Point[{5.703782474656201, 0.23906071176938395`}], 
                    Point[{7.313220387090301, -0.32040566818779387`}], 
                    Point[{8.987196820661973, -0.7606903005249366}], 
                    Point[{4.248495242049359, 0.6280529141670781}], 
                    Point[{5.703782474656201, 0.23906071176938395`}], 
                    Point[{7.313220387090301, -0.32040566818779387`}], 
                    Point[{8.987196820661973, -0.7606903005249366}]}}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 100.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#9"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5748730278780556, -0.07148553961066867, \
-0.30023343379613354`], 
                    Opacity[0.3785041281187439]], {
                    Point[{2.70805020110221, 0.5613805508635206}], 
                    Point[{4.248495242049359, 0.2793540211358094}], 
                    Point[{5.703782474656201, 0.4073422275907879}], 
                    Point[{7.313220387090301, -0.8294099686324475}], 
                    Point[{8.987196820661973, -0.9061177521325627}], 
                    Point[{2.70805020110221, 0.5613805508635206}], 
                    Point[{4.248495242049359, 0.2793540211358094}], 
                    Point[{5.703782474656201, 0.4073422275907879}], 
                    Point[{7.313220387090301, -0.8294099686324475}], 
                    Point[{8.987196820661973, -0.9061177521325627}]}}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.01}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#10"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5415497805389655, -0.03110012231697233, \
-0.312412815172428], 
                    Opacity[0.4943035529371539]], {
                    Point[{2.70805020110221, 0.5258809545100349}], 
                    Point[{4.248495242049359, 0.02210562699704547}], 
                    Point[{5.703782474656201, -0.5600101394489826}], 
                    Point[{7.313220387090301, -0.7589043290459974}], 
                    Point[{8.987196820661973, -0.9098559926227696}], 
                    Point[{2.70805020110221, 0.5258809545100349}], 
                    Point[{4.248495242049359, 0.02210562699704547}], 
                    Point[{5.703782474656201, -0.5600101394489826}], 
                    Point[{7.313220387090301, -0.7589043290459974}], 
                    Point[{8.987196820661973, -0.9098559926227696}]}}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {"L2Regularization", 1.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#11"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5637652787650256, -0.05802373384610322, \
-0.30429322758823174`], 
                    Opacity[0.6852245277701068]], {
                    Point[{2.70805020110221, 0.6238296020799874}], 
                    Point[{4.248495242049359, 0.2247206113998299}], 
                    Point[{5.703782474656201, -0.29128034264002883`}], 
                    Point[{7.313220387090301, -0.848815486280954}], 
                    Point[{8.987196820661973, -0.9139190232439058}], 
                    Point[{2.70805020110221, 0.6238296020799874}], 
                    Point[{4.248495242049359, 0.2247206113998299}], 
                    Point[{5.703782474656201, -0.29128034264002883`}], 
                    Point[{7.313220387090301, -0.848815486280954}], 
                    Point[{8.987196820661973, -0.9139190232439058}]}}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 10.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], "Charting`Private`Tag#12"], 
                    Annotation[
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    LABColor[
                    0.5970885261041157, -0.09840915113979956, \
-0.2921138462119372], 
                    Opacity[1.]], {
                    Point[{2.70805020110221, 0.5207391423312073}], 
                    Point[{4.248495242049359, 0.046324529384153094`}], 
                    Point[{5.703782474656201, -0.04270135120971892}], 
                    Point[{7.313220387090301, -0.7978000821580232}], 
                    Point[{8.987196820661973, -0.9707213617140626}], 
                    Point[{2.70805020110221, 0.5207391423312073}], 
                    Point[{4.248495242049359, 0.046324529384153094`}], 
                    Point[{5.703782474656201, -0.04270135120971892}], 
                    Point[{7.313220387090301, -0.7978000821580232}], 
                    Point[{8.987196820661973, -0.9707213617140626}]}}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.1}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    "Charting`Private`Tag#13"], {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.5062644236555687`, -1.0760818773718865`},
                     DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> GrayLevel[0.5, 0.2], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
                    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> 
                    Automatic, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.641700301399414, 
                    9.210340371976184}, {-1.076081877371889, 
                    0.6566907306678456}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {0, 0}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, -1], 
                    Appearance -> "Frameless"], 
                    Part[{
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], "Accuracy", 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, 
                    Plus[1]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                    ImageSizeCache->{330., {122., 126.79377532817608`}}],
                   DynamicModuleValues:>{}],
                  Alignment->Center,
                  StripOnInput->False], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               ColumnsEqual->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
               
               GridBoxItemSize->{
                "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], 
                   Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}],
              "Grid"],
             FrameMargins->{{10, 10}, {10, 5}},
             FrameStyle->None,
             StripOnInput->False],
            Deploy,
            DefaultBaseStyle->"Deploy"],
           Alignment->Center,
           
           BaseStyle->{
            FontWeight -> "Light", FontSize -> 11, FontFamily -> 
             "DejaVu Sans", NumberMarks -> False, Deployed -> False},
           StripOnInput->False]}
        },
        DefaultBaseStyle->"Column",
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], 
            Offset[0.8], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Background->GrayLevel[1],
       FrameMargins->{{0, 0}, {0, 0}},
       FrameStyle->GrayLevel[0.85],
       RoundingRadius->5,
       StripOnInput->False],
      StripOnInput->False,
      LineBreakWithin->False],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    MachineLearning`MLInformationObject[
     ClassifierFunction[<|
      "ExampleNumber" -> 10000, "ClassNumber" -> 10, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Image"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Image"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|"f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 10000, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|"f1" -> <|"Type" -> "Image"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "FeatureChangeType", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 977354774366526235|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 6317144204941985744|>], 
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                    "Index" -> {<|Image[CompressedData["
1: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
fznjnwSCFoo=
                    "], "Real32", ColorSpace -> Automatic, ImageSize -> 
                    Automatic, Interleaving -> None, Magnification -> 
                    Automatic] -> 1|>}, "MissingCode" -> Indeterminate, 
                    "Version" -> {14., 0}, "ID" -> 222300306761183149, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1, 
                    "SetSize" -> {1}|>|>, "Boundaries" -> {{-0.5, 0.5}}, 
                    "Version" -> {14., 0}, "ID" -> 8969352828768388750, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 
                    1|>|>|>]}, "Invertibility" -> "Approximate", 
                    "StructurePreserving" -> True, "Missing" -> "Allowed"|>], 
                   "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                   Automatic, 
                   "Model" -> <|
                    "RotationMatrix" -> {{1.}}, 
                    "Precisions" -> {12.084907927485615`}, "NoisePrecision" -> 
                    None, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {-0.004572706931210259}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 3267205846710161426|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 1, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {-0.004572706931210271}, 
                    "StandardDeviation" -> {0.28765923888569916`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    4887432564448952023|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {-0.004572706931210271}, 
                    "StandardDeviation" -> {0.28765923888569916`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    4887432564448952023|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 1, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1, "Values" -> {
                    Image[CompressedData["
1:eJztlnlQ1OcdhyEoCIqoICBeYAQBWZEjGAT24RI1yinXAIorh4DLtbvsLiy7
qyV2lGisR8WgRqwVj+KJEiN41WOUGjooIiKaqDUFr3rEE4ldtJ3WiJlJ+m//
+Pxm3nln3uf3vT7vazcnNyr9Az09PWkf3SdKpAiQSESFMwy7F2kisYe7uHtz
2L+kpzef/+ttiWK1lNWr8Uf7er3X+s362k4VNVeLWDhZTfRu7a86uyRbyx/z
1JwuUJOUrsahvoj4MAULbGQMPZ+PSZSUl4dlqCkg2UrOyNsKXLdryL/9y3nX
mrW41KrpUBQRWSJnhmcunUOSsWoNJ9wnlPkvwnBzCOfmykQsVCLED5LojJuL
wx/kfL++mNIJWgzuvZ+r2vSfvRX6WoIeKMnakk91wTyc9dNInTiLqs9CWHLe
E8sGF1z8x+Gw1IMr7TA0JZiu1GnoH4xn4fIMnjwuoLqXGpcGDb3bfj7W779U
M/VrOSrHPDKzslDLZmIxOIZ1DQFETR7PxUgHNi2zI7x+BHV7bHgRY8+hLd68
ipjKyeWzcKsRcedWFiVGUqRrFYT8oGLKE3WPrEqJlvMPFdjulrDWSYx7USKb
bk8nOQNaB9uStWcQIUfMccwxo0lsiPqJCXFxVphVjOLkOn+aXsazfXwSwaJ0
THxzoSWf9lIVHgt75k0x1lKUKifcPZtvH4kIapxB5keBhAaOJXSxOTYbTDAQ
GGP+RS9yftRDtM2EZ2v70Wd4XzqaHWlOnMzRwnieZaQjCMjFsl8BlZ+o2OGj
eYdVflZLzcNitn2oRGmfzaJoEY6JYZyQTOTgPTtKhwxja+/BbBZak5dqit9j
c5zKrchcZErQ9gEI7tsTudOPVb+PoSF/Di9q8/E3KCTFtfgdVniTlk91c5Nz
VEl7qAzBuBw2F8+mJjeMgPsTMLR3JqnZGZ92V9ZEuHI215bThxxY5D8S0ZH+
bAiz5G/Px+Ap9aPrtK7WJ2YjOp2D3s4CHGqUb7HKrmpZOkiDSqXC2kuFubuC
huNiLNNnMaksHLWfB44qD1xWepMcI2RXiyd7JI7Er7al0cwGDz1TOkqGs2Kx
OybXJ7FOGofxxRSa9uexcZKcu+mqt3jGX2lIUKp5GKchQKDlu6pC2s3EHFMl
sGtuCKa9BGxtFKAIcyeltxcJP47jvsyWs8YWpGzvS0CMAc2OdjTiR6V1LFsz
k6m8kf26N0efkpP6k3x2e0c3b5/hmzkJvq/ggG8Gt0JiWXc9iNiPxjP8CwFS
Myc6tWM5tWUU+39jRmOgHscXdgorzExZd+lDWjyDkS6PpSUynWKd35QvU9Jk
pHqnfoZnNK+Z/9bnx2Sc/VM61XUzOL4DKnq7ED7MCfNN9nxrNBpnz760Ot8Q
DnRsFuY+vS50fmpAbKM9CoMQWlviqT+SwZqNSiwmF9FoVUhXe9FbvFX3tQwb
8yan3ap6KWPQ/jQuL47EItGXch8XTj13wWqFAyEXrEjNNUTvQLOwLLFRKB99
R3jF25ikHfZMVAayelU0X+ly4+kpY/UGOfbVBZSdebc/a29oGXdIi1+kltCt
Cio3pzG1PIro9UImvHClT4QbR4e54J1tS3COCVXZN4TRlVeFN/e+Eu5qMMfs
oQuDygKpS46grH02Gb8T0z9ARlyoHLNV7/ezy881cEdK5fIUluyLwLogmMvb
vPB4MhZXo7F0LRBQWm1GxAU9Nmx9JaxLHoDJzhEsCPJGWR/IyAOR+ExKInXj
PHI/lWCaqeTA4555Tte0hB0pZlFtDpsKZyIRTiNtuC/9s7y5G+XNisu+KOZ4
IhpgzYS9hnTK+/JNX0s6x40ico03TTlTWNAVycgRs/A9JubJN/kczS54b2wn
12oxVRdRlpJHWy8Ra9ym0ZE2kdKbntTaTmaJaBJt88bRutsC8x2GuDYb0vxn
C0o+t6dPhTf+teEE3Ixh0GfJqA1yuTlNwj2U7+WtuKcm5LtCopPlVFSLOGo/
nS77QKocfLj1lxBdroUYhrlS0jWQ03NeCu0N9TmdNZSEC04kKv2oOhNG16Mk
bOan088ym3NtUko7lUha3vXObr3q0HlLggrbFjmvJs0lNmAGcXsDUFb4Ij73
MdMFjnyy2xKvxfoIcp4J7zYYo10/SheHu84PIbUrlpoxaTw7mMe1PCkZ13W9
Ila9nrGeeN33Y7K/ip0WKq6slNB+LpWZTyPYYyVELHahn8Qa9V+NGPxbAwSd
RvwwZiil212pq/Xh/ItYOgbmULNRyj0XBbL1hZySFaPYp3mtnnipwdrX/2K6
Qs2JhSouV0ox+3I2lZemIz0lpOrvbtQfHkNWtAOtGWNZk+ZOYhHcNQ6nLTAT
j8kFXDlcSO4tzXt78qcS1GkoSdDgJ9QQeliF/i45ocHZWGlS8XVLoLc4Cou7
EVx8pbuHi2Zxr3wO8efnknFQwlmfQpQbe87dz6l79l/YafCSqjk3RIXogZQp
y/KQfZxDZWU6y/LmIffOJag6D6+R+ezdk8+eSwU09ynGZvqvewf+t/6RqSHF
ppA6jYyAfbrz7yp45FrEwOxi7D5QY6tfzK2lPdfof9Har994bHf9V7Xp3lRP
fznjnwSCFoo=
                    "], "Real32", ColorSpace -> Automatic, ImageSize -> 
                    Automatic, Interleaving -> None, Magnification -> 
                    Automatic]}, "ID" -> 7010556415243574996|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.204632, "MaxTrainingMemory" -> 
                    2246432, "DataMemory" -> 36641840, "FunctionMemory" -> 
                    49784, "LanguageVersion" -> {14., 0}, "Date" -> 
                    DateObject[{
                    2024, 4, 19, 11, 19, 1.727803`6.9900692126260235}, 
                    "Instant", "Gregorian", 2.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                    "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                   "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {-0.5125811770876305, -0.5125811770876305, \
-0.3501120945907746, -0.30189874004446376`, -0.14633008531134462`, \
-0.07158008348672722, -0.06803039793036912, 0.03877394930521939, 
                    0.09907792423403629, 0.10466426783518772`, 
                    0.18824663462166388`}, 
                    "LeftBoundary" -> -0.3501120945907746, "LeftScale" -> 
                    0.08123454124842797, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                   Around[0.10197698024552024`, 0.07159634860402582], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|"f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {14., 0}, 
                "ID" -> 4270897793735380344|>], 
              MachineLearning`MLProcessor[
              "ConformImage", <|
               "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|"f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
                "Example" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwUj4JRMAoQAAAJTAyT
                  "], "Byte", ColorSpace -> "Grayscale", Interleaving -> 
                  None], "Version" -> {14., 0}, "ID" -> 8437933259895095483, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>|>], 
              MachineLearning`MLProcessor[
              "ImageExtractNumericalVector", <|
               "Invertibility" -> "Impossible", "Missing" -> "Forbidden", 
                "StructurePreserving" -> True, 
                "Input" -> <|"f1" -> <|"Type" -> "Image", "Weight" -> 1|>|>, 
                "ExtractorName" -> "ImagePixels", "ExtractorVersion" -> "V1", 
                "FeatureNumber" -> Automatic, "Shake" -> False, 
                "Version" -> {14., 0}, "ID" -> 6659986185200619550, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>]},
             "Invertibility" -> "Impossible", "StructurePreserving" -> True, 
            "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>,
                 "Output" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 7213318638605837256|>], 
              MachineLearning`MLProcessor[
              "IntegerEncodeNominalVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                "Index" -> {<|
                  0 -> 1, 1 -> 2, 2 -> 3, 3 -> 4, 4 -> 5, 5 -> 6, 6 -> 7, 7 -> 
                   8, 8 -> 9, 9 -> 10|>}, "MissingCode" -> 0, 
                "Version" -> {14., 0}, "ID" -> 4934427692370913341, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|
                   "Type" -> "NominalVector", "Weight" -> 1, 
                    "SetSize" -> {10}|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 1619002214002175335|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|
                 "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 10|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, "Name" -> 
         "class", 
         "Marginal" -> <|
          0 -> 0.1031968031968032, 1 -> 0.11498501498501498`, 2 -> 
           0.0988011988011988, 3 -> 0.0973026973026973, 4 -> 
           0.0956043956043956, 5 -> 0.08771228771228771, 6 -> 
           0.100999000999001, 7 -> 0.10649350649350649`, 8 -> 
           0.1004995004995005, 9 -> 0.0944055944055944|>|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> 
       SparseArray[
        Automatic, {10, 11}, 0., {
         1, {{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {{2}, {3}, {4}, {5}, {6}, {
           7}, {8}, {9}, {10}, {11}}}, {1., 1., 1., 1., 1., 1., 1., 1., 1., 
          1.}}], "Threshold" -> 0, "TieBreaker" -> RandomChoice, 
       "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
       "Model" -> <|
        "LogProbabilitiesFunction" -> 
         LinearLayer[<|
           "Type" -> "Linear", "Arrays" -> <|"Weights" -> CompressedData["
1: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
TxG1Nbu516on2jop4v/LApyl
               "], "Biases" -> 
              RawArray["Real32",{0.02348535880446434, -0.04183033108711243, 
                0.027473898604512215`, 
                0.02139660343527794, -0.002919600810855627, 
                0.020337998867034912`, 
                0.010361450724303722`, -0.006738380063325167, 
                0.032676998525857925`}]|>, 
            "Parameters" -> <|
             "OutputDimensions" -> {9}, "$OutputSize" -> 9, "$InputSize" -> 
              784, "$InputDimensions" -> {784}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{784}, NeuralNetworks`AtomT]|>,
             "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{9}, NeuralNetworks`RealT]|>|>, <|
           "Version" -> "14.0.2", "Unstable" -> False|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "FirstValues", <|
           "Info" -> <|"Weight" -> 1, "Type" -> "NumericalVector"|>, "Key" -> 
            "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
            False, "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
         "LogisticRegression", "PostProcessor" -> 
         MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
           "L2Regularization" -> <|"Value" -> 0.1, "Options" -> <||>|>, 
           "OptimizationMethod" -> <|"Value" -> "LBFGS", "Options" -> <||>|>, 
           MaxIterations -> <|"Value" -> 30, "Options" -> <||>|>|>|>, 
       "TrainingInformation" -> <|
        "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
         Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
         "PreprocessingTime" -> 1.564058`6.645797847471018, "LossName" -> 
         "MeanCrossEntropy", "BestModelInformation" -> 
         Dataset[<|
           "MeanCrossEntropy" -> 
            Around[0.3788096807198896, 0.03330009019582478], "Accuracy" -> 
            Around[0.888021723685552, 0.009960687856440402], "EvaluationTime" -> 
            0.00003518127004766529, "TestSize" -> 2000, "ModelMemory" -> 
            40008, "ModelUtility" -> 0.26013202120913803`, "Round" -> 5, 
            "Iteration" -> 46, 
            "Time" -> {
             29.348283`7.919127691739305, 30.737308`7.93921082243914}, 
            "TrainingSize" -> 8000, "TrainingTime" -> 1.2589254117941673`, 
            "TrainingMemory" -> 150763704, "ExperimentCount" -> 1, 
            "MeanCrossEntropyHistory" -> {
              Around[0.3788096807198896, 0.023546719591591367`]}, 
            "AccuracyHistory" -> {
              Around[0.888021723685552, 0.007043269928571504]}, 
            "IterationHistory" -> {46}, 
            "TimeHistory" -> {{
              29.348283`7.919127691739305, 30.737308`7.93921082243914}}, 
            "Configuration" -> {
             "LogisticRegression", "L1Regularization" -> 0, 
              "L2Regularization" -> 0.1, "OptimizationMethod" -> Automatic, 
              MaxIterations -> 30}, "FinalTrainingSize" -> 10000|>, 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], TypeSystem`AnyType, 19], <||>], 
         "Configurations" -> 
         Dataset[<|<|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 1.*^-6|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[3.719107029175524, 0.6260261887812988], "Accuracy" -> 
                 Around[0.4564380455806668, 0.07037823770495281], 
                 "EvaluationTime" -> 0.0007943282347242814, "TestSize" -> 100,
                  "ModelMemory" -> 40008, 
                 "ModelUtility" -> -2.0397561521492324`, "Round" -> 1, 
                 "Iteration" -> 1, 
                 "Time" -> {
                  1.66043`6.671765564936227, 1.925549`6.736099568212111}, 
                 "TrainingSize" -> 15, "TrainingTime" -> 0.12589254117941673`,
                  "TrainingMemory" -> 3418744, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[3.719107029175524, 0.4426673632876261]}, 
                 "AccuracyHistory" -> {
                   Around[0.4564380455806668, 0.0497649291291309]}, 
                 "IterationHistory" -> {1}, 
                 "TimeHistory" -> {{
                   1.66043`6.671765564936227, 
                    1.925549`6.736099568212111}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[4.793092563774317, 0.35652888424721324`], "Accuracy" -> 
                 Around[0.6938643062523752, 0.01676188280616967], 
                 "EvaluationTime" -> 0.00010096120158844399`, "TestSize" -> 
                 1500, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -2.275103773077772, "Round" -> 2, 
                 "Iteration" -> 32, 
                 "Time" -> {
                  18.703019`7.723456708546639, 19.127484`7.733202840847976}, 
                 "TrainingSize" -> 70, "TrainingTime" -> 0.15848931924611134`,
                  "TrainingMemory" -> 4115488, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[4.793092563774317, 0.25210399174007814`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6938643062523752, 0.01185244099769677]}, 
                 "IterationHistory" -> {32}, 
                 "TimeHistory" -> {{
                   18.703019`7.723456708546639, 
                    19.127484`7.733202840847976}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00010096120158844399`, 
                "MeanCrossEntropy" -> 
                Around[4.793092563774317, 0.35652888424721324`], 
                "ModelMemory" -> 40008, "TrainingMemory" -> 4115488, 
                "TrainingTime" -> 15.974824465790551`|>, "Index" -> 1|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.01|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[1.3222753744482074`, 0.07221498376901729], "Accuracy" -> 
                 Around[0.6866831931973957, 0.014250792495300767`], 
                 "EvaluationTime" -> 0.00005080681532742491, "TestSize" -> 
                 2100, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -0.9833783195248539, "Round" -> 2, 
                 "Iteration" -> 3, 
                 "Time" -> {
                  2.135348`6.7810136560718925, 2.872793`6.909849327390279}, 
                 "TrainingSize" -> 70, "TrainingTime" -> 0.5011872336272722, 
                 "TrainingMemory" -> 4161264, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[1.3222753744482074`, 0.05106370472634859]}, 
                 "AccuracyHistory" -> {
                   Around[0.6866831931973957, 0.010076832010709533`]}, 
                 "IterationHistory" -> {3}, 
                 "TimeHistory" -> {{
                   2.135348`6.7810136560718925, 
                    2.872793`6.909849327390279}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.7530910618175928`, 0.028318282058184503`], 
                 "Accuracy" -> 
                 Around[0.48246633755585094`, 0.01905046889131798], 
                 "EvaluationTime" -> 0.0000538402035650229, "TestSize" -> 
                 1533.3333333333333`, "ModelMemory" -> 40008., 
                 "ModelUtility" -> -1.257766701118991, "Round" -> 1, 
                 "Iteration" -> 18, 
                 "Time" -> {
                  10.503215`7.472867249046167, 10.757978`7.483275645313116}, 
                 "TrainingSize" -> 15, "TrainingTime" -> 0.11040596861042053`,
                  "TrainingMemory" -> 3.418893333333333*^6, "ExperimentCount" -> 
                 2, "MeanCrossEntropyHistory" -> {
                   Around[1.7555432791067933`, 0.05031204248119991], 
                   Around[1.750638844528392, 0.034072646645297314`]}, 
                 "AccuracyHistory" -> {
                   Around[0.49950164310934314`, 0.014371114918403502`], 
                   Around[0.46543103200235875`, 0.010594219600169694`]}, 
                 "IterationHistory" -> {14, 18}, 
                 "TimeHistory" -> {{
                   8.45256`7.3785332557585575, 8.722845`7.392203148874157}, {
                   10.503215`7.472867249046167, 
                    10.757978`7.483275645313116}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.5028183235614196`, 0.16689988923182644`], 
                 "Accuracy" -> 
                 Around[0.8068171948893039, 0.015420797270985671`], 
                 "EvaluationTime" -> 0.00008959550523816813, "TestSize" -> 
                 1300, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.1224714535855274`, "Round" -> 3, 
                 "Iteration" -> 39, 
                 "Time" -> {
                  23.506739`7.822737378786998, 24.013663`7.8320034050878045}, 
                 "TrainingSize" -> 300, "TrainingTime" -> 
                 0.31622776601683794`, "TrainingMemory" -> 7569016, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.5028183235614196`, 0.11801604345510812`]}, 
                 "AccuracyHistory" -> {
                   Around[0.8068171948893039, 0.010904150321616974`]}, 
                 "IterationHistory" -> {39}, 
                 "TimeHistory" -> {{
                   23.506739`7.822737378786998, 
                    24.013663`7.8320034050878045}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.43630664499564303`, 0.01905031777687309], 
                 "Accuracy" -> 
                 Around[0.8719774832591014, 0.005673163403071684], 
                 "EvaluationTime" -> 0.00002342840101463073, "TestSize" -> 
                 6900, "ModelMemory" -> 40008, "ModelUtility" -> 
                 0.12755468198773645`, "Round" -> 4, "Iteration" -> 45, 
                 "Time" -> {
                  28.337649`7.9039088101667705, 28.983626`7.9136977104931905},
                  "TrainingSize" -> 1500, "TrainingTime" -> 
                 0.3981071705534972, "TrainingMemory" -> 37703472, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.43630664499564303`, 0.013470608883785595`]}, 
                 "AccuracyHistory" -> {
                   Around[0.8719774832591014, 0.004011532313091338]}, 
                 "IterationHistory" -> {45}, 
                 "TimeHistory" -> {{
                   28.337649`7.9039088101667705, 
                    28.983626`7.9136977104931905}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.4040899601653172, 0.03789438887526882], "Accuracy" -> 
                 Around[0.8881584925249312, 0.009960333868130684], 
                 "EvaluationTime" -> 0.000027326509266368902`, "TestSize" -> 
                 2000, "ModelMemory" -> 40008, "ModelUtility" -> 
                 0.1943753818079671, "Round" -> 5, "Iteration" -> 50, 
                 "Time" -> {
                  34.841454`7.993641264142746, 36.903988`8.018618293877493}, 
                 "TrainingSize" -> 8000, "TrainingTime" -> 
                 1.9952623149688797`, "TrainingMemory" -> 150763672, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.4040899601653172, 0.026795379342622647`]}, 
                 "AccuracyHistory" -> {
                   Around[0.8881584925249312, 0.007043019621037242]}, 
                 "IterationHistory" -> {50}, 
                 "TimeHistory" -> {{
                   34.841454`7.993641264142746, 
                    36.903988`8.018618293877493}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.000027326509266368902`, 
                "MeanCrossEntropy" -> 
                Around[0.4040899601653172, 0.03789438887526882], 
                "ModelMemory" -> 40008, "TrainingMemory" -> 150763672, 
                "TrainingTime" -> 2.9952651273383717`|>, "Index" -> 2|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 1.*^6|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[2.3025528949625746`, 0.00070521892750315], "Accuracy" -> 
                 Around[0.16144368470826964`, 0.028523489988448888`], 
                 "EvaluationTime" -> 0.000277123415178321, "TestSize" -> 
                 833.3333333333333, "ModelMemory" -> 40008., 
                 "ModelUtility" -> -1.5272406274830037`, "Round" -> 1, 
                 "Iteration" -> 19, 
                 "Time" -> {
                  10.774239`7.483931598567981, 11.084002`7.496241588970376}, 
                 "TrainingSize" -> 15, "TrainingTime" -> 0.0840280033584851, 
                 "TrainingMemory" -> 2.909613333333333*^6, "ExperimentCount" -> 
                 2, "MeanCrossEntropyHistory" -> {
                   Around[2.30255943238861, 0.003454703527896965], 
                   Around[2.30254635753654, 0.0007203557174341376]}, 
                 "AccuracyHistory" -> {
                   Around[0.1891113129073992, 0.039124366743723805`], 
                   Around[0.13377605650914007`, 0.007046402202775543]}, 
                 "IterationHistory" -> {2, 19}, 
                 "TimeHistory" -> {{
                   1.941349`6.73964860984748, 2.10949`6.775722464453452}, {
                   10.774239`7.483931598567981, 
                    11.084002`7.496241588970376}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.302532094546356, 0.0014734055984126334`], 
                 "Accuracy" -> 
                 Around[0.10506597746572721`, 0.013060502538886517`], 
                 "EvaluationTime" -> 0.00014907944805533888`, "TestSize" -> 
                 1100, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.5272981853886773`, "Round" -> 2, 
                 "Iteration" -> 24, 
                 "Time" -> {
                  13.744439`7.58967201165316, 13.999427`7.5976552537577255}, 
                 "TrainingSize" -> 70, "TrainingTime" -> 0.03162277660168379, 
                 "TrainingMemory" -> 2206496, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[2.302532094546356, 0.001041855090075796]}, 
                 "AccuracyHistory" -> {
                   Around[0.10506597746572721`, 0.009235169910950776]}, 
                 "IterationHistory" -> {24}, 
                 "TimeHistory" -> {{
                   13.744439`7.58967201165316, 
                    13.999427`7.5976552537577255}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.302359242434345, 0.0011558741113331737`], 
                 "Accuracy" -> 
                 Around[0.11095745641255333`, 0.010455834646253685`], 
                 "EvaluationTime" -> 0.00006066477345638924, "TestSize" -> 
                 1800, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.5271954533264314`, "Round" -> 3, 
                 "Iteration" -> 38, 
                 "Time" -> {
                  23.255939`7.81807887311154, 23.493412`7.822491088398891}, 
                 "TrainingSize" -> 300, "TrainingTime" -> 0.05011872336272722,
                  "TrainingMemory" -> 7569016, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[2.302359242434345, 0.0008173264223216614]}, 
                 "AccuracyHistory" -> {
                   Around[0.11095745641255333`, 0.007393391581331226]}, 
                 "IterationHistory" -> {38}, 
                 "TimeHistory" -> {{
                   23.255939`7.81807887311154, 
                    23.493412`7.822491088398891}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.30116579817269, 0.00029184745409189145`], 
                 "Accuracy" -> 
                 Around[0.1268738717605371, 0.0050913259761613365`], 
                 "EvaluationTime" -> 0.000015979549395057284`, "TestSize" -> 
                 8500, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.5266018792503036`, "Round" -> 4, 
                 "Iteration" -> 44, 
                 "Time" -> {
                  28.040651`7.899333085616053, 28.327738`7.903756890524746}, 
                 "TrainingSize" -> 1500, "TrainingTime" -> 0.1, 
                 "TrainingMemory" -> 37703528, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[2.30116579817269, 0.00020636731386040606`]}, 
                 "AccuracyHistory" -> {
                   Around[0.1268738717605371, 0.0036001111229748994`]}, 
                 "IterationHistory" -> {44}, 
                 "TimeHistory" -> {{
                   28.040651`7.899333085616053, 
                    28.327738`7.903756890524746}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.000015979549395057284`, 
                "MeanCrossEntropy" -> 
                Around[2.30116579817269, 0.00029184745409189145`], 
                "ModelMemory" -> 40008, "TrainingMemory" -> 37703528, 
                "TrainingTime" -> 0.7506946700251519|>, "Index" -> 3|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.1|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.9581975118677089, 0.16335331340220488`], "Accuracy" -> 
                 Around[0.799570617591918, 0.028244832452000133`], 
                 "EvaluationTime" -> 0.00016270938633815228`, "TestSize" -> 
                 400, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -0.68398702167171, "Round" -> 3, 
                 "Iteration" -> 4, 
                 "Time" -> {
                  3.180383`6.954024416867409, 
                   3.4985480000000000001`6.99543283029555}, "TrainingSize" -> 
                 300, "TrainingTime" -> 0.19952623149688792`, 
                 "TrainingMemory" -> 7568824, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.9581975118677089, 0.1155082356359904]}, 
                 "AccuracyHistory" -> {
                   Around[0.799570617591918, 0.019972112560287154`]}, 
                 "IterationHistory" -> {4}, 
                 "TimeHistory" -> {{
                   3.180383`6.954024416867409, 
                    3.4985480000000000001`6.99543283029555}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.6832713671225144`, 0.03964352175711118], "Accuracy" -> 
                 Around[0.4680310564687247, 0.014233447453755254`], 
                 "EvaluationTime" -> 0.00006140371930292695, "TestSize" -> 
                 1033.3333333333333`, "ModelMemory" -> 40008., 
                 "ModelUtility" -> -1.2185990749183389`, "Round" -> 1, 
                 "Iteration" -> 20, 
                 "Time" -> {
                  11.4662230000000000001`7.510965377361258, 
                   11.739278`7.5211863808455455}, "TrainingSize" -> 15, 
                 "TrainingTime" -> 0.11726169411961114`, "TrainingMemory" -> 
                 3.4187866666666665`*^6, "ExperimentCount" -> 2, 
                 "MeanCrossEntropyHistory" -> {
                   Around[1.7122070580467388`, 0.05340807378358232], 
                   Around[1.65433567619829, 0.031447196920690104`]}, 
                 "AccuracyHistory" -> {
                   Around[0.47803601344625696`, 0.01876395433103873], 
                   Around[0.4580260994911925, 0.01202408076315968]}, 
                 "IterationHistory" -> {6, 20}, 
                 "TimeHistory" -> {{
                   4.122096`7.066663095394472, 4.360241`7.091055487828221}, {
                   11.4662230000000000001`7.510965377361258, 
                    11.739278`7.5211863808455455}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.0474142725152358`, 0.05376065850029828], "Accuracy" -> 
                 Around[0.6915743694381458, 0.01578108450938103], 
                 "EvaluationTime" -> 0.00007825583952519604, "TestSize" -> 
                 1700, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -0.7496983163099827, "Round" -> 2, 
                 "Iteration" -> 22, 
                 "Time" -> {
                  12.538361`7.549785763230128, 12.875534`7.56131024351554}, 
                 "TrainingSize" -> 70, "TrainingTime" -> 0.12589254117941673`,
                  "TrainingMemory" -> 4115736, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[1.0474142725152358`, 0.03801452618661512]}, 
                 "AccuracyHistory" -> {
                   Around[0.6915743694381458, 0.011158911871061307`]}, 
                 "IterationHistory" -> {22}, 
                 "TimeHistory" -> {{
                   12.538361`7.549785763230128, 
                    12.875534`7.56131024351554}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.450318539014938, 0.018006062908627184`], "Accuracy" -> 
                 Around[0.8725153351004998, 0.005110916310173962], 
                 "EvaluationTime" -> 0.000022045923525299074`, "TestSize" -> 
                 8500, "ModelMemory" -> 40008, "ModelUtility" -> 
                 0.09667419799764232, "Round" -> 4, "Iteration" -> 43, 
                 "Time" -> {
                  27.115588`7.884764020020965, 27.692026`7.893899724193978}, 
                 "TrainingSize" -> 1500, "TrainingTime" -> 
                 0.31622776601683794`, "TrainingMemory" -> 37703408, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.450318539014938, 0.01273220918516185]}, 
                 "AccuracyHistory" -> {
                   Around[0.8725153351004998, 0.0036139635810009366`]}, 
                 "IterationHistory" -> {43}, 
                 "TimeHistory" -> {{
                   27.115588`7.884764020020965, 
                    27.692026`7.893899724193978}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.3788096807198896, 0.03330009019582478], "Accuracy" -> 
                 Around[0.888021723685552, 0.009960687856440402], 
                 "EvaluationTime" -> 0.00003518127004766529, "TestSize" -> 
                 2000, "ModelMemory" -> 40008, "ModelUtility" -> 
                 0.26013202120913803`, "Round" -> 5, "Iteration" -> 46, 
                 "Time" -> {
                  29.348283`7.919127691739305, 30.737308`7.93921082243914}, 
                 "TrainingSize" -> 8000, "TrainingTime" -> 
                 1.2589254117941673`, "TrainingMemory" -> 150763704, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.3788096807198896, 0.023546719591591367`]}, 
                 "AccuracyHistory" -> {
                   Around[0.888021723685552, 0.007043269928571504]}, 
                 "IterationHistory" -> {46}, 
                 "TimeHistory" -> {{
                   29.348283`7.919127691739305, 
                    30.737308`7.93921082243914}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00003518127004766529, "MeanCrossEntropy" -> 
                Around[0.3788096807198896, 0.03330009019582478], 
                "ModelMemory" -> 40008, "TrainingMemory" -> 150763704, 
                "TrainingTime" -> 1.773182996239597|>, "Index" -> 4|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 1.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.46817911634826437`, 0.0671161694458176], "Accuracy" -> 
                 Around[0.8666225091640428, 0.019533021138773955`], 
                 "EvaluationTime" -> 0.0001548875127307931, "TestSize" -> 600,
                  "ModelMemory" -> 40008, "ModelUtility" -> 
                 0.03747571493229329, "Round" -> 4, "Iteration" -> 8, 
                 "Time" -> {
                  5.193744`7.1670255329118335, 5.801947`7.215118750759468}, 
                 "TrainingSize" -> 1500, "TrainingTime" -> 0.3981071705534972,
                  "TrainingMemory" -> 37703416, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.46817911634826437`, 0.04745829854240299]}, 
                 "AccuracyHistory" -> {
                   Around[0.8666225091640428, 0.013811931704287241`]}, 
                 "IterationHistory" -> {8}, 
                 "TimeHistory" -> {{
                   5.193744`7.1670255329118335, 
                    5.801947`7.215118750759468}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.6919487218846363`, 0.021454016174363384`], 
                 "Accuracy" -> 
                 Around[0.4611966807829715, 0.02113271145396475], 
                 "EvaluationTime" -> 0.00004972253268426312, "TestSize" -> 
                 1033.3333333333333`, "ModelMemory" -> 40008., 
                 "ModelUtility" -> -1.221574441672502, "Round" -> 1, 
                 "Iteration" -> 17, 
                 "Time" -> {
                  9.824707`7.443864600871112, 10.10927`7.456264789401693}, 
                 "TrainingSize" -> 15, "TrainingTime" -> 0.10863084705980558`,
                  "TrainingMemory" -> 3.4188426666666665`*^6, 
                 "ExperimentCount" -> 2, "MeanCrossEntropyHistory" -> {
                   Around[1.689439347769606, 0.033717163041665464`], 
                   Around[1.6944580959996667`, 0.02749157276016419]}, 
                 "AccuracyHistory" -> {
                   Around[0.4794968498023395, 0.016555676005034752`], 
                   Around[0.44289651176360356`, 0.013730233428578384`]}, 
                 "IterationHistory" -> {9, 17}, 
                 "TimeHistory" -> {{
                   6.193115`7.243454137997989, 6.409443`7.258365283149405}, {
                   9.824707`7.443864600871112, 
                    10.10927`7.456264789401693}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.02235176671446, 0.03484365210922547], "Accuracy" -> 
                 Around[0.6923088549719787, 0.013860719507924509`], 
                 "EvaluationTime" -> 0.00006213156385016352, "TestSize" -> 
                 2200, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -0.7220595702680834, "Round" -> 2, 
                 "Iteration" -> 15, 
                 "Time" -> {
                  8.740728`7.393092599267219, 9.232522`7.416865344692234}, 
                 "TrainingSize" -> 70, "TrainingTime" -> 0.25118864315095796`,
                  "TrainingMemory" -> 4115656, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[1.02235176671446, 0.024638182687738278`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6923088549719787, 0.009801008756178085]}, 
                 "IterationHistory" -> {15}, 
                 "TimeHistory" -> {{
                   8.740728`7.393092599267219, 
                    9.232522`7.416865344692234}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.571203272133016, 0.035553781810898556`], "Accuracy" -> 
                 Around[0.815924072111202, 0.012199237586927252`], 
                 "EvaluationTime" -> 0.00007747571105553733, "TestSize" -> 
                 2000, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -0.14552245664423724`, "Round" -> 3, 
                 "Iteration" -> 36, 
                 "Time" -> {
                  21.567055`7.785335839360257, 21.951296`7.793005159487922}, 
                 "TrainingSize" -> 300, "TrainingTime" -> 
                 0.15848931924611134`, "TrainingMemory" -> 7568592, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.571203272133016, 0.025140320215313296`]}, 
                 "AccuracyHistory" -> {
                   Around[0.815924072111202, 0.008626163623022074]}, 
                 "IterationHistory" -> {36}, 
                 "TimeHistory" -> {{
                   21.567055`7.785335839360257, 
                    21.951296`7.793005159487922}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.4025821946654099, 0.037042853174027925`], 
                 "Accuracy" -> 
                 Around[0.8881584925249312, 0.009960333868130684], 
                 "EvaluationTime" -> 0.00003521889138228103, "TestSize" -> 
                 2000, "ModelMemory" -> 40008, "ModelUtility" -> 
                 0.19845997285804173`, "Round" -> 5, "Iteration" -> 51, 
                 "Time" -> {
                  37.3497`8.023832111324293, 38.825997`8.040667610144842}, 
                 "TrainingSize" -> 8000, "TrainingTime" -> 
                 1.2589254117941673`, "TrainingMemory" -> 150763840, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.4025821946654099, 0.02619325267385277]}, 
                 "AccuracyHistory" -> {
                   Around[0.8881584925249312, 0.007043019621037242]}, 
                 "IterationHistory" -> {51}, 
                 "TimeHistory" -> {{
                   37.3497`8.023832111324293, 
                    38.825997`8.040667610144842}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00003521889138228103, "MeanCrossEntropy" -> 
                Around[0.4025821946654099, 0.037042853174027925`], 
                "ModelMemory" -> 40008, "TrainingMemory" -> 150763840, 
                "TrainingTime" -> 1.9717639352962064`|>, "Index" -> 5|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 10.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[1.8660606453413937`, 0.016555758894882103`], 
                 "Accuracy" -> 
                 Around[0.43239931042158136`, 0.026820263427031518`], 
                 "EvaluationTime" -> 0.00015169628149985526`, "TestSize" -> 
                 700., "ModelMemory" -> 40008., 
                 "ModelUtility" -> -1.318763223872915, "Round" -> 1, 
                 "Iteration" -> 21, 
                 "Time" -> {
                  11.761348`7.522002093757482, 12.107256`7.534590718877457}, 
                 "TrainingSize" -> 15, "TrainingTime" -> 0.13675813386831492`,
                  "TrainingMemory" -> 3.418984*^6, "ExperimentCount" -> 2, 
                 "MeanCrossEntropyHistory" -> {
                   Around[1.8610107819850108`, 0.027093824825347144`], 
                   Around[1.8711105086977764`, 0.019387721327796613`]}, 
                 "AccuracyHistory" -> {
                   Around[0.4562344760321913, 0.022210983410940594`], 
                   Around[0.4085641448109714, 0.014766349394828475`]}, 
                 "IterationHistory" -> {12, 21}, 
                 "TimeHistory" -> {{
                   7.355922`7.318182108957449, 7.646661`7.335016830501589}, {
                   11.761348`7.522002093757482, 
                    12.107256`7.534590718877457}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.2519728803735717`, 0.036416719682455724`], 
                 "Accuracy" -> 
                 Around[0.675224839894244, 0.020894089860874872`], 
                 "EvaluationTime" -> 0.00012619657301530014`, "TestSize" -> 
                 1000, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -0.9236820098173091, "Round" -> 2, 
                 "Iteration" -> 26, 
                 "Time" -> {
                  14.9079850000000000001`7.624963940602965, 
                   15.236858`7.634440413652767}, "TrainingSize" -> 70, 
                 "TrainingTime" -> 0.12589254117941673`, "TrainingMemory" -> 
                 4115784, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.2519728803735717`, 0.025750509436034057`]}, 
                 "AccuracyHistory" -> {
                   Around[0.675224839894244, 0.01477435262734571]}, 
                 "IterationHistory" -> {26}, 
                 "TimeHistory" -> {{
                   14.9079850000000000001`7.624963940602965, 
                    15.236858`7.634440413652767}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.7473061468710822, 0.0678622489108265], "Accuracy" -> 
                 Around[0.7982059109579069, 0.032687675640459254`], 
                 "EvaluationTime" -> 0.00045391488129735907`, "TestSize" -> 
                 300, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -0.4198796238504017, "Round" -> 3, 
                 "Iteration" -> 31, 
                 "Time" -> {
                  17.757357`7.700923319480586, 18.248825`7.712779899962753}, 
                 "TrainingSize" -> 300, "TrainingTime" -> 
                 0.31622776601683794`, "TrainingMemory" -> 7568776, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.7473061468710822, 0.04798585639141481]}, 
                 "AccuracyHistory" -> {
                   Around[0.7982059109579069, 0.023113677106595062`]}, 
                 "IterationHistory" -> {31}, 
                 "TimeHistory" -> {{
                   17.757357`7.700923319480586, 
                    18.248825`7.712779899962753}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.4279215107648932, 0.02718473688668892], "Accuracy" -> 
                 Around[0.8714918134459168, 0.01178713500348371], 
                 "EvaluationTime" -> 0.00010753250270236814`, "TestSize" -> 
                 1600, "ModelMemory" -> 40008, "ModelUtility" -> 
                 0.14302930290216198`, "Round" -> 4, "Iteration" -> 37, 
                 "Time" -> {
                  21.962552`7.793227796265065, 22.801366`7.809505859289921}, 
                 "TrainingSize" -> 1500, "TrainingTime" -> 0.5011872336272722,
                  "TrainingMemory" -> 37703288, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.4279215107648932, 0.01922251179734981]}, 
                 "AccuracyHistory" -> {
                   Around[0.8714918134459168, 0.00833476309172465]}, 
                 "IterationHistory" -> {37}, 
                 "TimeHistory" -> {{
                   21.962552`7.793227796265065, 
                    22.801366`7.809505859289921}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.40094980934238367`, 0.031529174127845144`], 
                 "Accuracy" -> 
                 Around[0.8906109577702078, 0.009864390886720177], 
                 "EvaluationTime" -> 0.00003867463231475127, "TestSize" -> 
                 2000, "ModelMemory" -> 40008, "ModelUtility" -> 
                 0.20515349858137333`, "Round" -> 5, "Iteration" -> 47, 
                 "Time" -> {
                  31.174729`7.945347680367769, 32.600756`7.964772664816103}, 
                 "TrainingSize" -> 8000, "TrainingTime" -> 
                 1.2589254117941673`, "TrainingMemory" -> 150763904, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.40094980934238367`, 0.02229449283101075]}, 
                 "AccuracyHistory" -> {
                   Around[0.8906109577702078, 0.006975177688274617]}, 
                 "IterationHistory" -> {47}, 
                 "TimeHistory" -> {{
                   31.174729`7.945347680367769, 
                    32.600756`7.964772664816103}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00003867463231475127, "MeanCrossEntropy" -> 
                Around[0.40094980934238367`, 0.031529174127845144`], 
                "ModelMemory" -> 40008, "TrainingMemory" -> 150763904, 
                "TrainingTime" -> 1.710414898611024|>, "Index" -> 6|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.00001|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[2.8224438799812495`, 0.4532318585568446], "Accuracy" -> 
                 Around[0.7857396785357932, 0.023611315715617854`], 
                 "EvaluationTime" -> 0.00019488420934696583`, "TestSize" -> 
                 600, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.7623752898868408`, "Round" -> 3, 
                 "Iteration" -> 7, 
                 "Time" -> {
                  4.376569`7.092678773342332, 4.814314`7.13407940598673}, 
                 "TrainingSize" -> 300, "TrainingTime" -> 
                 0.25118864315095796`, "TrainingMemory" -> 7568952, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[2.8224438799812495`, 0.320483320635327]}, 
                 "AccuracyHistory" -> {
                   Around[0.7857396785357932, 0.016695721455249883`]}, 
                 "IterationHistory" -> {7}, 
                 "TimeHistory" -> {{
                   4.376569`7.092678773342332, 
                    4.814314`7.13407940598673}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.611639644721379, 0.12270378294181394`], "Accuracy" -> 
                 Around[0.5053982842170482, 0.01876229010294735], 
                 "EvaluationTime" -> 0.00004810310786918529, "TestSize" -> 
                 1400, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.6624917350428152`, "Round" -> 1, 
                 "Iteration" -> 16, 
                 "Time" -> {
                  9.562961`7.43213737812095, 9.807892`7.443120668445366}, 
                 "TrainingSize" -> 15, "TrainingTime" -> 0.12589254117941673`,
                  "TrainingMemory" -> 3418920, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[2.611639644721379, 0.08676467699539885]}, 
                 "AccuracyHistory" -> {
                   Around[0.5053982842170482, 0.013266942562383316`]}, 
                 "IterationHistory" -> {16}, 
                 "TimeHistory" -> {{
                   9.562961`7.43213737812095, 
                    9.807892`7.443120668445366}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[3.4252980531427037`, 0.27551761253645984`], 
                 "Accuracy" -> 
                 Around[0.6824785379806705, 0.01894744631903076], 
                 "EvaluationTime" -> 0.00012605712152111425`, "TestSize" -> 
                 1200, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.9403084436062246`, "Round" -> 2, 
                 "Iteration" -> 29, 
                 "Time" -> {
                  16.542793`7.670153828947396, 16.995042`7.681867235692233}, 
                 "TrainingSize" -> 70, "TrainingTime" -> 0.19952623149688792`,
                  "TrainingMemory" -> 4115656, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[3.4252980531427037`, 0.19482037216085848`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6824785379806705, 0.013397867778354739`]}, 
                 "IterationHistory" -> {29}, 
                 "TimeHistory" -> {{
                   16.542793`7.670153828947396, 
                    16.995042`7.681867235692233}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00012605712152111425`, 
                "MeanCrossEntropy" -> 
                Around[3.4252980531427037`, 0.27551761253645984`], 
                "ModelMemory" -> 40008, "TrainingMemory" -> 4115656, 
                "TrainingTime" -> 20.20381179283975|>, "Index" -> 7|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.001|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[1.9297132671622252`, 0.07622679919229544], "Accuracy" -> 
                 Around[0.47519702207192627`, 0.033956528301134103`], 
                 "EvaluationTime" -> 0.00018436254657999858`, "TestSize" -> 
                 500., "ModelMemory" -> 40008., 
                 "ModelUtility" -> -1.3584015248602943`, "Round" -> 1, 
                 "Iteration" -> 23, 
                 "Time" -> {
                  12.892227`7.561872937247494, 13.306891`7.575621592977882}, 
                 "TrainingSize" -> 15, "TrainingTime" -> 0.1504371046185738, 
                 "TrainingMemory" -> 3.4190026666666665`*^6, 
                 "ExperimentCount" -> 2, "MeanCrossEntropyHistory" -> {
                   Around[1.9581274361996501`, 0.09151561402571509], 
                   Around[1.9012990981248001`, 0.11147487017783742`]}, 
                 "AccuracyHistory" -> {
                   Around[0.5048560240388095, 0.020276479606152812`], 
                   Around[0.4455380201050431, 0.028565614914271276`]}, 
                 "IterationHistory" -> {10, 23}, 
                 "TimeHistory" -> {{
                   6.422997`7.259282712663468, 6.652748`7.274546066576442}, {
                   12.892227`7.561872937247494, 
                    13.306891`7.575621592977882}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.8405360592803206`, 0.1218169334196996], "Accuracy" -> 
                 Around[0.6811291563777044, 0.01643512631268253], 
                 "EvaluationTime" -> 0.00006741318992262202, "TestSize" -> 
                 1600, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.3163678378009012`, "Round" -> 2, 
                 "Iteration" -> 27, 
                 "Time" -> {
                  15.250057`7.634816460440365, 15.75225`7.648887589259281}, 
                 "TrainingSize" -> 70, "TrainingTime" -> 0.31622776601683794`,
                  "TrainingMemory" -> 4115744, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[1.8405360592803206`, 0.08613757968441975]}, 
                 "AccuracyHistory" -> {
                   Around[0.6811291563777044, 0.011621389265355275`]}, 
                 "IterationHistory" -> {27}, 
                 "TimeHistory" -> {{
                   15.250057`7.634816460440365, 
                    15.75225`7.648887589259281}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00006741318992262202, "MeanCrossEntropy" -> 
                Around[1.8405360592803206`, 0.1218169334196996], 
                "ModelMemory" -> 40008, "TrainingMemory" -> 4115744, 
                "TrainingTime" -> 31.773213706302368`|>, "Index" -> 8|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 100000.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[2.3006683112961124`, 0.0020360922505310575`], 
                 "Accuracy" -> 
                 Around[0.12864233147386672`, 0.015745449891823242`], 
                 "EvaluationTime" -> 0.000070932281536554, "TestSize" -> 900, 
                 "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.5265373413137784`, "Round" -> 3, 
                 "Iteration" -> 5, 
                 "Time" -> {
                  3.542458`7.000849703374858, 3.805758`7.03198616246903}, 
                 "TrainingSize" -> 300, "TrainingTime" -> 
                 0.12589254117941673`, "TrainingMemory" -> 7568824, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[2.3006683112961124`, 0.0014397346374718893`]}, 
                 "AccuracyHistory" -> {
                   Around[0.12864233147386672`, 0.011133714391341204`]}, 
                 "IterationHistory" -> {5}, 
                 "TimeHistory" -> {{
                   3.542458`7.000849703374858, 
                    3.805758`7.03198616246903}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.302579095627826, 0.0014790879320093456`], 
                 "Accuracy" -> 
                 Around[0.18387881729687508`, 0.016494061815810028`], 
                 "EvaluationTime" -> 0.0000629016399766865, "TestSize" -> 
                 1100, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.527319002669861, "Round" -> 1, 
                 "Iteration" -> 13, 
                 "Time" -> {
                  7.674481`7.336594008725662, 8.040276`7.356815950605082}, 
                 "TrainingSize" -> 15, "TrainingTime" -> 0.19952623149688792`,
                  "TrainingMemory" -> 3418728, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[2.302579095627826, 0.0010458731066949954`]}, 
                 "AccuracyHistory" -> {
                   Around[0.18387881729687508`, 0.011663062959269369`]}, 
                 "IterationHistory" -> {13}, 
                 "TimeHistory" -> {{
                   7.674481`7.336594008725662, 
                    8.040276`7.356815950605082}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.3022975389439244`, 0.0010913052445556718`], 
                 "Accuracy" -> 
                 Around[0.10565588536953888`, 0.009475025607594256], 
                 "EvaluationTime" -> 0.00006778614487923744, "TestSize" -> 
                 2100, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.527163054131743, "Round" -> 2, 
                 "Iteration" -> 30, 
                 "Time" -> {
                  17.463006`7.6936639967169445, 17.740806`7.700518340299504}, 
                 "TrainingSize" -> 70, "TrainingTime" -> 0.05011872336272722, 
                 "TrainingMemory" -> 2588192, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[2.3022975389439244`, 0.0007716693387697591]}, 
                 "AccuracyHistory" -> {
                   Around[0.10565588536953888`, 0.006699854859046086]}, 
                 "IterationHistory" -> {30}, 
                 "TimeHistory" -> {{
                   17.463006`7.6936639967169445, 
                    17.740806`7.700518340299504}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.292170178903668, 0.0015019877291254213`], 
                 "Accuracy" -> 
                 Around[0.2803944178774707, 0.007518084098949221], 
                 "EvaluationTime" -> 0.00002535979065006963, "TestSize" -> 
                 7100, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.5227907508441003`, "Round" -> 4, 
                 "Iteration" -> 48, 
                 "Time" -> {
                  33.068337`7.97095734837691, 33.518193`7.976825590826459}, 
                 "TrainingSize" -> 1500, "TrainingTime" -> 
                 0.19952623149688792`, "TrainingMemory" -> 37703288, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[2.292170178903668, 0.0010620657085235686`]}, 
                 "AccuracyHistory" -> {
                   Around[0.2803944178774707, 0.005316088247897748]}, 
                 "IterationHistory" -> {48}, 
                 "TimeHistory" -> {{
                   33.068337`7.97095734837691, 
                    33.518193`7.976825590826459}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00002535979065006963, "MeanCrossEntropy" -> 
                Around[2.292170178903668, 0.0015019877291254213`], 
                "ModelMemory" -> 40008, "TrainingMemory" -> 37703288, 
                "TrainingTime" -> 1.4560674178253363`|>, "Index" -> 9|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 10000.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[2.3025390368848697`, 0.0010216007458578279`], 
                 "Accuracy" -> 
                 Around[0.1538035255118721, 0.03328657332631248], 
                 "EvaluationTime" -> 0.000049344494276323545`, "TestSize" -> 
                 1100., "ModelMemory" -> 40008., 
                 "ModelUtility" -> -1.5272618605482087`, "Round" -> 1, 
                 "Iteration" -> 25, 
                 "Time" -> {
                  14.01517`7.598143363491968, 14.411078`7.610241462300295}, 
                 "TrainingSize" -> 15, "TrainingTime" -> 0.1504371046185738, 
                 "TrainingMemory" -> 3.418856*^6, "ExperimentCount" -> 2, 
                 "MeanCrossEntropyHistory" -> {
                   Around[2.3029848397303248`, 0.0015034721107504102`], 
                   Around[2.3020932340394142`, 0.0011615828545943488`]}, 
                 "AccuracyHistory" -> {
                   Around[0.18633826675208442`, 0.01296182509453564], 
                   Around[0.1212687842716598, 0.008375481120738345]}, 
                 "IterationHistory" -> {11, 25}, 
                 "TimeHistory" -> {{
                   6.6686990000000000001`7.275586108936944, 
                    6.922824`7.29182828411356}, {
                   14.01517`7.598143363491968, 
                    14.411078`7.610241462300295}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.3000464195613146`, 0.0017560235900385148`], 
                 "Accuracy" -> 
                 Around[0.1377203214137214, 0.009187062499276439], 
                 "EvaluationTime" -> 0.000044676239706323296`, "TestSize" -> 
                 2800, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.526242667909265, "Round" -> 2, 
                 "Iteration" -> 28, 
                 "Time" -> {
                  16.21386`7.661431412239526, 16.531802`7.669865188628369}, 
                 "TrainingSize" -> 70, "TrainingTime" -> 0.07943282347242814, 
                 "TrainingMemory" -> 3988240, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[2.3000464195613146`, 0.0012416961884397797`]}, 
                 "AccuracyHistory" -> {
                   Around[0.1377203214137214, 0.006496234192423]}, 
                 "IterationHistory" -> {28}, 
                 "TimeHistory" -> {{
                   16.21386`7.661431412239526, 
                    16.531802`7.669865188628369}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.2820165196962487`, 0.003851129176159697], 
                 "Accuracy" -> 
                 Around[0.41138159030222277`, 0.014759269756437769`], 
                 "EvaluationTime" -> 0.00006373815824786706, "TestSize" -> 
                 2200, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.5185576522873165`, "Round" -> 3, 
                 "Iteration" -> 41, 
                 "Time" -> {
                  24.973874`7.849030909748926, 25.479725`7.85773972988978}, 
                 "TrainingSize" -> 300, "TrainingTime" -> 
                 0.25118864315095796`, "TrainingMemory" -> 7568712, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[2.2820165196962487`, 0.002723159555687884]}, 
                 "AccuracyHistory" -> {
                   Around[0.41138159030222277`, 0.010436379730138669`]}, 
                 "IterationHistory" -> {41}, 
                 "TimeHistory" -> {{
                   24.973874`7.849030909748926, 
                    25.479725`7.85773972988978}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.1819064075294197`, 0.00634846363404385], "Accuracy" -> 
                 Around[0.6354520828864839, 0.013316781375242016`], 
                 "EvaluationTime" -> 0.00006766242665097166, "TestSize" -> 
                 2600, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.473941446016966, "Round" -> 4, 
                 "Iteration" -> 49, 
                 "Time" -> {
                  33.528072`7.976953573950286, 34.306088`7.986916190803748}, 
                 "TrainingSize" -> 1500, "TrainingTime" -> 0.5011872336272722,
                  "TrainingMemory" -> 37703288, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[2.1819064075294197`, 0.004489041685748599]}, 
                 "AccuracyHistory" -> {
                   Around[0.6354520828864839, 0.009416386414012348]}, 
                 "IterationHistory" -> {49}, 
                 "TimeHistory" -> {{
                   33.528072`7.976953573950286, 
                    34.306088`7.986916190803748}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00006766242665097166, "MeanCrossEntropy" -> 
                Around[2.1819064075294197`, 0.00634846363404385], 
                "ModelMemory" -> 40008, "TrainingMemory" -> 37703288, 
                "TrainingTime" -> 3.491685328800389|>, "Index" -> 10|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.0001|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[2.4246836626236044`, 0.17580078130690519`], 
                 "Accuracy" -> 
                 Around[0.6849660189801879, 0.01689980868499988], 
                 "EvaluationTime" -> 0.0000961279352830519, "TestSize" -> 
                 1500, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.5932585909171286`, "Round" -> 2, 
                 "Iteration" -> 33, 
                 "Time" -> {
                  19.146539`7.733635274200298, 19.708277`7.746193651154361}, 
                 "TrainingSize" -> 70, "TrainingTime" -> 0.25118864315095796`,
                  "TrainingMemory" -> 4115568, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[2.4246836626236044`, 0.1243099246000059]}, 
                 "AccuracyHistory" -> {
                   Around[0.6849660189801879, 0.011949969321918724`]}, 
                 "IterationHistory" -> {33}, 
                 "TimeHistory" -> {{
                   19.146539`7.733635274200298, 
                    19.708277`7.746193651154361}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0000961279352830519, "MeanCrossEntropy" -> 
                Around[2.4246836626236044`, 0.17580078130690519`], 
                "ModelMemory" -> 40008, "TrainingMemory" -> 4115568, 
                "TrainingTime" -> 25.370052958246752`|>, "Index" -> 11|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 100.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[1.8739582671421782`, 0.018949283270156242`], 
                 "Accuracy" -> 
                 Around[0.6277565451160456, 0.022733023382143315`], 
                 "EvaluationTime" -> 0.0001876002217426846, "TestSize" -> 900,
                  "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.3232340751256668`, "Round" -> 2, 
                 "Iteration" -> 34, 
                 "Time" -> {
                  20.137089`7.755541683019903, 20.527992`7.763891463277191}, 
                 "TrainingSize" -> 70, "TrainingTime" -> 0.12589254117941673`,
                  "TrainingMemory" -> 4115552, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[1.8739582671421782`, 0.013399166698952273`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6277565451160456, 0.01607467499038588]}, 
                 "IterationHistory" -> {34}, 
                 "TimeHistory" -> {{
                   20.137089`7.755541683019903, 
                    20.527992`7.763891463277191}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.2700556415684385`, 0.013398911416733295`], 
                 "Accuracy" -> 
                 Around[0.7562719232738079, 0.009694392040416219], 
                 "EvaluationTime" -> 0.00003774396602870044, "TestSize" -> 
                 3900, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -0.9343291341138426, "Round" -> 3, 
                 "Iteration" -> 40, 
                 "Time" -> {
                  24.543169`7.8414756313636165, 24.955417`7.848709824732209}, 
                 "TrainingSize" -> 300, "TrainingTime" -> 
                 0.19952623149688792`, "TrainingMemory" -> 7568776, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.2700556415684385`, 0.009474461123289963]}, 
                 "AccuracyHistory" -> {
                   Around[0.7562719232738079, 0.006854970351259198]}, 
                 "IterationHistory" -> {40}, 
                 "TimeHistory" -> {{
                   24.543169`7.8414756313636165, 
                    24.955417`7.848709824732209}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.7258545212516418, 0.011794913854643018`], 
                 "Accuracy" -> 
                 Around[0.8496448863760576, 0.006345530135232725], 
                 "EvaluationTime" -> 0.00003394916704180868, "TestSize" -> 
                 6300, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -0.37599967004188195`, "Round" -> 4, 
                 "Iteration" -> 42, 
                 "Time" -> {
                  25.963821`7.865913599848595, 26.71903`7.878365681083386}, 
                 "TrainingSize" -> 1500, "TrainingTime" -> 0.3981071705534972,
                  "TrainingMemory" -> 37703528, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.7258545212516418, 0.008340263570129238]}, 
                 "AccuracyHistory" -> {
                   Around[0.8496448863760576, 0.004486967388846649]}, 
                 "IterationHistory" -> {42}, 
                 "TimeHistory" -> {{
                   25.963821`7.865913599848595, 
                    26.71903`7.878365681083386}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.467343708029205, 0.02448470328204779], "Accuracy" -> 
                 Around[0.8855613861117683, 0.010061213977351017`], 
                 "EvaluationTime" -> 0.000036513518441251864`, "TestSize" -> 
                 2000, "ModelMemory" -> 40008, "ModelUtility" -> 
                 0.057105902783134876`, "Round" -> 5, "Iteration" -> 52, 
                 "Time" -> {
                  39.282153`8.045740276337849, 
                   40.8071540000000000001`8.062281300467346}, "TrainingSize" -> 
                 8000, "TrainingTime" -> 1.5848931924611136`, 
                 "TrainingMemory" -> 150763704, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.467343708029205, 0.01731329972607651]}, 
                 "AccuracyHistory" -> {
                   Around[0.8855613861117683, 0.007114352630353779]}, 
                 "IterationHistory" -> {52}, 
                 "TimeHistory" -> {{
                   39.282153`8.045740276337849, 
                    40.8071540000000000001`8.062281300467346}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.000036513518441251864`, 
                "MeanCrossEntropy" -> 
                Around[0.467343708029205, 0.02448470328204779], "ModelMemory" -> 
                40008, "TrainingMemory" -> 150763704, "TrainingTime" -> 
                2.107009031755809|>, "Index" -> 12|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 1000.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[2.2549418978605806`, 0.006346494767511621], 
                 "Accuracy" -> 
                 Around[0.3343009082353419, 0.01662817543959181], 
                 "EvaluationTime" -> 0.00009312669593516617, "TestSize" -> 
                 1600, "ModelMemory" -> 40008, 
                 "ModelUtility" -> -1.5068476731084428`, "Round" -> 2, 
                 "Iteration" -> 35, 
                 "Time" -> {
                  20.545941`7.764271030150025, 21.044173`7.774676856885139}, 
                 "TrainingSize" -> 70, "TrainingTime" -> 0.19952623149688792`,
                  "TrainingMemory" -> 4115768, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[2.2549418978605806`, 0.0044876494868724085`]}, 
                 "AccuracyHistory" -> {
                   Around[0.3343009082353419, 0.01175789561209497]}, 
                 "IterationHistory" -> {35}, 
                 "TimeHistory" -> {{
                   20.545941`7.764271030150025, 
                    21.044173`7.774676856885139}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00009312669593516617, "MeanCrossEntropy" -> 
                Around[2.2549418978605806`, 0.006346494767511621], 
                "ModelMemory" -> 40008, "TrainingMemory" -> 4115768, 
                "TrainingTime" -> 20.15214938118568|>, "Index" -> 13|>|>, 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration["LogisticRegression"]], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
                 "ModelMemory", "ModelUtility", "Round", "Iteration", "Time", 
                 "TrainingSize", "TrainingTime", "TrainingMemory", 
                 "ExperimentCount", "MeanCrossEntropyHistory", 
                 "AccuracyHistory", "IterationHistory", "TimeHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`AnyType, TypeSystem`AnyType}], 
               TypeSystem`AnyLength], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], TypeSystem`AnyType, 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 13], <||>], 
         "TrainingSizes" -> {15, 70, 300, 1500, 8000}, "MaxTrainingSize" -> 
         10000, "PreprocessorEvaluationTime" -> 0.00001353125, 
         "PreprocessorMemory" -> 70416, "InputDimension" -> 784, 
         "OutputDimension" -> 1, 
         "BaselineLogProbability" -> -2.30016199459629, "VariableBudget" -> 
         True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, 
         "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
         "RoundPartitioning" -> 
         Dataset[{<|
            "TrainingSizes" -> 15, "TimeBudgets" -> 2.4308766418318695`, 
             "ElapsedTimes" -> 7.765996000000001, "ExperimentCounts" -> 
             17|>, <|"TrainingSizes" -> 70, "TimeBudgets" -> 
             3.4726809169026684`, "ElapsedTimes" -> 8.041316, 
             "ExperimentCounts" -> 13|>, <|
            "TrainingSizes" -> 300, "TimeBudgets" -> 4.960972738432393, 
             "ElapsedTimes" -> 5.6766380000000005`, "ExperimentCounts" -> 
             9|>, <|"TrainingSizes" -> 1500, "TimeBudgets" -> 
             7.087103912046272, "ElapsedTimes" -> 7.380749, 
             "ExperimentCounts" -> 8|>, <|
            "TrainingSizes" -> 8000, "TimeBudgets" -> 10.124434160066077`, 
             "ElapsedTimes" -> 10.108565, "ExperimentCounts" -> 5|>}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 5], <||>]|>, "AnomalyDetector" -> 
       None, "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|"Type" -> "Image", "Weight" -> 1, "Values" -> {
                Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcK1DlIGRwe0mFqkJQowyDg76jHoYMu9smaWXffj//4eoFrrUQQvu
vDcgxk5WMzSpffz618GMyxJsa9HkZge8AlG/p4iz1OJwqAsjYz02iUQvVmZG
833/sEg9lGBkZPR9hd3Aze0RkoySU+9hl/3/aq0lI+/EXzhk/3ZyM05AE+s9
D2Pt5kQLl3VSF+HsYH5UKzX1EexIxnPIUhdZD8GZkcyWKI45y7gHwvgzRZJR
+yGKkZfY3N4BqQ87kxi5sl+iOdOIUdLe3l6ekd1gO4a3vuRKAkNMMO0yhgwd
AQDlY7un
                 "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
              "ID" -> 4477200613334879949|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 43.018799, 
         "MaxTrainingMemory" -> 213901520, "DataMemory" -> 12400080, 
         "FunctionMemory" -> 383432, "LanguageVersion" -> {14., 0}, "Date" -> 
         DateObject[{2024, 4, 19, 11, 19, 44.367353`8.39963849621152}, 
           "Instant", "Gregorian", 2.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.90368153100294*^9, 3.903681556063523*^9}, {
   3.903681596224567*^9, 3.9036816014866056`*^9}, 3.903681804666938*^9, 
   3.903682083917114*^9, 3.903682240229617*^9, 3.903682786279201*^9, 
   3.903682824615217*^9, 3.903683015288742*^9, 3.903683068460384*^9, 
   3.903683589606943*^9, 3.92250718609206*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"95f0a07b-fbde-4af9-90c8-caa139435bbd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"confusionMatrix", "=", 
   RowBox[{"ClassifierMeasurements", "[", 
    RowBox[{"mnistCl", ",", "mnistTest", ",", "\"\<ConfusionMatrixPlot\>\""}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9036826888998747`*^9, 3.903682706069249*^9}, {
   3.903682801590607*^9, 3.903682801714488*^9}, 3.903684094497067*^9, {
   3.903684288242679*^9, 3.903684306871913*^9}, {3.922506958711886*^9, 
   3.922506966062265*^9}, {3.922507350940077*^9, 3.9225074466588383`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"b76804b5-e0cc-43f6-ad9b-9c6dbda97973"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"confusionMatrix", ",", 
   RowBox[{"ImageSize", "->", "250"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.922507452266527*^9, {3.9225077522868032`*^9, 3.922507759917231*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"efdb10cf-d9b1-4c41-8c1d-4a18a3462534"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJy1VXss1XEU/12iVJ5pmZiVys0jz3KFjkeTzaNLLGtX8kq4QizKRh4p04SM
zGZLeirVWo15zGOIlkexRbnuz73hPr4/ZsViKjX91c4fv02/7bfz/f322Tmf
cz7nfM+uiMTAaFWKojavvb/PWjs01br0GOjUcE3IzlFC14DHqyTuNMy6CysC
zBgQVB3pNhtUwv1qdU7c/DQkkxlx7qVVPH3UvF2dAZux7TbHDRXg1+4vrpMR
KJlyanKYVgDHrsk4s+wL+h/zE2jgnaJTtBo3xSs3JogBvUejGd5SBRTGFzeV
thEI7TykMeOjAOcy+/xCSorib2i/qW+hGKDDVBVqoyJYznGs90yNRfN6XmHe
HMdn4Gare3pqPIE4l6LbgnwZDAjf7hc5M7Bg6WbSb0zgekKfb2TzDJimderk
lRN43TdZsvxEDtLUtAaLyEkUj9WhuKPAfzGKAS7fc8iwkYDvlkBpMF+O4hua
bQ2n5pXQT/NGitPFoNd+sqgrOQXFU3+euX+sHSdtpZZL4EVrtM6Eqgwynrsm
VGV9RuuA+cF0xPCY3WR0RdBbuaqfZLDt28NxyFfx4laPhKN4rP5WyqcXeD8I
mKc7639yUIKEyopNOz3FOi/MYnphfagMDH7cUkNgKXubbs+tCSj1DrMO2X0e
9Y/5WS8+mB9h+ayfyQiBhSBeRFGlAowjF4fy+vD52rSfOvPhnBLyKtwEjRwa
ZmKWhp/SF9E5ZdsnmF4YH9Wa3Xd16gjwBVL5nSU5dHs6b9hrJWGt7875YZe5
EwQSiz/6WBisztdX00LBxmQUj807W11UArY+y3AjkHmg0kASIwPNs5bhphYi
1rpjdY4N3echG2NA/5qfpNRsHNpcv9vusQ5F+WD9gPFhO3cYfw/fqMzFbAJG
TjQvOEwOP++9FNpV0qD1foU7JyTQ6+K4ItKWQ1D5yNWcPjF6z2N7jW0fYjyt
HlSXR4YQsK47WMvrkEFSj+7hAkqM7he2ffjX0pf164/RY2vfFMV2b7KNt173
OWaX7W001f0Z4HNaT2WACGrfMQXuVdEo//+dFza/6xX3F8NFrdg=
   "], {{0, 0}, {10, 10}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["970", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "970", "\" examples of \"", "0", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9594460929772503`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9897959183673469`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9743847312908086`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{970, " examples of ", 0, " correctly classified"}], 
         Row[{"Precision = ", 0.9594460929772503}], 
         Row[{"Recall = ", 0.9897959183673469}], 
         Row[{"FScore = ", 0.9743847312908086}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "1", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 1, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["16", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "16", "\" examples of \"", "2", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.01582591493570722`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.015503875968992248`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{16, " examples of ", 2, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.01582591493570722}], 
         Row[{"Row fraction = ", 0.015503875968992248`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "3", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 3, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "4", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0009891196834817012`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0010183299389002036`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 4, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.0009891196834817012}], 
         Row[{"Row fraction = ", 0.0010183299389002036`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "5", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.002967359050445104`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0033632286995515697`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 5, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.002967359050445104}], 
         Row[{"Row fraction = ", 0.0033632286995515697`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["8", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "8", "\" examples of \"", "6", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.00791295746785361`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.008350730688935281`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{8, " examples of ", 6, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.00791295746785361}], 
         Row[{"Row fraction = ", 0.008350730688935281}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "7", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 7, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "6", "\" examples of \"", "8", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.005934718100890208`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.006160164271047228`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{6, " examples of ", 8, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.005934718100890208}], 
         Row[{"Row fraction = ", 0.006160164271047228}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "7", "\" examples of \"", "9", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.006923837784371909`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.006937561942517344`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{7, " examples of ", 9, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.006923837784371909}], 
         Row[{"Row fraction = ", 0.006937561942517344}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "0", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0008264462809917355`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0010204081632653062`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 0, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.0008264462809917355}], 
         Row[{"Row fraction = ", 0.0010204081632653062`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1130", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1130", "\" examples of \"", "1", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9338842975206612`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9955947136563876`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9637526652452025`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1130, " examples of ", 1, " correctly classified"}], 
         Row[{"Precision = ", 0.9338842975206612}], 
         Row[{"Recall = ", 0.9955947136563876}], 
         Row[{"FScore = ", 0.9637526652452025}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["18", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "18", "\" examples of \"", "2", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.01487603305785124`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.01744186046511628`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{18, " examples of ", 2, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.01487603305785124}], 
         Row[{"Row fraction = ", 0.01744186046511628}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "3", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0024793388429752068`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0029702970297029703`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 3, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.0024793388429752068`}], 
         Row[{"Row fraction = ", 0.0029702970297029703`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["14", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "14", "\" examples of \"", "4", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.011570247933884297`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.014256619144602852`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{14, " examples of ", 4, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.011570247933884297`}], 
         Row[{"Row fraction = ", 0.014256619144602852`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "5", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0008264462809917355`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0011210762331838565`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 5, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.0008264462809917355}], 
         Row[{"Row fraction = ", 0.0011210762331838565`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "4", "\" examples of \"", "6", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003305785123966942`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0041753653444676405`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{4, " examples of ", 6, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.003305785123966942}], 
         Row[{"Row fraction = ", 0.0041753653444676405`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["29", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "29", "\" examples of \"", "7", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.023966942148760332`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.02821011673151751`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{29, " examples of ", 7, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.023966942148760332`}], 
         Row[{"Row fraction = ", 0.02821011673151751}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "4", "\" examples of \"", "8", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003305785123966942`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.004106776180698152`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{4, " examples of ", 8, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.003305785123966942}], 
         Row[{"Row fraction = ", 0.004106776180698152}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "6", "\" examples of \"", "9", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0049586776859504135`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.005946481665014866`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{6, " examples of ", 9, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.0049586776859504135`}], 
         Row[{"Row fraction = ", 0.005946481665014866}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "0", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0010235414534288639`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0010204081632653062`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 0, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.0010235414534288639`}], 
         Row[{"Row fraction = ", 0.0010204081632653062`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "1", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0020470829068577278`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.001762114537444934`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 1, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.0020470829068577278`}], 
         Row[{"Row fraction = ", 0.001762114537444934}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["961", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "961", "\" examples of \"", "2", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9836233367451381`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9312015503875969`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9566948730711795`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{961, " examples of ", 2, " correctly classified"}], 
         Row[{"Precision = ", 0.9836233367451381}], 
         Row[{"Recall = ", 0.9312015503875969}], 
         Row[{"FScore = ", 0.9566948730711795}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "3", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0020470829068577278`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0019801980198019802`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 3, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.0020470829068577278`}], 
         Row[{"Row fraction = ", 0.0019801980198019802`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "4", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 4, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "5", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 5, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "6", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 6, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "4", "\" examples of \"", "7", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0040941658137154556`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0038910505836575876`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{4, " examples of ", 7, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.0040941658137154556`}], 
         Row[{"Row fraction = ", 0.0038910505836575876`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "5", "\" examples of \"", "8", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.00511770726714432`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.00513347022587269`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{5, " examples of ", 8, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.00511770726714432}], 
         Row[{"Row fraction = ", 0.00513347022587269}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "9", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0020470829068577278`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0019821605550049554`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 9, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.0020470829068577278`}], 
         Row[{"Row fraction = ", 0.0019821605550049554`}]}], "Tooltip"]& ]}, {
    
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "0", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 0, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "1", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0009794319294809011`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.000881057268722467`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 1, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.0009794319294809011}], 
         Row[{"Row fraction = ", 0.000881057268722467}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "7", "\" examples of \"", "2", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0068560235063663075`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.006782945736434108`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{7, " examples of ", 2, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.0068560235063663075`}], 
         Row[{"Row fraction = ", 0.006782945736434108}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["979", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "979", "\" examples of \"", "3", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9588638589618022`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9693069306930693`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9640571147218119`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{979, " examples of ", 3, " correctly classified"}], 
         Row[{"Precision = ", 0.9588638589618022}], 
         Row[{"Recall = ", 0.9693069306930693}], 
         Row[{"FScore = ", 0.9640571147218119}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "4", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 4, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["10", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "10", "\" examples of \"", "5", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.009794319294809012`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.011210762331838564`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{10, " examples of ", 5, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.009794319294809012}], 
         Row[{"Row fraction = ", 0.011210762331838564`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "6", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 6, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "7", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 7, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["15", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "15", "\" examples of \"", "8", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.014691478942213516`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.015400410677618069`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{15, " examples of ", 8, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.014691478942213516`}], 
         Row[{"Row fraction = ", 0.015400410677618069`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "9", "\" examples of \"", "9", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.00881488736532811`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.008919722497522299`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{9, " examples of ", 9, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.00881488736532811}], 
         Row[{"Row fraction = ", 0.008919722497522299}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "0", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 0, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "1", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 1, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "2", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0020964360587002098`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.001937984496124031`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 2, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.0020964360587002098`}], 
         Row[{"Row fraction = ", 0.001937984496124031}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "3", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0010482180293501049`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0009900990099009901`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 3, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.0010482180293501049`}], 
         Row[{"Row fraction = ", 0.0009900990099009901}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["931", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "931", "\" examples of \"", "4", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9758909853249476`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9480651731160896`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9617768595041324`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{931, " examples of ", 4, " correctly classified"}], 
         Row[{"Precision = ", 0.9758909853249476}], 
         Row[{"Recall = ", 0.9480651731160896}], 
         Row[{"FScore = ", 0.9617768595041324}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "5", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0010482180293501049`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0011210762331838565`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 5, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.0010482180293501049`}], 
         Row[{"Row fraction = ", 0.0011210762331838565`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "6", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0031446540880503146`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.003131524008350731`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 6, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.0031446540880503146`}], 
         Row[{"Row fraction = ", 0.003131524008350731}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "7", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0020964360587002098`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0019455252918287938`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 7, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.0020964360587002098`}], 
         Row[{"Row fraction = ", 0.0019455252918287938`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "5", "\" examples of \"", "8", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.005241090146750524`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.00513347022587269`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{5, " examples of ", 8, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.005241090146750524}], 
         Row[{"Row fraction = ", 0.00513347022587269}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "9", "\" examples of \"", "9", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.009433962264150943`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.008919722497522299`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{9, " examples of ", 9, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.009433962264150943}], 
         Row[{"Row fraction = ", 0.008919722497522299}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "0", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0022624434389140274`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0020408163265306124`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 0, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.0022624434389140274`}], 
         Row[{"Row fraction = ", 0.0020408163265306124`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "1", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 1, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "2", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 2, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["10", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "10", "\" examples of \"", "3", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.011312217194570135`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.009900990099009901`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{10, " examples of ", 3, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.011312217194570135`}], 
         Row[{"Row fraction = ", 0.009900990099009901}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "4", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 4, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["860", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "860", "\" examples of \"", "5", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9728506787330317`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9641255605381166`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9684684684684685`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{860, " examples of ", 5, " correctly classified"}], 
         Row[{"Precision = ", 0.9728506787330317}], 
         Row[{"Recall = ", 0.9641255605381166}], 
         Row[{"FScore = ", 0.9684684684684685}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "6", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0011312217194570137`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0010438413361169101`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 6, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.0011312217194570137`}], 
         Row[{"Row fraction = ", 0.0010438413361169101`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "7", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 7, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "9", "\" examples of \"", "8", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.010180995475113122`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.009240246406570842`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{9, " examples of ", 8, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.010180995475113122`}], 
         Row[{"Row fraction = ", 0.009240246406570842}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "9", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0022624434389140274`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0019821605550049554`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 9, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.0022624434389140274`}], 
         Row[{"Row fraction = ", 0.0019821605550049554`}]}], "Tooltip"]& ]}, {
    
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "5", "\" examples of \"", "0", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.005149330587023687`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.00510204081632653`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{5, " examples of ", 0, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.005149330587023687}], 
         Row[{"Row fraction = ", 0.00510204081632653}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "1", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0020597322348094747`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.001762114537444934`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 1, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.0020597322348094747`}], 
         Row[{"Row fraction = ", 0.001762114537444934}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "2", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003089598352214212`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0029069767441860465`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 2, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.003089598352214212}], 
         Row[{"Row fraction = ", 0.0029069767441860465`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "3", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 3, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "5", "\" examples of \"", "4", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.005149330587023687`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0050916496945010185`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{5, " examples of ", 4, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.005149330587023687}], 
         Row[{"Row fraction = ", 0.0050916496945010185`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "11", "\" examples of \"", "5", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.01132852729145211`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.01233183856502242`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{11, " examples of ", 5, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.01132852729145211}], 
         Row[{"Row fraction = ", 0.01233183856502242}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["941", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "941", "\" examples of \"", "6", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9691040164778579`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9822546972860126`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.975635044064282`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{941, " examples of ", 6, " correctly classified"}], 
         Row[{"Precision = ", 0.9691040164778579}], 
         Row[{"Recall = ", 0.9822546972860126}], 
         Row[{"FScore = ", 0.975635044064282}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "7", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 7, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "8", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003089598352214212`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.003080082135523614`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 8, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.003089598352214212}], 
         Row[{"Row fraction = ", 0.003080082135523614}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "9", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0010298661174047373`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0009910802775024777`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 9, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.0010298661174047373`}], 
         Row[{"Row fraction = ", 0.0009910802775024777}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "0", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0009699321047526673`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0010204081632653062`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 0, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.0009699321047526673}], 
         Row[{"Row fraction = ", 0.0010204081632653062`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "1", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 1, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["19", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "19", "\" examples of \"", "2", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.01842870999030068`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.018410852713178296`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{19, " examples of ", 2, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.01842870999030068}], 
         Row[{"Row fraction = ", 0.018410852713178296`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["8", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "8", "\" examples of \"", "3", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.007759456838021339`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.007920792079207921`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{8, " examples of ", 3, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.007759456838021339}], 
         Row[{"Row fraction = ", 0.007920792079207921}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "4", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.002909796314258002`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.003054989816700611`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 4, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.002909796314258002}], 
         Row[{"Row fraction = ", 0.003054989816700611}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "5", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0019398642095053346`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.002242152466367713`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 5, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.0019398642095053346`}], 
         Row[{"Row fraction = ", 0.002242152466367713}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "6", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 6, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["978", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "978", "\" examples of \"", "7", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9485935984481086`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9513618677042801`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9499757163671684`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{978, " examples of ", 7, " correctly classified"}], 
         Row[{"Precision = ", 0.9485935984481086}], 
         Row[{"Recall = ", 0.9513618677042801}], 
         Row[{"FScore = ", 0.9499757163671684}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "9", "\" examples of \"", "8", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.008729388942774006`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.009240246406570842`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{9, " examples of ", 8, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.008729388942774006}], 
         Row[{"Row fraction = ", 0.009240246406570842}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "11", "\" examples of \"", "9", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.01066925315227934`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.010901883052527254`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{11, " examples of ", 9, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.01066925315227934}], 
         Row[{"Row fraction = ", 0.010901883052527254`}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "0", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 0, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "1", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 1, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "6", "\" examples of \"", "2", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.006507592190889371`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.005813953488372093`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{6, " examples of ", 2, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.006507592190889371}], 
         Row[{"Row fraction = ", 0.005813953488372093}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "4", "\" examples of \"", "3", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.004338394793926247`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0039603960396039604`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{4, " examples of ", 3, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.004338394793926247}], 
         Row[{"Row fraction = ", 0.0039603960396039604`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "4", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0010845986984815619`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0010183299389002036`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 4, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.0010845986984815619`}], 
         Row[{"Row fraction = ", 0.0010183299389002036`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "5", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 5, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "6", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0010845986984815619`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0010438413361169101`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 6, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.0010845986984815619`}], 
         Row[{"Row fraction = ", 0.0010438413361169101`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "7", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 7, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["909", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "909", "\" examples of \"", "8", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9859002169197397`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9332648870636551`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9588607594936708`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{909, " examples of ", 8, " correctly classified"}], 
         Row[{"Precision = ", 0.9859002169197397}], 
         Row[{"Recall = ", 0.9332648870636551}], 
         Row[{"FScore = ", 0.9588607594936708}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "9", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0010845986984815619`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0009910802775024777`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 9, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.0010845986984815619`}], 
         Row[{"Row fraction = ", 0.0009910802775024777}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "0", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 0, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "1", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 1, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "2", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 2, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "3", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.002944062806673209`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0029702970297029703`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 3, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.002944062806673209}], 
         Row[{"Row fraction = ", 0.0029702970297029703`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["27", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "27", "\" examples of \"", "4", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.02649656526005888`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0274949083503055`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{27, " examples of ", 4, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.02649656526005888}], 
         Row[{"Row fraction = ", 0.0274949083503055}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "4", "\" examples of \"", "5", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003925417075564278`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.004484304932735426`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{4, " examples of ", 5, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.003925417075564278}], 
         Row[{"Row fraction = ", 0.004484304932735426}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "6", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 6, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["15", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "15", "\" examples of \"", "7", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.014720314033366046`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.014591439688715954`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{15, " examples of ", 7, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.014720314033366046`}], 
         Row[{"Row fraction = ", 0.014591439688715954`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "9", "\" examples of \"", "8", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.008832188420019628`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.009240246406570842`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{9, " examples of ", 8, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.008832188420019628}], 
         Row[{"Row fraction = ", 0.009240246406570842}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["961", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.894839181882503], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "961", "\" examples of \"", "9", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.943081452404318`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9524281466798811`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9477317554240632`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{961, " examples of ", 9, " correctly classified"}], 
         Row[{"Precision = ", 0.943081452404318}], 
         Row[{"Recall = ", 0.9524281466798811}], 
         Row[{"FScore = ", 0.9477317554240632}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 9.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{"980", "\" example\"", "\"s\"", "\" of class \"", "0"},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9897959183673469`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{980, " example", "s", " of class ", 0}], 
        Row[{"Recall = ", 0.9897959183673469}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 8.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1135", "\" example\"", "\"s\"", "\" of class \"", "1"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9955947136563876`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1135, " example", "s", " of class ", 1}], 
        Row[{"Recall = ", 0.9955947136563876}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 7.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1032", "\" example\"", "\"s\"", "\" of class \"", "2"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9312015503875969`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1032, " example", "s", " of class ", 2}], 
        Row[{"Recall = ", 0.9312015503875969}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 6.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1010", "\" example\"", "\"s\"", "\" of class \"", "3"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9693069306930693`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1010, " example", "s", " of class ", 3}], 
        Row[{"Recall = ", 0.9693069306930693}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 5.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{"982", "\" example\"", "\"s\"", "\" of class \"", "4"},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9480651731160896`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{982, " example", "s", " of class ", 4}], 
        Row[{"Recall = ", 0.9480651731160896}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 4.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{"892", "\" example\"", "\"s\"", "\" of class \"", "5"},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9641255605381166`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{892, " example", "s", " of class ", 5}], 
        Row[{"Recall = ", 0.9641255605381166}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 3.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{"958", "\" example\"", "\"s\"", "\" of class \"", "6"},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9822546972860126`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{958, " example", "s", " of class ", 6}], 
        Row[{"Recall = ", 0.9822546972860126}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 2.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1028", "\" example\"", "\"s\"", "\" of class \"", "7"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9513618677042801`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1028, " example", "s", " of class ", 7}], 
        Row[{"Recall = ", 0.9513618677042801}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{"974", "\" example\"", "\"s\"", "\" of class \"", "8"},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9332648870636551`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{974, " example", "s", " of class ", 8}], 
        Row[{"Recall = ", 0.9332648870636551}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1009", "\" example\"", "\"s\"", "\" of class \"", "9"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9524281466798811`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1009, " example", "s", " of class ", 9}], 
        Row[{"Recall = ", 0.9524281466798811}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1011", "\" example\"", "\"s\"", "\" classified as \"", "0"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9594460929772503`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1011, " example", "s", " classified as ", 0}], 
        Row[{"Precision = ", 0.9594460929772503}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1210", "\" example\"", "\"s\"", "\" classified as \"", "1"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9338842975206612`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1210, " example", "s", " classified as ", 1}], 
        Row[{"Precision = ", 0.9338842975206612}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "977", "\" example\"", "\"s\"", "\" classified as \"", "2"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9836233367451381`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{977, " example", "s", " classified as ", 2}], 
        Row[{"Precision = ", 0.9836233367451381}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1021", "\" example\"", "\"s\"", "\" classified as \"", "3"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9588638589618022`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1021, " example", "s", " classified as ", 3}], 
        Row[{"Precision = ", 0.9588638589618022}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {4.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "954", "\" example\"", "\"s\"", "\" classified as \"", "4"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9758909853249476`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{954, " example", "s", " classified as ", 4}], 
        Row[{"Precision = ", 0.9758909853249476}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "884", "\" example\"", "\"s\"", "\" classified as \"", "5"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9728506787330317`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{884, " example", "s", " classified as ", 5}], 
        Row[{"Precision = ", 0.9728506787330317}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {6.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "971", "\" example\"", "\"s\"", "\" classified as \"", "6"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9691040164778579`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{971, " example", "s", " classified as ", 6}], 
        Row[{"Precision = ", 0.9691040164778579}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {7.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1031", "\" example\"", "\"s\"", "\" classified as \"", "7"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9485935984481086`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1031, " example", "s", " classified as ", 7}], 
        Row[{"Precision = ", 0.9485935984481086}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {8.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "922", "\" example\"", "\"s\"", "\" classified as \"", "8"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9859002169197397`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{922, " example", "s", " classified as ", 8}], 
        Row[{"Precision = ", 0.9859002169197397}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {9.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1019", "\" example\"", "\"s\"", "\" classified as \"", "9"}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.943081452404318`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1019, " example", "s", " classified as ", 9}], 
        Row[{"Precision = ", 0.943081452404318}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{9.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 0.], TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["3", BoxRotation -> 0.], TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["4", BoxRotation -> 0.], TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["5", BoxRotation -> 0.], TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["6", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["7", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["8", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["9", BoxRotation -> 0.], TraditionalForm]}}, {{9.5, 
       FormBox["980", TraditionalForm]}, {8.5, 
       FormBox["1135", TraditionalForm]}, {7.5, 
       FormBox["1032", TraditionalForm]}, {6.5, 
       FormBox["1010", TraditionalForm]}, {5.5, 
       FormBox["982", TraditionalForm]}, {4.5, 
       FormBox["892", TraditionalForm]}, {3.5, 
       FormBox["958", TraditionalForm]}, {2.5, 
       FormBox["1028", TraditionalForm]}, {1.5, 
       FormBox["974", TraditionalForm]}, {0.5, 
       FormBox["1009", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["1011", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["1210", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["977", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["1021", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["954", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["884", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["971", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["1031", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["922", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["1019", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["2", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["3", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["4", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["5", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["6", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["7", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["8", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["9", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12.894839181882503`,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{{3.9225077570763617`*^9, 3.9225077602298717`*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"f759730b-60e1-4e58-95fb-5e80ac1fd2a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<pics/08-confusion-matrix-plot.pdf\>\""}], ",", "%"}], "]"}]], "Input",\

 CellChangeTimes->{{3.903684118314237*^9, 3.903684191911677*^9}, {
  3.903684322481073*^9, 3.9036843319928226`*^9}, {3.9225077674234962`*^9, 
  3.922507796290254*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"4ef749e8-0c91-40d7-a218-54becd4117f1"],

Cell[BoxData["\<\"/home/jam/Kuweta/mma_lessons/code/pics/08-confusion-matrix-\
plot.pdf\"\>"], "Output",
 CellChangeTimes->{{3.903684125173917*^9, 3.903684139680455*^9}, 
   3.903684204243051*^9, 3.903684333136181*^9, 3.92250721789915*^9, 
   3.9225078003820953`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"453684bc-0762-409f-acb2-8bf0ff4a8b9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"mnistCl2", ",", "mnistTest"}], "]"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"580cad92-dd87-4efb-8b41-ce4c101c5a6b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Classifier method"], 
                  TextCell["Classifier method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "LogisticRegression",ExpressionUUID->
                "902b3219-90f9-47b9-9484-71de1ef40e6d"],
               TextCell["LogisticRegression"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Number of test examples"], 
                  TextCell["Number of test examples"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], "10000"},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Accuracy"], 
                  TextCell["Accuracy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"89.22", "0.31"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   89.2199999999999988631`3., 0.3101431586830500908`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                   "\"Accuracy if predicting the commonest class\"", 
                   TooltipStyle -> "TextStyling"], 
                  Annotation[#, "Accuracy if predicting the commonest class", 
                   "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"11.35", "0.32"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   11.3499999999999996447`3., 0.3172188720446457721`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Geometric mean of probabilities"], 
                  TextCell["Geometric mean of probabilities"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.6907494304729946411`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0068318507572159848`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.6770857289585626715`3.",
                   "\", \"", "0.7044131319874266106`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.6770857289585626715`3., 
                  ", ", 0.7044131319874266106`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Mean cross entropy"], 
                  TextCell["Mean cross entropy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.369978139684206675`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0098903293679820647`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.3501974809482425455`3.",
                   "\", \"", "0.3897587984201708045`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.3501974809482425455`3., 
                  ", ", 0.3897587984201708045`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"4.7`", 
                
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"28.`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"ms\""}], "examples per millisecond", 
                FractionBox["\"Examples\"", "\"Milliseconds\""]},
               "Quantity"]},
             {
              ItemBox[
               GraphicsBox[RasterBox[CompressedData["
1:eJyVVWlMVFcYHRmtZZjWRlEhA0y1qQMpWgjQ4lg5BWKwoiwFKmoB2YYqCGqo
slWpUEEM0SoIDWvFWlCx0tpWtgQtCCjiArLINgswzHKf4gaDYLf4r/nS8JKb
+27ycr7vO+fc85aFxX0ayefxeIJX65/34A5Vk0szg9XQcw+rSB3mWySdELsN
Y921q61lbhxk6REmkR8y1P4ZdOfxyzGER+pm7p1nCK+JCUid0SLr0n3PAkcV
Al37s88pGXr4X0vr2nRIz7DqLfMewUSXPvn7GT2Oyz4JbvQYQ3xgirqxoBfr
jzaNMEcOxnvFC0/xGaZbTSrtEsbA+/d59J99Z0FRm62IgR+aWTXRMoZOv9tb
uLw+bLK8ZXnInIPXplzxZIEeB4OjZBd2qvHiqz9idvkxnE2b71JpJof4Tsmq
YsEe+P3UGbDkJcNJa5OVWx31MHpyTWwdNEriRDc89606xLAhrWjHojAtvBYM
KfxLFWi/4fBsxVqGt2PfH9i4TQNz0b2mcs0AieMzemd1mwmHcanPCpsv9Giw
XuyuVdF1KT69Pb3uGiQMgx6F73a7y5Fv7Lb+sHgvORel4/ZCtSKzmqGhrcrL
216H9aOSuKBaFcmz8/2La+0zOEjl9Zo4KYd9QkNqfamO7J/Skdp9ux1iKso4
qIRFyzbnDkC6U1DVsDkUa6N++7IpmkNqrcPE3XsMhlJ/6eqTWtycY9fbv4Hh
QGp8l+iYBqcO7xOunBhEi7Nt/YlAhr4T1be11zQQJGZXBBrJSRzK/9S8lC6f
JfTs2f6I4YMl1x2O8vRwr989Hdk1grE1sf05PzIod9ea2WQNId2mfPqH4V0k
PqUXxZts1UNzy2KGeeWSz6tatWhLSrPurVSSfqP6NMtz8pCN6dEcYZGp06qx
Mi37zbxVPeQ9Fd64Oje8XYczHfKr7xQoIMpoL1JUJ5G+2iaQVzztZEgeX+PK
8nW47tv2q6JlGPtNDhlFt+uRYCj4ZWOiGlV1EwOX47pIX1G8uRvqK7f4cGg6
VTHXMZohxenSk8vfaMj+nYTnl6lzOOQ/NlK5xHJwcvM8c1Cix8Ouvsz3phj8
mgP0i0YH0VdnmcVv2UHWna1/KB4STm9+1m3LUN7x/PWPlmjg/JQ33tncT85F
4VO5NDgznZRjx2Gq8VzhVOIgpvgHOjMWRpG+ovxD9UP9F8zyjxlS4hlcTb2+
k9lqIQgJ6f7dVEHqQvFJ1Z07VDbaF87Bp7Cvxtx0EG+FTE49SY8g/UPlJJUP
lJ93TDx2ijr+t165yjBlrhbCdfbzlkqUEIWeXNwsYxieY1yaN6nBRps3Lj/L
lsPTv3WOs4TDhZAHZs239XDJqT4SO/7/OalIMr3ooXjw6szjSYt/3pKcyGHg
VsKj0tc4XOk6G/TCXEf2P9scpnCo+0LlLYW//IqoJNTA4fSRbRnGun5YdNxs
jFmxlfyeykPK/7PF+diu5tsFwRyWV3AzRiUM0mijpfuF9LyzrfsX229xQA==

                 "], {{0, 0}, {10, 10}}, {0, 1}],
                Epilog->{{
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["956", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "956", "\" examples of \"", "0", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9018867924528302`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9755102040816327`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9372549019607843`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{956, " examples of ", 0, " correctly classified"}], 
                    Row[{"Precision = ", 0.9018867924528302}], 
                    Row[{"Recall = ", 0.9755102040816327}], 
                    Row[{"FScore = ", 0.9372549019607843}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "1", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 1, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["16", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" examples of \"", "2", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01509433962264151`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.015503875968992248`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " examples of ", 2, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.01509433962264151}], 
                    Row[{"Row fraction = ", 0.015503875968992248`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "6", "\" examples of \"", "3", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.005660377358490566`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.005940594059405941`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{6, " examples of ", 3, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.005660377358490566}], 
                    Row[{"Row fraction = ", 0.005940594059405941}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "4", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0018867924528301887`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.002036659877800407`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 4, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.0018867924528301887`}], 
                    Row[{"Row fraction = ", 0.002036659877800407}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["19", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "19", "\" examples of \"", "5", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.017924528301886792`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.021300448430493273`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{19, " examples of ", 5, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.017924528301886792`}], 
                    Row[{"Row fraction = ", 0.021300448430493273`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["26", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "26", "\" examples of \"", "6", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.024528301886792454`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.027139874739039668`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{26, " examples of ", 6, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.024528301886792454`}], 
                    Row[{"Row fraction = ", 0.027139874739039668`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "7", "\" examples of \"", "7", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.006603773584905661`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.006809338521400778`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{7, " examples of ", 7, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.006603773584905661}], 
                    Row[{"Row fraction = ", 0.006809338521400778}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["12", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" examples of \"", "8", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.011320754716981131`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.012320328542094456`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{12, " examples of ", 8, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.011320754716981131`}], 
                    Row[{"Row fraction = ", 0.012320328542094456`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["16", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" examples of \"", "9", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01509433962264151`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.015857284440039643`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " examples of ", 9, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.01509433962264151}], 
                    Row[{"Row fraction = ", 0.015857284440039643`}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "0", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 0, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1097", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1097", "\" examples of \"", "1", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9456896551724138`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9665198237885463`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9559912854030501`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1097, " examples of ", 1, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9456896551724138}], 
                    Row[{"Recall = ", 0.9665198237885463}], 
                    Row[{"FScore = ", 0.9559912854030501}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "6", "\" examples of \"", "2", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.005172413793103448`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.005813953488372093`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{6, " examples of ", 2, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.005172413793103448}], 
                    Row[{"Row fraction = ", 0.005813953488372093}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "3", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0017241379310344827`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0019801980198019802`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 3, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.0017241379310344827`}], 
                    Row[{"Row fraction = ", 0.0019801980198019802`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "6", "\" examples of \"", "4", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.005172413793103448`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.006109979633401222`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{6, " examples of ", 4, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.005172413793103448}], 
                    Row[{"Row fraction = ", 0.006109979633401222}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" examples of \"", "5", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.009482758620689655`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.01233183856502242`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{11, " examples of ", 5, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.009482758620689655}], 
                    Row[{"Row fraction = ", 0.01233183856502242}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4", "\" examples of \"", "6", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0034482758620689655`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0041753653444676405`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4, " examples of ", 6, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.0034482758620689655`}], 
                    Row[{"Row fraction = ", 0.0041753653444676405`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["17", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "17", "\" examples of \"", "7", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.014655172413793103`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.016536964980544747`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{17, " examples of ", 7, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.014655172413793103`}], 
                    Row[{"Row fraction = ", 0.016536964980544747`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["10", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" examples of \"", "8", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.008620689655172414`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.01026694045174538`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " examples of ", 8, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.008620689655172414}], 
                    Row[{"Row fraction = ", 0.01026694045174538}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "7", "\" examples of \"", "9", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.00603448275862069`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.006937561942517344`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{7, " examples of ", 9, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.00603448275862069}], 
                    Row[{"Row fraction = ", 0.006937561942517344}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "7", "\" examples of \"", "0", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.006597549481621112`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.007142857142857143`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{7, " examples of ", 0, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.006597549481621112}], 
                    Row[{"Row fraction = ", 0.007142857142857143}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "3", "\" examples of \"", "1", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.002827521206409048`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0026431718061674008`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{3, " examples of ", 1, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.002827521206409048}], 
                    Row[{"Row fraction = ", 0.0026431718061674008`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["914", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "914", "\" examples of \"", "2", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8614514608859567`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.8856589147286822`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.8733874820831342`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{914, " examples of ", 2, " correctly classified"}], 
                    Row[{"Precision = ", 0.8614514608859567}], 
                    Row[{"Recall = ", 0.8856589147286822}], 
                    Row[{"FScore = ", 0.8733874820831342}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["28", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "28", "\" examples of \"", "3", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.02639019792648445`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.027722772277227723`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{28, " examples of ", 3, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.02639019792648445}], 
                    Row[{"Row fraction = ", 0.027722772277227723`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["8", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "8", "\" examples of \"", "4", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.007540056550424128`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.008146639511201629`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{8, " examples of ", 4, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.007540056550424128}], 
                    Row[{"Row fraction = ", 0.008146639511201629}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["13", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "13", "\" examples of \"", "5", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.012252591894439209`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.014573991031390135`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{13, " examples of ", 5, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.012252591894439209`}], 
                    Row[{"Row fraction = ", 0.014573991031390135`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["16", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" examples of \"", "6", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.015080113100848256`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.016701461377870562`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " examples of ", 6, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.015080113100848256`}], 
                    Row[{"Row fraction = ", 0.016701461377870562`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["33", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "33", "\" examples of \"", "7", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.03110273327049953`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.032101167315175094`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{33, " examples of ", 7, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.03110273327049953}], 
                    Row[{"Row fraction = ", 0.032101167315175094`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["21", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "21", "\" examples of \"", "8", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.019792648444863337`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.021560574948665298`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{21, " examples of ", 8, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.019792648444863337`}], 
                    Row[{"Row fraction = ", 0.021560574948665298`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["18", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "18", "\" examples of \"", "9", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.016965127238454288`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.017839444995044598`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{18, " examples of ", 9, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.016965127238454288`}], 
                    Row[{"Row fraction = ", 0.017839444995044598`}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "0", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0019305019305019305`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0020408163265306124`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 0, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.0019305019305019305`}], 
                    Row[{"Row fraction = ", 0.0020408163265306124`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4", "\" examples of \"", "1", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.003861003861003861`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.003524229074889868`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4, " examples of ", 1, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.003861003861003861}], 
                    Row[{"Row fraction = ", 0.003524229074889868}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["10", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" examples of \"", "2", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.009652509652509652`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.009689922480620155`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " examples of ", 2, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.009652509652509652}], 
                    Row[{"Row fraction = ", 0.009689922480620155}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["908", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "908", "\" examples of \"", "3", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8764478764478765`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.899009900990099`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.887585532746823`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{908, " examples of ", 3, " correctly classified"}], 
                    Row[{"Precision = ", 0.8764478764478765}], 
                    Row[{"Recall = ", 0.899009900990099}], 
                    Row[{"FScore = ", 0.887585532746823}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "4", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0009652509652509653`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0010183299389002036`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 4, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.0009652509652509653}], 
                    Row[{"Row fraction = ", 0.0010183299389002036`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["65", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "65", "\" examples of \"", "5", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.06274131274131274`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.07286995515695067`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{65, " examples of ", 5, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.06274131274131274}], 
                    Row[{"Row fraction = ", 0.07286995515695067}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "6", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0019305019305019305`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0020876826722338203`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 6, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.0019305019305019305`}], 
                    Row[{"Row fraction = ", 0.0020876826722338203`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "7", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0019305019305019305`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0019455252918287938`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 7, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.0019305019305019305`}], 
                    Row[{"Row fraction = ", 0.0019455252918287938`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["28", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "28", "\" examples of \"", "8", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.02702702702702703`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.028747433264887063`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{28, " examples of ", 8, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.02702702702702703}], 
                    Row[{"Row fraction = ", 0.028747433264887063`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["14", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "14", "\" examples of \"", "9", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.013513513513513514`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.013875123885034688`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{14, " examples of ", 9, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.013513513513513514`}], 
                    Row[{"Row fraction = ", 0.013875123885034688`}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "0", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 0, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "1", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 1, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["12", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" examples of \"", "2", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.011881188118811881`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.011627906976744186`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{12, " examples of ", 2, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.011881188118811881`}], 
                    Row[{"Row fraction = ", 0.011627906976744186`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "3", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 3, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["900", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "900", "\" examples of \"", "4", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8910891089108911`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9164969450101833`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9036144578313253`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{900, " examples of ", 4, " correctly classified"}], 
                    Row[{"Precision = ", 0.8910891089108911}], 
                    Row[{"Recall = ", 0.9164969450101833}], 
                    Row[{"FScore = ", 0.9036144578313253}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["8", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "8", "\" examples of \"", "5", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.007920792079207921`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.008968609865470852`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{8, " examples of ", 5, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.007920792079207921}], 
                    Row[{"Row fraction = ", 0.008968609865470852}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["14", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "14", "\" examples of \"", "6", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.013861386138613862`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.014613778705636743`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{14, " examples of ", 6, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.013861386138613862`}], 
                    Row[{"Row fraction = ", 0.014613778705636743`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["10", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" examples of \"", "7", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.009900990099009901`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.009727626459143969`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " examples of ", 7, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.009900990099009901}], 
                    Row[{"Row fraction = ", 0.009727626459143969}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["10", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" examples of \"", "8", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.009900990099009901`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.01026694045174538`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " examples of ", 8, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.009900990099009901}], 
                    Row[{"Row fraction = ", 0.01026694045174538}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["56", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "56", "\" examples of \"", "9", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.055445544554455446`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.05550049554013875`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{56, " examples of ", 9, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.055445544554455446`}], 
                    Row[{"Row fraction = ", 0.05550049554013875}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "7", "\" examples of \"", "0", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.009887005649717515`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.007142857142857143`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{7, " examples of ", 0, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.009887005649717515}], 
                    Row[{"Row fraction = ", 0.007142857142857143}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "1", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 1, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4", "\" examples of \"", "2", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.005649717514124294`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.003875968992248062`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4, " examples of ", 2, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.005649717514124294}], 
                    Row[{"Row fraction = ", 0.003875968992248062}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" examples of \"", "3", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.015536723163841809`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.01089108910891089`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{11, " examples of ", 3, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.015536723163841809`}], 
                    Row[{"Row fraction = ", 0.01089108910891089}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "4", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.002824858757062147`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.002036659877800407`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 4, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.002824858757062147}], 
                    Row[{"Row fraction = ", 0.002036659877800407}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["652", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "652", "\" examples of \"", "5", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9209039548022598`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.7309417040358744`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.8150000000000001`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{652, " examples of ", 5, " correctly classified"}], 
                    Row[{"Precision = ", 0.9209039548022598}], 
                    Row[{"Recall = ", 0.7309417040358744}], 
                    Row[{"FScore = ", 0.8150000000000001}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["13", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "13", "\" examples of \"", "6", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.018361581920903956`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.013569937369519834`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{13, " examples of ", 6, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.018361581920903956`}], 
                    Row[{"Row fraction = ", 0.013569937369519834`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "7", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 7, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" examples of \"", "8", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.015536723163841809`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.011293634496919919`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{11, " examples of ", 8, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.015536723163841809`}], 
                    Row[{"Row fraction = ", 0.011293634496919919`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["8", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "8", "\" examples of \"", "9", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.011299435028248588`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.007928642220019821`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{8, " examples of ", 9, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.011299435028248588`}], 
                    Row[{"Row fraction = ", 0.007928642220019821}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5", "\" examples of \"", "0", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.005268703898840885`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.00510204081632653`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5, " examples of ", 0, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.005268703898840885}], 
                    Row[{"Row fraction = ", 0.00510204081632653}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4", "\" examples of \"", "1", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.004214963119072708`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.003524229074889868`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4, " examples of ", 1, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.004214963119072708}], 
                    Row[{"Row fraction = ", 0.003524229074889868}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["17", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "17", "\" examples of \"", "2", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01791359325605901`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.016472868217054265`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{17, " examples of ", 2, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.01791359325605901}], 
                    Row[{"Row fraction = ", 0.016472868217054265`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "6", "\" examples of \"", "3", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.006322444678609062`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.005940594059405941`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{6, " examples of ", 3, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.006322444678609062}], 
                    Row[{"Row fraction = ", 0.005940594059405941}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["16", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" examples of \"", "4", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01685985247629083`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.016293279022403257`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " examples of ", 4, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.01685985247629083}], 
                    Row[{"Row fraction = ", 0.016293279022403257`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["17", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "17", "\" examples of \"", "5", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01791359325605901`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.01905829596412556`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{17, " examples of ", 5, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.01791359325605901}], 
                    Row[{"Row fraction = ", 0.01905829596412556}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["874", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "874", "\" examples of \"", "6", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9209694415173867`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9123173277661796`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9166229680125851`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{874, " examples of ", 6, " correctly classified"}], 
                    Row[{"Precision = ", 0.9209694415173867}], 
                    Row[{"Recall = ", 0.9123173277661796}], 
                    Row[{"FScore = ", 0.9166229680125851}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "7", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 7, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["10", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" examples of \"", "8", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01053740779768177`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.01026694045174538`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " examples of ", 8, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.01053740779768177}], 
                    Row[{"Row fraction = ", 0.01026694045174538}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "9", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 9, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "0", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0009671179883945841`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0010204081632653062`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 0, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.0009671179883945841}], 
                    Row[{"Row fraction = ", 0.0010204081632653062`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "1", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0009671179883945841`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.000881057268722467`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 1, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.0009671179883945841}], 
                    Row[{"Row fraction = ", 0.000881057268722467}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["20", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "20", "\" examples of \"", "2", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.019342359767891684`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.01937984496124031`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{20, " examples of ", 2, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.019342359767891684`}], 
                    Row[{"Row fraction = ", 0.01937984496124031}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["18", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "18", "\" examples of \"", "3", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.017408123791102514`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.01782178217821782`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{18, " examples of ", 3, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.017408123791102514`}], 
                    Row[{"Row fraction = ", 0.01782178217821782}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "4", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0019342359767891683`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.002036659877800407`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 4, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.0019342359767891683`}], 
                    Row[{"Row fraction = ", 0.002036659877800407}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["15", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    "15", "\" examples of \"", "5", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.014506769825918761`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.016816143497757848`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{15, " examples of ", 5, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.014506769825918761`}], 
                    Row[{"Row fraction = ", 0.016816143497757848`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "6", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0019342359767891683`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0020876826722338203`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 6, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.0019342359767891683`}], 
                    Row[{"Row fraction = ", 0.0020876826722338203`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["928", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "928", "\" examples of \"", "7", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8974854932301741`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9027237354085603`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9000969932104754`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{928, " examples of ", 7, " correctly classified"}], 
                    Row[{"Precision = ", 0.8974854932301741}], 
                    Row[{"Recall = ", 0.9027237354085603}], 
                    Row[{"FScore = ", 0.9000969932104754}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["14", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "14", "\" examples of \"", "8", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.013539651837524178`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.014373716632443531`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{14, " examples of ", 8, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.013539651837524178`}], 
                    Row[{"Row fraction = ", 0.014373716632443531`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["33", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "33", "\" examples of \"", "9", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.031914893617021274`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.03270564915758176`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{33, " examples of ", 9, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.031914893617021274`}], 
                    Row[{"Row fraction = ", 0.03270564915758176}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "0", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0019249278152069298`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0020408163265306124`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 0, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.0019249278152069298`}], 
                    Row[{"Row fraction = ", 0.0020408163265306124`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["26", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "26", "\" examples of \"", "1", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.025024061597690085`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.02290748898678414`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{26, " examples of ", 1, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.025024061597690085`}], 
                    Row[{"Row fraction = ", 0.02290748898678414}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["24", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "24", "\" examples of \"", "2", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.023099133782483156`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.023255813953488372`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{24, " examples of ", 2, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.023099133782483156`}], 
                    Row[{"Row fraction = ", 0.023255813953488372`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["23", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "23", "\" examples of \"", "3", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.02213666987487969`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.02277227722772277`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{23, " examples of ", 3, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.02213666987487969}], 
                    Row[{"Row fraction = ", 0.02277227722772277}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["15", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "15", "\" examples of \"", "4", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.014436958614051972`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.015274949083503055`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{15, " examples of ", 4, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.014436958614051972`}], 
                    Row[{"Row fraction = ", 0.015274949083503055`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["82", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "82", "\" examples of \"", "5", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.07892204042348412`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.09192825112107623`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{82, " examples of ", 5, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.07892204042348412}], 
                    Row[{"Row fraction = ", 0.09192825112107623}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "7", "\" examples of \"", "6", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.006737247353224254`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.007306889352818371`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{7, " examples of ", 6, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.006737247353224254}], 
                    Row[{"Row fraction = ", 0.007306889352818371}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4", "\" examples of \"", "7", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0038498556304138597`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0038910505836575876`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4, " examples of ", 7, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.0038498556304138597`}], 
                    Row[{"Row fraction = ", 0.0038910505836575876`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["846", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "846", "\" examples of \"", "8", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8142444658325313`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.8685831622176592`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.8405365126676602`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{846, " examples of ", 8, " correctly classified"}], 
                    Row[{"Precision = ", 0.8142444658325313}], 
                    Row[{"Recall = ", 0.8685831622176592}], 
                    Row[{"FScore = ", 0.8405365126676602}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["10", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" examples of \"", "9", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.009624639076034648`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.009910802775024777`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " examples of ", 9, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.009624639076034648}], 
                    Row[{"Row fraction = ", 0.009910802775024777}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "0", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 0, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "1", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 1, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "9", "\" examples of \"", "2", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.009544008483563097`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.00872093023255814`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{9, " examples of ", 2, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.009544008483563097}], 
                    Row[{"Row fraction = ", 0.00872093023255814}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["8", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "8", "\" examples of \"", "3", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.008483563096500531`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.007920792079207921`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{8, " examples of ", 3, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.008483563096500531}], 
                    Row[{"Row fraction = ", 0.007920792079207921}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["30", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "30", "\" examples of \"", "4", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.031813361611876985`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.03054989816700611`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{30, " examples of ", 4, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.031813361611876985`}], 
                    Row[{"Row fraction = ", 0.03054989816700611}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["10", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" examples of \"", "5", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.010604453870625663`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.011210762331838564`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " examples of ", 5, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.010604453870625663`}], 
                    Row[{"Row fraction = ", 0.011210762331838564`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "6", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 6, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["27", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "27", "\" examples of \"", "7", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    TemplateBox[{
                    "\"Column fraction = \"", "0.02863202545068929`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.026264591439688716`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{27, " examples of ", 7, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.02863202545068929}], 
                    Row[{"Row fraction = ", 0.026264591439688716`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["12", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" examples of \"", "8", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.012725344644750796`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.012320328542094456`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{12, " examples of ", 8, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.012725344644750796`}], 
                    Row[{"Row fraction = ", 0.012320328542094456`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["847", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "847", "\" examples of \"", "9", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8981972428419936`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.8394449950445986`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.867827868852459`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{847, " examples of ", 9, " correctly classified"}], 
                    Row[{"Precision = ", 0.8981972428419936}], 
                    Row[{"Recall = ", 0.8394449950445986}], 
                    Row[{"FScore = ", 0.867827868852459}]}], "Tooltip"]& ]}, 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 9.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "980", "\" example\"", "\"s\"", "\" of class \"", "0"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9755102040816327`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{980, " example", "s", " of class ", 0}], 
                    Row[{"Recall = ", 0.9755102040816327}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 8.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1135", "\" example\"", "\"s\"", "\" of class \"", "1"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9665198237885463`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1135, " example", "s", " of class ", 1}], 
                    Row[{"Recall = ", 0.9665198237885463}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 7.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1032", "\" example\"", "\"s\"", "\" of class \"", "2"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.8856589147286822`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1032, " example", "s", " of class ", 2}], 
                    Row[{"Recall = ", 0.8856589147286822}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 6.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1010", "\" example\"", "\"s\"", "\" of class \"", "3"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.899009900990099`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1010, " example", "s", " of class ", 3}], 
                    Row[{"Recall = ", 0.899009900990099}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 5.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "982", "\" example\"", "\"s\"", "\" of class \"", "4"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9164969450101833`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{982, " example", "s", " of class ", 4}], 
                    Row[{"Recall = ", 0.9164969450101833}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 4.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "892", "\" example\"", "\"s\"", "\" of class \"", "5"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.7309417040358744`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{892, " example", "s", " of class ", 5}], 
                    Row[{"Recall = ", 0.7309417040358744}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "958", "\" example\"", "\"s\"", "\" of class \"", "6"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9123173277661796`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{958, " example", "s", " of class ", 6}], 
                    Row[{"Recall = ", 0.9123173277661796}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1028", "\" example\"", "\"s\"", "\" of class \"", "7"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9027237354085603`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1028, " example", "s", " of class ", 7}], 
                    Row[{"Recall = ", 0.9027237354085603}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "974", "\" example\"", "\"s\"", "\" of class \"", "8"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.8685831622176592`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{974, " example", "s", " of class ", 8}], 
                    Row[{"Recall = ", 0.8685831622176592}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1009", "\" example\"", "\"s\"", "\" of class \"", "9"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.8394449950445986`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1009, " example", "s", " of class ", 9}], 
                    Row[{"Recall = ", 0.8394449950445986}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1060", "\" example\"", "\"s\"", "\" classified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9018867924528302`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1060, " example", "s", " classified as ", 0}], 
                    Row[{"Precision = ", 0.9018867924528302}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1160", "\" example\"", "\"s\"", "\" classified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9456896551724138`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1160, " example", "s", " classified as ", 1}], 
                    Row[{"Precision = ", 0.9456896551724138}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1061", "\" example\"", "\"s\"", "\" classified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8614514608859567`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1061, " example", "s", " classified as ", 2}], 
                    Row[{"Precision = ", 0.8614514608859567}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1036", "\" example\"", "\"s\"", "\" classified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8764478764478765`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1036, " example", "s", " classified as ", 3}], 
                    Row[{"Precision = ", 0.8764478764478765}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1010", "\" example\"", "\"s\"", "\" classified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8910891089108911`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1010, " example", "s", " classified as ", 4}], 
                    Row[{"Precision = ", 0.8910891089108911}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "708", "\" example\"", "\"s\"", "\" classified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9209039548022598`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{708, " example", "s", " classified as ", 5}], 
                    Row[{"Precision = ", 0.9209039548022598}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "949", "\" example\"", "\"s\"", "\" classified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9209694415173867`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{949, " example", "s", " classified as ", 6}], 
                    Row[{"Precision = ", 0.9209694415173867}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1034", "\" example\"", "\"s\"", "\" classified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8974854932301741`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1034, " example", "s", " classified as ", 7}], 
                    Row[{"Precision = ", 0.8974854932301741}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1039", "\" example\"", "\"s\"", "\" classified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8142444658325313`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1039, " example", "s", " classified as ", 8}], 
                    Row[{"Precision = ", 0.8142444658325313}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "943", "\" example\"", "\"s\"", "\" classified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8981972428419936`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{943, " example", "s", " classified as ", 9}], 
                    Row[{"Precision = ", 0.8981972428419936}]}], 
                    "Tooltip"]& ]},
                Frame->True,
                FrameLabel->{
                  FormBox["\"predicted class\"", TraditionalForm], 
                  FormBox["\"actual class\"", TraditionalForm]},
                FrameTicks->{{{{9.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 0.], TraditionalForm]}, {
                    8.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {
                    7.5, 
                    FormBox[
                    RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {
                    6.5, 
                    FormBox[
                    RotationBox["3", BoxRotation -> 0.], TraditionalForm]}, {
                    5.5, 
                    FormBox[
                    RotationBox["4", BoxRotation -> 0.], TraditionalForm]}, {
                    4.5, 
                    FormBox[
                    RotationBox["5", BoxRotation -> 0.], TraditionalForm]}, {
                    3.5, 
                    FormBox[
                    RotationBox["6", BoxRotation -> 0.], TraditionalForm]}, {
                    2.5, 
                    FormBox[
                    RotationBox["7", BoxRotation -> 0.], TraditionalForm]}, {
                    1.5, 
                    FormBox[
                    RotationBox["8", BoxRotation -> 0.], TraditionalForm]}, {
                    0.5, 
                    FormBox[
                    RotationBox["9", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{9.5, 
                    FormBox["980", TraditionalForm]}, {8.5, 
                    FormBox["1135", TraditionalForm]}, {7.5, 
                    FormBox["1032", TraditionalForm]}, {6.5, 
                    FormBox["1010", TraditionalForm]}, {5.5, 
                    FormBox["982", TraditionalForm]}, {4.5, 
                    FormBox["892", TraditionalForm]}, {3.5, 
                    FormBox["958", TraditionalForm]}, {2.5, 
                    FormBox["1028", TraditionalForm]}, {1.5, 
                    FormBox["974", TraditionalForm]}, {0.5, 
                    FormBox["1009", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["1060", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["1160", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["1061", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["1036", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {4.5, 
                    FormBox[
                    RotationBox["1010", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {5.5, 
                    FormBox[
                    RotationBox["708", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {6.5, 
                    FormBox[
                    RotationBox["949", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {7.5, 
                    FormBox[
                    RotationBox["1034", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {8.5, 
                    FormBox[
                    RotationBox["1039", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {9.5, 
                    FormBox[
                    RotationBox["943", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["2", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["3", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {4.5, 
                    FormBox[
                    RotationBox["4", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {5.5, 
                    FormBox[
                    RotationBox["5", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {6.5, 
                    FormBox[
                    RotationBox["6", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {7.5, 
                    FormBox[
                    RotationBox["7", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {8.5, 
                    FormBox[
                    RotationBox["8", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {9.5, 
                    FormBox[
                    RotationBox["9", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                FrameTicksStyle->12.894839181882503`,
                GridLinesStyle->Directive[
                  GrayLevel[0.5, 0.4]],
                ImageSize->304.73807018259004`,
                
                Method->{
                 "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
                  "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                  Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                PlotRangePadding->None],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{{3.903682808218261*^9, 3.903682834178764*^9}, 
   3.9036830329561176`*^9, 3.9036830832541113`*^9, 3.903683620769272*^9, 
   3.9225072189481497`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"7a332da4-9237-40e5-acdf-dab122b7973d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{942, 645},
WindowMargins->{{Automatic, 378}, {131.25, Automatic}},
FrontEndVersion->"14.0 for Linux x86 (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2b668b4f-7896-407d-8ac7-eda90e140e50"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 167, 3, 67, "Section",ExpressionUUID->"74cf6bf5-e390-40aa-aa1b-d1085a8e6f79"],
Cell[CellGroupData[{
Cell[772, 29, 346, 6, 29, "Input",ExpressionUUID->"1d9582c8-dce4-4665-9411-e9cbd872eeed"],
Cell[1121, 37, 94815, 1710, 88, "Output",ExpressionUUID->"03699f8d-2f0b-42d7-a127-0b6939138847"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95973, 1752, 552, 13, 31, "Input",ExpressionUUID->"edbef7a6-e7ac-4e82-99d4-a0cb21dccd90"],
Cell[96528, 1767, 66984, 1083, 104, "Output",ExpressionUUID->"4457dc48-9d28-4f33-83d6-fdc915f2b9a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163549, 2855, 422, 7, 29, "Input",ExpressionUUID->"fef0ab20-3baa-41f3-9869-b0bfad8370a3"],
Cell[163974, 2864, 1356, 33, 42, "Output",ExpressionUUID->"d899276b-3c91-42cf-94ba-51561c93f3cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165367, 2902, 246, 4, 29, "Input",ExpressionUUID->"21674367-b914-4891-a01a-71ed1bde6d64"],
Cell[165616, 2908, 243, 5, 33, "Output",ExpressionUUID->"2423041d-0e36-47b1-9429-74ef81958187"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165896, 2918, 209, 3, 29, "Input",ExpressionUUID->"007636e1-8cdf-42dc-8e41-20df406b3edb"],
Cell[166108, 2923, 8579, 218, 123, "Output",ExpressionUUID->"3ce964a4-a7fe-4f39-8e24-4221e87a7e78"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174736, 3147, 165, 3, 67, "Section",ExpressionUUID->"a7f6733d-4c66-4db3-b0b0-3482b8008c16"],
Cell[174904, 3152, 492, 12, 50, "Input",ExpressionUUID->"0b772338-a9ba-4d24-844d-3308920f8e94"],
Cell[175399, 3166, 406, 8, 29, "Input",ExpressionUUID->"5686f3e2-6b7c-41b0-8dea-5bb9c77481c0"],
Cell[CellGroupData[{
Cell[175830, 3178, 244, 4, 29, "Input",ExpressionUUID->"65cf7119-d95c-4fa7-8c43-f548ee7ebab9"],
Cell[176077, 3184, 11783, 239, 88, "Output",ExpressionUUID->"07882307-6d0f-4dc5-a85c-adb7a5906edd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187897, 3428, 555, 10, 29, "Input",ExpressionUUID->"abe00cf9-95ac-4bdd-8dad-0059208aa679"],
Cell[188455, 3440, 12074, 243, 88, "Output",ExpressionUUID->"e7a4655e-8b69-4eab-9aa6-a04c0bcc695c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200566, 3688, 478, 9, 29, "Input",ExpressionUUID->"dae1f215-b7a4-4ffa-9b68-599a534c204b"],
Cell[201047, 3699, 131307, 2290, 65, "Output",ExpressionUUID->"4e46b0c7-86fd-4c47-8056-65e9b9727705"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332391, 5994, 415, 7, 29, "Input",ExpressionUUID->"3a8a5230-9679-4cab-847d-4eabc43bacd2"],
Cell[332809, 6003, 269242, 5197, 591, "Output",ExpressionUUID->"95f0a07b-fbde-4af9-90c8-caa139435bbd"]
}, Open  ]],
Cell[602066, 11203, 578, 10, 29, "Input",ExpressionUUID->"b76804b5-e0cc-43f6-ad9b-9c6dbda97973"],
Cell[CellGroupData[{
Cell[602669, 11217, 301, 6, 29, "Input",ExpressionUUID->"efdb10cf-d9b1-4c41-8c1d-4a18a3462534"],
Cell[602973, 11225, 135641, 3525, 276, "Output",ExpressionUUID->"f759730b-60e1-4e58-95fb-5e80ac1fd2a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[738651, 14755, 442, 10, 29, "Input",ExpressionUUID->"4ef749e8-0c91-40d7-a218-54becd4117f1"],
Cell[739096, 14767, 346, 5, 33, "Output",ExpressionUUID->"453684bc-0762-409f-acb2-8bf0ff4a8b9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739479, 14777, 192, 3, 29, "Input",ExpressionUUID->"580cad92-dd87-4efb-8b41-ce4c101c5a6b"],
Cell[739674, 14782, 196514, 4356, 597, "Output",ExpressionUUID->"7a332da4-9237-40e5-acdf-dab122b7973d"]
}, Open  ]]
}, Open  ]]
}
]
*)

