(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    689086,      13172]
NotebookOptionsPosition[    682982,      13054]
NotebookOutlinePosition[    683384,      13070]
CellTagsIndexPosition[    683341,      13067]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Basic linear regression", "Section",
 CellChangeTimes->{{3.903241271111231*^9, 
  3.903241281529449*^9}},ExpressionUUID->"f3582806-6fe2-48ae-8e35-\
b235dc27a2a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$PlotTheme", "=", "\"\<Scientific\>\""}]], "Input",
 CellChangeTimes->{{3.903238684104261*^9, 3.903238711530792*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"fb88de45-b775-4281-938a-3d31e69eae38"],

Cell[BoxData["\<\"Scientific\"\>"], "Output",
 CellChangeTimes->{{3.903238691901448*^9, 3.9032387750026*^9}, 
   3.903240735836687*^9, 3.903241072471201*^9, 3.903333285862861*^9, 
   3.9033410671434402`*^9, 3.903341215703959*^9, 3.9036876243455048`*^9, 
   3.9036883434286423`*^9, 3.903688413905117*^9, 3.92250578494635*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"83b3eb5b-aa2b-4273-9cde-44337cb64467"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.903239377850518*^9, 3.903239412569971*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"0050a1d1-8887-4fd2-9ad4-24bb52864197"],

Cell[BoxData["\<\"/home/jam/Kuweta/mma_lessons/code\"\>"], "Output",
 CellChangeTimes->{3.903239417652108*^9, 3.9032407359115877`*^9, 
  3.90324107253916*^9, 3.903333285922989*^9, 3.903341067453446*^9, 
  3.903341215943465*^9, 3.903687624593822*^9, 3.903688343521179*^9, 
  3.903688413973897*^9, 3.922505785263933*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"fc9f7d4d-b8cb-4e4a-93ce-59e661add96e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"2", " ", "x"}], "-", "1", "+", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.5"}], "}"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2", ",", "0.1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9036883024622*^9, 3.903688305534042*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a5fa2fb4-9195-4cc5-80ad-e084698181f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "0.7570025721197747`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9`"}], ",", 
     RowBox[{"-", "0.7914087465579733`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8`"}], ",", 
     RowBox[{"-", "0.9094896638558185`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.7`"}], ",", 
     RowBox[{"-", "1.2300799461593876`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6`"}], ",", 
     RowBox[{"-", "1.3239571795791336`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.5`"}], ",", 
     RowBox[{"-", "1.4051129338564632`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.4`"}], ",", 
     RowBox[{"-", "1.6124002603932197`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2999999999999998`"}], ",", 
     RowBox[{"-", "1.6868046369906788`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2`"}], ",", 
     RowBox[{"-", "1.7732508913954637`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.1`"}], ",", 
     RowBox[{"-", "1.8038706636459625`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.5533743005291978`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8999999999999999`"}], ",", 
     RowBox[{"-", "1.7773427424826562`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7999999999999998`"}], ",", 
     RowBox[{"-", "1.5863624963292726`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7`"}], ",", 
     RowBox[{"-", "1.5184938546752251`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5999999999999999`"}], ",", 
     RowBox[{"-", "1.6060514595028654`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5`"}], ",", 
     RowBox[{"-", "1.4187787365738327`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3999999999999999`"}], ",", 
     RowBox[{"-", "1.3480186641586276`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2999999999999998`"}], ",", 
     RowBox[{"-", "1.2304951496955066`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.19999999999999996`"}], ",", 
     RowBox[{"-", "1.2121762451120721`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.09999999999999987`"}], ",", 
     RowBox[{"-", "0.8384504936458618`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "0.6156698221684586`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10000000000000009`", ",", 
     RowBox[{"-", "0.39058209438324076`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20000000000000018`", ",", 
     RowBox[{"-", "0.12231380355775584`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30000000000000027`", ",", 
     RowBox[{"-", "0.15917100022967`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.40000000000000036`", ",", 
     RowBox[{"-", "0.016773782258266756`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.45506787300321794`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6000000000000001`", ",", "1.0244126073263269`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7000000000000002`", ",", "1.26696346263678`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8000000000000003`", ",", "1.5436217193157196`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9000000000000004`", ",", "1.8534962894838891`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "2.2093058225053785`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "2.8946802674050467`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2000000000000002`", ",", "3.0910579845437502`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3000000000000003`", ",", "3.621158458976599`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4000000000000004`", ",", "3.94675946189465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", "4.37592578186426`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6`", ",", "4.840730536102226`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7000000000000002`", ",", "5.494232654867778`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8000000000000003`", ",", "5.9942994346353`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9000000000000004`", ",", "6.587418006308813`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "7.0387316727327445`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.903241072567359*^9, 3.903333285945533*^9, 
  3.903341067469885*^9, 3.903341215974902*^9, 3.903687624626663*^9, 
  3.903688343564269*^9, 3.903688414004908*^9, 3.9225057864913893`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"2a5d2238-c448-4775-9c22-33f85b95e492"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotData", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"data", ",", 
    RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "->", "250"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.903238092108451*^9, 3.903238240982998*^9}, {
   3.903238768807665*^9, 3.903238837378995*^9}, {3.903239301833037*^9, 
   3.903239304454397*^9}, {3.903239589382727*^9, 3.903239591529236*^9}, {
   3.9032400546357307`*^9, 3.903240121966776*^9}, {3.9032401689388247`*^9, 
   3.903240169076221*^9}, {3.903240587437623*^9, 3.9032406105484343`*^9}, {
   3.903240697291642*^9, 3.903240697408036*^9}, 3.903240734981538*^9, {
   3.9032410645447083`*^9, 3.903241067814846*^9}, {3.90368831035222*^9, 
   3.9036883168583117`*^9}, {3.9225057973533373`*^9, 3.922505801310445*^9}, {
   3.922505874111074*^9, 3.9225058741595592`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"af9c039e-b990-4073-a0fe-86112ebe9a21"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.9, 0.36, 0.054], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQUHOA+6l8ZavtifBgb/9j9obs+3CH65/+wZEPiz
/85HT8Euqbf7jcHg936tVmf/jHWf98+aCQI/96f3WO58q/d1P8S4H/slZilu
Dq/+BjXv2/5gM3XzlDM/94ONO/Nl/7zbL2+r/f0FNe/z/qbwRcE28X+g5n3c
/05bs2b5nT9Q8z7st2jZzDT/1g+o/jf7i953f/yX/2f/DLD6l/sPxYgu2Zv4
E2rfs/1fZALMDnj/2G8ENv/xfieFJ8zJm35CzXuwP6JFNjRw8zeo/pv7t4af
Z6mZ+HW/AVj95f33nOauk97wGSp/cr/+S+nXQqmf908A83fuv3/EQHHalVf7
YQEorPDaaOLmx/sXQOTta+4Vcvn8vwHln7QXcVaU+uq/f78FxHx7iYVWCtvj
j0Dlb9oz/H1Voao7EeY+e6WpDAxX5e/am0Dcb89ilVj5L/mDfQbEf/Z72K9U
Vbt+sZ8D8b99/mbZDWs2/bC/AAkf+4DilTtfL/9rDw0/e0H9L+0r1jA6QMPX
fgfPcQU/DXYHiPmf7Wfbnp1ds4vD4Rwkfuw7G8XfKv7gcYDY983+vcKH+d8m
8TtA49dePUh7w6cGQah5P+3/WZmWv4gRhpr32/6ZGKuCxC9RqHl/7MsOdSzU
/CUONe+fvco2CemWSCmoeQwOFZf73FaqyzgAAM9jPxM=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Point[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQUHOA+6l8ZavtifBgb/9j9obs+3CH65/+wZEPiz
/85HT8Euqbf7jcHg936tVmf/jHWf98+aCQI/96f3WO58q/d1P8S4H/slZilu
Dq/+BjXv2/5gM3XzlDM/94ONO/Nl/7zbL2+r/f0FNe/z/qbwRcE28X+g5n3c
/05bs2b5nT9Q8z7st2jZzDT/1g+o/jf7i953f/yX/2f/DLD6l/sPxYgu2Zv4
E2rfs/1fZALMDnj/2G8ENv/xfieFJ8zJm35CzXuwP6JFNjRw8zeo/pv7t4af
Z6mZ+HW/AVj95f33nOauk97wGSp/cr/+S+nXQqmf908A83fuv3/EQHHalVf7
YQEorPDaaOLmx/sXQOTta+4Vcvn8vwHln7QXcVaU+uq/f78FxHx7iYVWCtvj
j0Dlb9oz/H1Voao7EeY+e6WpDAxX5e/am0Dcb89ilVj5L/mDfQbEf/Z72K9U
Vbt+sZ8D8b99/mbZDWs2/bC/AAkf+4DilTtfL/9rDw0/e0H9L+0r1jA6QMPX
fgfPcQU/DXYHiPmf7Wfbnp1ds4vD4Rwkfuw7G8XfKv7gcYDY983+vcKH+d8m
8TtA49dePUh7w6cGQah5P+3/WZmWv4gRhpr32/6ZGKuCxC9RqHl/7MsOdSzU
/CUONe+fvco2CemWSCmoeQwOFZf73FaqyzgAAM9jPxM=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {{-2., 2.}, {-2., 7.}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {250, 250/GoldenRatio}, "Axes" -> {False, False}, 
            "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.9, 0.36, 0.054], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {{-2., 2.}, {-2., 7.}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {250, 250/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Point[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQUHOA+6l8ZavtifBgb/9j9obs+3CH65/+wZEPiz
/85HT8Euqbf7jcHg936tVmf/jHWf98+aCQI/96f3WO58q/d1P8S4H/slZilu
Dq/+BjXv2/5gM3XzlDM/94ONO/Nl/7zbL2+r/f0FNe/z/qbwRcE28X+g5n3c
/05bs2b5nT9Q8z7st2jZzDT/1g+o/jf7i953f/yX/2f/DLD6l/sPxYgu2Zv4
E2rfs/1fZALMDnj/2G8ENv/xfieFJ8zJm35CzXuwP6JFNjRw8zeo/pv7t4af
Z6mZ+HW/AVj95f33nOauk97wGSp/cr/+S+nXQqmf908A83fuv3/EQHHalVf7
YQEorPDaaOLmx/sXQOTta+4Vcvn8vwHln7QXcVaU+uq/f78FxHx7iYVWCtvj
j0Dlb9oz/H1Voao7EeY+e6WpDAxX5e/am0Dcb89ilVj5L/mDfQbEf/Z72K9U
Vbt+sZ8D8b99/mbZDWs2/bC/AAkf+4DilTtfL/9rDw0/e0H9L+0r1jA6QMPX
fgfPcQU/DXYHiPmf7Wfbnp1ds4vD4Rwkfuw7G8XfKv7gcYDY983+vcKH+d8m
8TtA49dePUh7w6cGQah5P+3/WZmWv4gRhpr32/6ZGKuCxC9RqHl/7MsOdSzU
/CUONe+fvco2CemWSCmoeQwOFZf73FaqyzgAAM9jPxM=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, "PlotRange" -> {{-2., 2.}, {-2., 7.}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {250, 250/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.9, 0.36, 0.054], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.365248, 0.427802, 0.758297], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.945109, 0.593901, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.645957, 0.253192, 0.685109], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.285821, 0.56, 0.450773], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.7, 0.336, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.491486, 0.345109, 0.8], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.71788, 0.568653, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.70743, 0.224, 0.542415], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.287228, 0.490217, 0.664674], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
       
       CapForm["Butt"], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2., 2.}, {-2., 7.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9225057949529753`*^9, 3.92250580177973*^9}, 
   3.9225058744972563`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"0c4c76fa-450e-4b04-b13d-947e90b48199"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<pics/08-fit-plot-data.pdf\>\"", ",", "plotData"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.903239356683546*^9, 3.90323937618959*^9}, {
  3.9032394234307623`*^9, 3.903239440481995*^9}, {3.9225058489253273`*^9, 
  3.922505852436425*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"f2180167-cf86-4a97-b39e-a1465d92215a"],

Cell[BoxData["\<\"pics/08-fit-plot-data.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.903239443180616*^9, 3.903240699034153*^9, 3.903240736158299*^9, 
   3.903241072807665*^9, 3.903333288940947*^9, 3.903341069644177*^9, 
   3.903341217907701*^9, 3.903687626961175*^9, 3.903688343789381*^9, 
   3.903688414208733*^9, {3.922505855012314*^9, 3.922505875401898*^9}, 
   3.922506013547782*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"5d5d54ab-72c1-4e09-8236-6d2feffd90ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model1", "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.903238259420776*^9, 3.903238283194418*^9}, {
  3.9032385010913982`*^9, 3.9032385022943583`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"b7603e78-07be-413d-b180-4aea5077cbe0"],

Cell[BoxData[
 RowBox[{"0.6719617047255148`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.9653188304226301`", " ", "x"}]}]], "Output",
 CellChangeTimes->{{3.903238262582312*^9, 3.903238283525676*^9}, {
   3.903238773136324*^9, 3.903238838589881*^9}, 3.903240699567069*^9, 
   3.903240736187326*^9, 3.903241072839447*^9, 3.903333289103694*^9, 
   3.903341069734352*^9, 3.9033412180873*^9, 3.903687627106689*^9, 
   3.9036883438228483`*^9, 3.903688414235889*^9, 3.922506014387905*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"36c06a3b-ed8b-4636-bf2d-ad2ccad0f3bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model2", "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x", ",", 
      RowBox[{"x", "^", "2"}]}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.903238724355429*^9, 3.903238727986748*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"932a3cf9-be0e-4bf1-9783-5062e8390c0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.6966598107013091`"}], "+", 
  RowBox[{"1.9653188304226306`", " ", "x"}], "+", 
  RowBox[{"0.977586796733445`", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{
  3.903238728347455*^9, {3.903238773790056*^9, 3.903238839713924*^9}, 
   3.90324070015992*^9, 3.903240736215097*^9, 3.903241072871119*^9, 
   3.903333289123431*^9, 3.903341069752576*^9, 3.903341218137199*^9, 
   3.903687627135448*^9, 3.903688343857717*^9, 3.9036884142621193`*^9, 
   3.9225060151776648`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"31ae55a1-4ee7-4036-9813-d2411efda293"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotDataFit", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"data", ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "7"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    " ", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"model1", ",", "model2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotLabels", "\[Rule]", 
       RowBox[{"Placed", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Framed", "[", "model1", "]"}], ",", 
           RowBox[{"Framed", "[", "model2", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.75"}], ",", "0.15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "5.15"}], "}"}]}], "}"}]}], "]"}]}]}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "250"}], ",", " ", 
    RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.903238300983234*^9, 3.903238357808594*^9}, {
  3.9032386591184464`*^9, 3.903238748740121*^9}, {3.903239296361275*^9, 
  3.903239342109792*^9}, {3.903239952336473*^9, 3.903240005824939*^9}, {
  3.903240043875358*^9, 3.903240046883767*^9}, {3.903240175480597*^9, 
  3.903240342287854*^9}, {3.90324037447292*^9, 3.903240415897709*^9}, {
  3.9032404475189447`*^9, 3.903240487137701*^9}, {3.903240621354436*^9, 
  3.90324064531338*^9}, {3.903240704121463*^9, 3.903240708256657*^9}, {
  3.903240777914495*^9, 3.903240846086744*^9}, {3.903688327083344*^9, 
  3.903688328649543*^9}, {3.922506026122305*^9, 3.922506092862195*^9}, {
  3.922506252240748*^9, 3.922506255191331*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"e7a0cf58-f5d7-4caa-bb89-e3289f7f559f"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    InterpretationBox[{
      TagBox[
       TagBox[
        {RGBColor[0.9, 0.36, 0.054], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQUHOA+6l8ZavtifBgb/9j9obs+3CH65/+wZEPiz
/85HT8Euqbf7jcHg936tVmf/jHWf98+aCQI/96f3WO58q/d1P8S4H/slZilu
Dq/+BjXv2/5gM3XzlDM/94ONO/Nl/7zbL2+r/f0FNe/z/qbwRcE28X+g5n3c
/05bs2b5nT9Q8z7st2jZzDT/1g+o/jf7i953f/yX/2f/DLD6l/sPxYgu2Zv4
E2rfs/1fZALMDnj/2G8ENv/xfieFJ8zJm35CzXuwP6JFNjRw8zeo/pv7t4af
Z6mZ+HW/AVj95f33nOauk97wGSp/cr/+S+nXQqmf908A83fuv3/EQHHalVf7
YQEorPDaaOLmx/sXQOTta+4Vcvn8vwHln7QXcVaU+uq/f78FxHx7iYVWCtvj
j0Dlb9oz/H1Voao7EeY+e6WpDAxX5e/am0Dcb89ilVj5L/mDfQbEf/Z72K9U
Vbt+sZ8D8b99/mbZDWs2/bC/AAkf+4DilTtfL/9rDw0/e0H9L+0r1jA6QMPX
fgfPcQU/DXYHiPmf7Wfbnp1ds4vD4Rwkfuw7G8XfKv7gcYDY983+vcKH+d8m
8TtA49dePUh7w6cGQah5P+3/WZmWv4gRhpr32/6ZGKuCxC9RqHl/7MsOdSzU
/CUONe+fvco2CemWSCmoeQwOFZf73FaqyzgAAM9jPxM=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ],
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{
            Annotation[{
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.9, 0.36, 0.054], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Point[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQUHOA+6l8ZavtifBgb/9j9obs+3CH65/+wZEPiz
/85HT8Euqbf7jcHg936tVmf/jHWf98+aCQI/96f3WO58q/d1P8S4H/slZilu
Dq/+BjXv2/5gM3XzlDM/94ONO/Nl/7zbL2+r/f0FNe/z/qbwRcE28X+g5n3c
/05bs2b5nT9Q8z7st2jZzDT/1g+o/jf7i953f/yX/2f/DLD6l/sPxYgu2Zv4
E2rfs/1fZALMDnj/2G8ENv/xfieFJ8zJm35CzXuwP6JFNjRw8zeo/pv7t4af
Z6mZ+HW/AVj95f33nOauk97wGSp/cr/+S+nXQqmf908A83fuv3/EQHHalVf7
YQEorPDaaOLmx/sXQOTta+4Vcvn8vwHln7QXcVaU+uq/f78FxHx7iYVWCtvj
j0Dlb9oz/H1Voao7EeY+e6WpDAxX5e/am0Dcb89ilVj5L/mDfQbEf/Z72K9U
Vbt+sZ8D8b99/mbZDWs2/bC/AAkf+4DilTtfL/9rDw0/e0H9L+0r1jA6QMPX
fgfPcQU/DXYHiPmf7Wfbnp1ds4vD4Rwkfuw7G8XfKv7gcYDY983+vcKH+d8m
8TtA49dePUh7w6cGQah5P+3/WZmWv4gRhpr32/6ZGKuCxC9RqHl/7MsOdSzU
/CUONe+fvco2CemWSCmoeQwOFZf73FaqyzgAAM9jPxM=
               "]]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {{-2., 2.}, {-2., 7.}}, 
             "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
             "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {{-2., 2.}, {-2., 7.}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
            "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.9, 0.36, 0.054], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{
        Annotation[{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Point[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQUHOA+6l8ZavtifBgb/9j9obs+3CH65/+wZEPiz
/85HT8Euqbf7jcHg936tVmf/jHWf98+aCQI/96f3WO58q/d1P8S4H/slZilu
Dq/+BjXv2/5gM3XzlDM/94ONO/Nl/7zbL2+r/f0FNe/z/qbwRcE28X+g5n3c
/05bs2b5nT9Q8z7st2jZzDT/1g+o/jf7i953f/yX/2f/DLD6l/sPxYgu2Zv4
E2rfs/1fZALMDnj/2G8ENv/xfieFJ8zJm35CzXuwP6JFNjRw8zeo/pv7t4af
Z6mZ+HW/AVj95f33nOauk97wGSp/cr/+S+nXQqmf908A83fuv3/EQHHalVf7
YQEorPDaaOLmx/sXQOTta+4Vcvn8vwHln7QXcVaU+uq/f78FxHx7iYVWCtvj
j0Dlb9oz/H1Voao7EeY+e6WpDAxX5e/am0Dcb89ilVj5L/mDfQbEf/Z72K9U
Vbt+sZ8D8b99/mbZDWs2/bC/AAkf+4DilTtfL/9rDw0/e0H9L+0r1jA6QMPX
fgfPcQU/DXYHiPmf7Wfbnp1ds4vD4Rwkfuw7G8XfKv7gcYDY983+vcKH+d8m
8TtA49dePUh7w6cGQah5P+3/WZmWv4gRhpr32/6ZGKuCxC9RqHl/7MsOdSzU
/CUONe+fvco2CemWSCmoeQwOFZf73FaqyzgAAM9jPxM=
           "]]}, "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {{-2., 2.}, {-2., 7.}}, 
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
         "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
         GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListPlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
       CapForm["Butt"], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAALj8W6v///7/Q45WdxBEKwG/5I4j5
+v+/vrIiitQMCsCwszEm8/X/v6yBr3bkBwrAMihNYubr/7+JH8lPBP4JwDcR
hNrM1/+/Qlv8AUTqCcBA4/HKma//v7TSYmbDwgnAUofNqzNf/7+XwS8vwnMJ
wHfPhG1nvv6/Xp/JwL/VCMDU1AvqwWH9vy75l/IlfwfAHcBvFDcc/L9rOeFB
QD8GwLVrxAUP3fq/B0gF/6AFBcBgjDHw2YL5v+T0w8pssQPA+JJ7iL8/+L8v
iP2z7HMCwKMO3hmY4fa/urnRq9cbAcCcSjFy04n1v0hzASMSlP+/gmxheClJ
9L/4P1Up3R39v3sDqndy7fK/KEneTH5y+r9hgM8k1qjxvzYfXauH9Pe/lb3l
mJxq8L8AkpHlHYP1v7rfKAysIu6/TEH7PIrc8r8jEEBCVJ7rv3a9Ws9eY/C/
siqIauLj6L8/7N79Emrrv9/FsSA2Nua/D5dzFIIm5r/lLJUyv7bjv5Xb86DB
PeG/EX6pNi4B4b8+Mr3PWtXXvyw27yyl89y/gMHTkqbJy7+DRO3QuXjXvzAK
XL8h/ai/FVSukFkX0r/wrPGqXc29P7L2xQ/IJMq/TSSNIbJQ0T+l2+WN6YS+
v1zriGO0Atw/XVEctNtjpL99v9bciv/iP7kKe9XCdaM/0c990KHk5z814gEe
gVi/PyJnuokMNO0/I/C7+TrCyT9esoVmUxTxP0mj2c1OWNI/qvT4asrD8z9F
TRID9bXXPziatpO0ZvY/j1/XgDC33D/qcn6BNtz4P8dOHQ1QEuE/Gg8RUuKG
+z/tIRV+0prjP3DereclBP4/dXQrYY8W5j+DiMpQbjoAQNfcEFJmyOg/joMj
n16NAUBgeTznB0zrPyuYAdCayQJAwys3isMF7j+IDkXyayAEQCYJvOikSPA/
dp4N94hgBUAdvGtFBYjxPwdg+41fmgZAAPoCqXLi8j9Wg04Wy+4HQPdRvV7F
JfQ/OMAmgYIsCUDbNF8bJYT1P9leZN3OhApAcFcQESLc9j8bL8fL1NYLQBmU
5FgEHfg/8BivnCYSDUCuW6Cn83j5P4Nk/F4NaA5AVz1/SMi9+j+pyc4DQKcP
QLFebSI6/Ps/NzBjHRZwEED4CkMDuVX9P3uskbHWGRFAUtE7Nh2Y/j+GtQI3
PbgRQAo7C8G8nf4/NRU3gQC7EUDBpNpLXKP+P+J0a8vDvRFAMHh5YZuu/j8+
NNRfSsMRQA4ft4wZxf4/9rKliFfOEUDJbDLjFfL+P2WwSNpx5BFAQAgpkA5M
/z9Dq459phASQPhx+BquUf8/8QrDx2kTEkCv28elTVf/P59q9xEtFhJAHq9m
u4xi/z/7KWCmsxsSQPxVpOYKef8/s6gxz8AmEkC3ox89B6b/PyGm1CDbPBJA
bg3vx6ar/z/PBQlrnj8SQCZ3vlJGsf8/fWU9tWFCEkCUSl1ohbz/P9kkpkno
RxJAcvGakwPT/z+Qo3dy9VISQCpbah6j2P8/PwOsvLhVEkDhxDmpQt7/P+xi
4AZ8WBJAUJjYvoHp/z9IIkmbAl4SQAgCqEkh7/8/9oF95cVgEkC/a3fUwPT/
P6ThsS+JYxJAdtVGX2D6/z9SQeZ5TGYSQC4/Fur///8/AKEaxA9pEkBE8XCX

        "]]},
      Annotation[#, "Charting`Private`Tag#1"]& ], 
     TagBox[
      {RGBColor[0.365248, 0.427802, 0.758297], AbsoluteThickness[1.6], 
       Opacity[1.], CapForm["Butt"], LineBox[CompressedData["
1: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
A0Jhijc=
        "]]},
      Annotation[#, "Charting`Private`Tag#2"]& ]}, {{}, {GraphicsGroupBox[{
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{41.406420341641756`, 30.000000000000014`}, {-0.75, 0.15}], 
           Offset[{41.406420341641756`, 1.2434497875801753`*^-14}, {-0.75, 
            0.15}], Offset[{-63.593579658358244`, -1.2434497875801753`*^-14}, \
{-0.75, 0.15}], 
           Offset[{-63.593579658358244`, 29.999999999999986`}, {-0.75, 
            0.15}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           FrameBox[
            RowBox[{
             RowBox[{"1.9653188304226301`", " ", 
              TagBox["x",
               HoldForm]}], "+", "0.6719617047255148`"}],
            StripOnInput->False],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontFamily->"Times",
          FontOpacity->1], Offset[{-11.093579658358243, 15.}, {-0.75, 0.15}], 
         NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{44.42803835751769, 32.000000000000014`}, {1., 5.15}], 
           Offset[{44.42803835751769, 1.7763568394002505`*^-14}, {1., 5.15}], 
           Offset[{-115.57196164248231`, -1.7763568394002505`*^-14}, {1., 
            5.15}], Offset[{-115.57196164248231`, 31.999999999999982`}, {1., 
            5.15}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           FrameBox[
            RowBox[{
             RowBox[{"0.977586796733445`", " ", 
              SuperscriptBox[
               TagBox["x",
                HoldForm], "2"]}], "+", 
             RowBox[{"1.9653188304226306`", " ", 
              TagBox["x",
               HoldForm]}], "-", "0.6966598107013091`"}],
            StripOnInput->False],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontFamily->"Times",
          FontOpacity->1], Offset[{-35.57196164248231, 16.}, {1., 5.15}], 
         NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}]}}}},
  PlotTheme -> "Scientific",
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.9, 0.36, 0.054], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.365248, 0.427802, 0.758297], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.945109, 0.593901, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.645957, 0.253192, 0.685109], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.285821, 0.56, 0.450773], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.7, 0.336, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.491486, 0.345109, 0.8], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.71788, 0.568653, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.70743, 0.224, 0.542415], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.287228, 0.490217, 0.664674], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
       
       CapForm["Butt"], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2., 2.}, {-2., 7.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9225060209054737`*^9, 3.922506093251295*^9}, 
   3.922506255652232*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"2a501519-4ba6-4e5e-a017-aa0ad67e6dd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<pics/08-fit-plot-data-fit.pdf\>\"", ",", "plotDataFit"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.903239454578373*^9, 3.903239461898446*^9}, {
  3.92250597406925*^9, 3.922505977119936*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"4c450027-98cc-481e-8d73-766540b4df80"],

Cell[BoxData["\<\"pics/08-fit-plot-data-fit.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.903239462453691*^9, 3.903240493754359*^9, 3.903240736524507*^9, 
   3.9032410731837263`*^9, 3.903333289741195*^9, 3.903341070353066*^9, 
   3.903341218880209*^9, 3.903687627770994*^9, 3.903688344146301*^9, 
   3.90368841454614*^9, 3.922506065123705*^9, {3.922506096734028*^9, 
   3.9225061008226767`*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"7d9df73b-8977-4160-8688-27b403344d3c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Information about the model", "Section",
 CellChangeTimes->{{3.9032412859080057`*^9, 3.903241297254273*^9}, 
   3.9225064601290293`*^9},ExpressionUUID->"a1edb29c-6f97-44b6-aae0-\
7b6e40a6f3ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lm", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"data", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x", ",", 
      RowBox[{"x", "^", "2"}]}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.903239233411423*^9, 3.903239283212669*^9}, {
  3.903333276135324*^9, 3.903333276687318*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"3f0a7bfe-e8af-421f-9485-d41d350cdd1d"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "0.7722893429290644`"}], "+", 
       RowBox[{"1.9925757025690023`", " ", "x"}], "+", 
       RowBox[{"0.9936735964008747`", " ", 
        SuperscriptBox["x", "2"]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {-0.7722893429290644, 1.9925757025690023`, 
     0.9936735964008747}, {{$CellContext`x}, {
      1, $CellContext`x, $CellContext`x^2}}, {0, 0}}, CompressedData["
1:eJxTTMoPSmViYGBgBGJNBhj4YD9KU0YDACC6Ml0=
    "], CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQUHHHjWxEx892p/Ghj82+/5LlBS+Pmn/WfPgMCf
/QJXtrj9DPqy3xgMfu+P+HW459nTT/tnzQSBn/vjeqxee7r92A8x7sd+h5AT
l1+1f4Wa923/1At5bpH5P/aDjTvzZX/Pt1K/II8fUPM+77/y4yS/K+cPqHkf
93c9evBrZslvqHkf9m/KWqfG/uwvVP+b/Us4396/u+P//hlg9S/31zmYX+bq
/Q6179n+gFsLHXf0/NtvBDb/8X6Hqv8qgvu/Qc17sH8S94FtJ9p/QvXf3C/h
H2LjaPB1vwFY/eX9e24f/3bW9RtU/uR+hRmiB+b2vd8/AczfuX/FSvU5/Sde
7IcFoENUUtXJba/2L4DI27+pXSy/DugOCP+k/c7I1b82r7q/3wJivr2E0vk9
QTO220Pkb9o3lD8xu7N5sT3UffY7Jh+Yu0Xqur0JxP32NstnG9w888Q+A+I/
ez4+JZ+n69/bz4H4377uQKenM/dX+wuQ8LHfIpaYVjSHwQEafvbXnnjPWxLP
4AANX/ukkPt6vHeYHSDmf7YvE2TeND2F0+EcJH7sLyb88M4U43OA2PfNXuJx
WnSBjADUvB/2FWeXsCTfEYSa99Ne7xVTgpaHMNS83/Y5M/mWaj4Ug5r3xz7l
Ib+AyWpxqHn/7Dk+RbVJi0s7wILv/Jv4sgJhGQcAl1xDrw==
    "], CompressedData["
1:eJx1kzFIw1AQhkMqVEuFDuIouukm6uAil81ZV+2goDgIOkoRXOyso4qDoLOr
Op1Il0KVgkPppMUiVIukRGtLSmtyd32lBx6El3w57v/fvXsT6zvLG7ZlWVPB
E7G64YK83POScLp8k6KNpdTI9WIpbvhjLowWVpdux9KfQ4bPUvgYwOBP1PCz
0zCauB+WSQ0YzmsDebWVbh1Xjh5+Jlc70OUkm/vGwcLl7kLMN5x1PYwR/4V+
3RomqY4H/bouqm+pX8UP2lfF8BOqU8E98l82nH2+i88Xw2fIzxtGyU9B6b6K
bl7VL0r9jOHTVOcZI1TnRuVnJf/K8GPid7hN/FDp6nDhgvMhrfKZZ4X36s+z
HxhVfji/KPkZvV/Q+53j/kBc9WeL+wlrqp/n3H84UP3P83lBTZ3Xf6vMA+h5
YD+e+OnNzxPPGwyreWOfdfHZUToNWW2nX7cJev5Z14dxdV9YtwVf6n6xbhvK
6j7Kgcp3wvkDadhGIA==
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.903239245621551*^9, 3.903239283564022*^9}, 
   3.903240736545971*^9, 3.903241073207533*^9, {3.9033332782472577`*^9, 
   3.903333289785721*^9}, 3.903341070394007*^9, 3.903341218921051*^9, 
   3.903687627817349*^9, 3.90368834417574*^9, 3.903688414573836*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"a8c05ca2-4e12-40c2-8536-5eefacef8d57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lm", "//", "Normal"}]], "Input",
 CellChangeTimes->{{3.903333728585917*^9, 3.9033337632970457`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"7618b771-23c7-4b8e-b129-b301a00cd6cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.7722893429290644`"}], "+", 
  RowBox[{"1.9925757025690023`", " ", "x"}], "+", 
  RowBox[{"0.9936735964008747`", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{{3.9033337302129393`*^9, 3.903333763718397*^9}, 
   3.903341070409377*^9, 3.903341218995956*^9, 3.903687627849875*^9, 
   3.903688344207768*^9, 3.90368841460213*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"c5f9b705-e5da-4da5-bdac-8b5a9e3da13f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lm", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.903333278777896*^9, 3.903333282875725*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"2638fe7b-8e9b-407f-a76f-e256e7680b0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AdjustedRSquared\"\>", ",", "\<\"AIC\"\>", ",", "\<\"AICc\"\>",
    ",", "\<\"ANOVATable\"\>", ",", "\<\"ANOVATableDegreesOfFreedom\"\>", 
   ",", "\<\"ANOVATableEntries\"\>", ",", "\<\"ANOVATableFStatistics\"\>", 
   ",", "\<\"ANOVATableMeanSquares\"\>", ",", "\<\"ANOVATablePValues\"\>", 
   ",", "\<\"ANOVATableSumsOfSquares\"\>", ",", "\<\"BasisFunctions\"\>", 
   ",", "\<\"BetaDifferences\"\>", ",", "\<\"BestFit\"\>", 
   ",", "\<\"BestFitParameters\"\>", ",", "\<\"BIC\"\>", 
   ",", "\<\"CatcherMatrix\"\>", ",", "\<\"CoefficientOfVariation\"\>", 
   ",", "\<\"CookDistances\"\>", ",", "\<\"CorrelationMatrix\"\>", 
   ",", "\<\"CovarianceMatrix\"\>", ",", "\<\"CovarianceRatios\"\>", 
   ",", "\<\"Data\"\>", ",", "\<\"DesignMatrix\"\>", 
   ",", "\<\"DurbinWatsonD\"\>", ",", "\<\"EigenstructureTable\"\>", 
   ",", "\<\"EigenstructureTableEigenvalues\"\>", 
   ",", "\<\"EigenstructureTableEntries\"\>", 
   ",", "\<\"EigenstructureTableIndexes\"\>", 
   ",", "\<\"EigenstructureTablePartitions\"\>", 
   ",", "\<\"EstimatedVariance\"\>", ",", "\<\"FitDifferences\"\>", 
   ",", "\<\"FitResiduals\"\>", ",", "\<\"Function\"\>", 
   ",", "\<\"FVarianceRatios\"\>", ",", "\<\"HatDiagonal\"\>", 
   ",", "\<\"MeanPredictionBands\"\>", 
   ",", "\<\"MeanPredictionConfidenceIntervals\"\>", 
   ",", "\<\"MeanPredictionConfidenceIntervalTable\"\>", 
   ",", "\<\"MeanPredictionConfidenceIntervalTableEntries\"\>", 
   ",", "\<\"MeanPredictionErrors\"\>", 
   ",", "\<\"ParameterConfidenceIntervals\"\>", 
   ",", "\<\"ParameterConfidenceIntervalTable\"\>", 
   ",", "\<\"ParameterConfidenceIntervalTableEntries\"\>", 
   ",", "\<\"ParameterConfidenceRegion\"\>", ",", "\<\"ParameterErrors\"\>", 
   ",", "\<\"ParameterPValues\"\>", ",", "\<\"ParameterTable\"\>", 
   ",", "\<\"ParameterTableEntries\"\>", ",", "\<\"ParameterTStatistics\"\>", 
   ",", "\<\"PartialSumOfSquares\"\>", ",", "\<\"PredictedResponse\"\>", 
   ",", "\<\"Properties\"\>", ",", "\<\"Response\"\>", 
   ",", "\<\"RSquared\"\>", ",", "\<\"SequentialSumOfSquares\"\>", 
   ",", "\<\"SingleDeletionVariances\"\>", 
   ",", "\<\"SinglePredictionBands\"\>", 
   ",", "\<\"SinglePredictionConfidenceIntervals\"\>", 
   ",", "\<\"SinglePredictionConfidenceIntervalTable\"\>", 
   ",", "\<\"SinglePredictionConfidenceIntervalTableEntries\"\>", 
   ",", "\<\"SinglePredictionErrors\"\>", 
   ",", "\<\"StandardizedResiduals\"\>", ",", "\<\"StudentizedResiduals\"\>", 
   ",", "\<\"VarianceInflationFactors\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.903341070424007*^9, 3.903341219020953*^9, 
  3.903687627876103*^9, 3.90368834423468*^9, 3.903688414629743*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"66e60ebc-ed11-43a1-a639-3916a4963eac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predict ", "Section",
 CellChangeTimes->{{3.903334317305973*^9, 3.903334320900031*^9}, 
   3.903334463806105*^9},ExpressionUUID->"6ec48310-ac16-4bde-84a9-\
94362d4c765b"],

Cell[CellGroupData[{

Cell[BoxData["data"], "Input",
 CellChangeTimes->{{3.903341840110885*^9, 3.903341840628332*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"086c4636-c1b5-4a66-8627-ad8704a2df0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "0.8416220483781061`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9`"}], ",", 
     RowBox[{"-", "1.1814146985115193`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8`"}], ",", 
     RowBox[{"-", "1.2702572595565051`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.7`"}], ",", 
     RowBox[{"-", "1.181128072610269`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6`"}], ",", 
     RowBox[{"-", "1.5171603382703078`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.5`"}], ",", 
     RowBox[{"-", "1.3456829331164641`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.4`"}], ",", 
     RowBox[{"-", "1.5271847487720482`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2999999999999998`"}], ",", 
     RowBox[{"-", "1.5176566185831772`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2`"}], ",", 
     RowBox[{"-", "1.5022631279712657`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.1`"}], ",", 
     RowBox[{"-", "1.715967159265491`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.8686591635693444`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8999999999999999`"}], ",", 
     RowBox[{"-", "1.9826334712130143`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7999999999999998`"}], ",", 
     RowBox[{"-", "1.4719341517084383`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7`"}], ",", 
     RowBox[{"-", "1.9093554080733561`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5999999999999999`"}], ",", 
     RowBox[{"-", "1.4216472096665171`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5`"}], ",", 
     RowBox[{"-", "1.595650400035741`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3999999999999999`"}], ",", 
     RowBox[{"-", "1.3242809635748412`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2999999999999998`"}], ",", 
     RowBox[{"-", "1.3920421256895983`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.19999999999999996`"}], ",", 
     RowBox[{"-", "0.9861592055938253`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.09999999999999987`"}], ",", 
     RowBox[{"-", "0.7744825410748506`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "0.8348128691021159`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10000000000000009`", ",", 
     RowBox[{"-", "0.700034200472087`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20000000000000018`", ",", 
     RowBox[{"-", "0.49479388694217225`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30000000000000027`", ",", "0.09216801747891912`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.40000000000000036`", ",", "0.03848159952234109`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.36100497632497364`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6000000000000001`", ",", "0.6500059079528238`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7000000000000002`", ",", "0.9902216422055419`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8000000000000003`", ",", "1.3152497170049453`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9000000000000004`", ",", "2.076390075529014`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "2.0467007033263185`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "2.4824470197586814`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2000000000000002`", ",", "3.1741174609361975`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3000000000000003`", ",", "3.760943025128747`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4000000000000004`", ",", "4.027772358088235`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", "4.465221474226716`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6`", ",", "4.8204741479662925`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7000000000000002`", ",", "5.719885424629279`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8000000000000003`", ",", "5.917190791100754`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9000000000000004`", ",", "6.772565936375493`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "7.018983697514343`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.903341841036758*^9, 3.903687627905445*^9, 
  3.903688344262225*^9, 3.903688414655705*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"0f0f2073-49f8-49bb-b146-68efec2272a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rules", "=", 
  RowBox[{"Apply", "[", 
   RowBox[{"Rule", ",", "data", ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.903334601253121*^9, 3.903334647733212*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"5e27b995-2e9e-4528-b7de-5e0d83b9d5d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2.`"}], "\[Rule]", 
    RowBox[{"-", "0.8416220483781061`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.9`"}], "\[Rule]", 
    RowBox[{"-", "1.1814146985115193`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.8`"}], "\[Rule]", 
    RowBox[{"-", "1.2702572595565051`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.7`"}], "\[Rule]", 
    RowBox[{"-", "1.181128072610269`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.6`"}], "\[Rule]", 
    RowBox[{"-", "1.5171603382703078`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.5`"}], "\[Rule]", 
    RowBox[{"-", "1.3456829331164641`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.4`"}], "\[Rule]", 
    RowBox[{"-", "1.5271847487720482`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.2999999999999998`"}], "\[Rule]", 
    RowBox[{"-", "1.5176566185831772`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.2`"}], "\[Rule]", 
    RowBox[{"-", "1.5022631279712657`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.1`"}], "\[Rule]", 
    RowBox[{"-", "1.715967159265491`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.`"}], "\[Rule]", 
    RowBox[{"-", "1.8686591635693444`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.8999999999999999`"}], "\[Rule]", 
    RowBox[{"-", "1.9826334712130143`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.7999999999999998`"}], "\[Rule]", 
    RowBox[{"-", "1.4719341517084383`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.7`"}], "\[Rule]", 
    RowBox[{"-", "1.9093554080733561`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.5999999999999999`"}], "\[Rule]", 
    RowBox[{"-", "1.4216472096665171`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.5`"}], "\[Rule]", 
    RowBox[{"-", "1.595650400035741`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.3999999999999999`"}], "\[Rule]", 
    RowBox[{"-", "1.3242809635748412`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.2999999999999998`"}], "\[Rule]", 
    RowBox[{"-", "1.3920421256895983`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.19999999999999996`"}], "\[Rule]", 
    RowBox[{"-", "0.9861592055938253`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.09999999999999987`"}], "\[Rule]", 
    RowBox[{"-", "0.7744825410748506`"}]}], ",", 
   RowBox[{"0.`", "\[Rule]", 
    RowBox[{"-", "0.8348128691021159`"}]}], ",", 
   RowBox[{"0.10000000000000009`", "\[Rule]", 
    RowBox[{"-", "0.700034200472087`"}]}], ",", 
   RowBox[{"0.20000000000000018`", "\[Rule]", 
    RowBox[{"-", "0.49479388694217225`"}]}], ",", 
   RowBox[{"0.30000000000000027`", "\[Rule]", "0.09216801747891912`"}], ",", 
   RowBox[{"0.40000000000000036`", "\[Rule]", "0.03848159952234109`"}], ",", 
   RowBox[{"0.5`", "\[Rule]", "0.36100497632497364`"}], ",", 
   RowBox[{"0.6000000000000001`", "\[Rule]", "0.6500059079528238`"}], ",", 
   RowBox[{"0.7000000000000002`", "\[Rule]", "0.9902216422055419`"}], ",", 
   RowBox[{"0.8000000000000003`", "\[Rule]", "1.3152497170049453`"}], ",", 
   RowBox[{"0.9000000000000004`", "\[Rule]", "2.076390075529014`"}], ",", 
   RowBox[{"1.`", "\[Rule]", "2.0467007033263185`"}], ",", 
   RowBox[{"1.1`", "\[Rule]", "2.4824470197586814`"}], ",", 
   RowBox[{"1.2000000000000002`", "\[Rule]", "3.1741174609361975`"}], ",", 
   RowBox[{"1.3000000000000003`", "\[Rule]", "3.760943025128747`"}], ",", 
   RowBox[{"1.4000000000000004`", "\[Rule]", "4.027772358088235`"}], ",", 
   RowBox[{"1.5`", "\[Rule]", "4.465221474226716`"}], ",", 
   RowBox[{"1.6`", "\[Rule]", "4.8204741479662925`"}], ",", 
   RowBox[{"1.7000000000000002`", "\[Rule]", "5.719885424629279`"}], ",", 
   RowBox[{"1.8000000000000003`", "\[Rule]", "5.917190791100754`"}], ",", 
   RowBox[{"1.9000000000000004`", "\[Rule]", "6.772565936375493`"}], ",", 
   RowBox[{"2.`", "\[Rule]", "7.018983697514343`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.903334601956489*^9, 3.903334648402547*^9}, 
   3.903341070446597*^9, 3.903341219049767*^9, 3.903687627935625*^9, 
   3.9036883442896147`*^9, 3.90368841468163*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"3622ddd9-27f5-47d6-9ff0-1128fde3a59a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Predict", "[", "rules", "]"}]], "Input",
 CellChangeTimes->{{3.903688831423308*^9, 3.903688831591086*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"5e54193b-bd0b-453e-84c5-3a985c8ef902"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Numerical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Numerical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["41", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[<|
   "ExampleNumber" -> 41, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 41, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Sequence", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 4463274533565020503|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {5.415722071342227*^-17}, 
                    "StandardDeviation" -> {1.1832159566199232`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 2523344124640608097|>]}, 
                   "Invertibility" -> "Perfect", "StructurePreserving" -> 
                   True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                "DirectTraining", "BatchProcessing" -> Automatic, 
                "Model" -> <|
                 "RotationMatrix" -> {{1.}}, 
                  "Precisions" -> {0.9989365922352625}, "NoisePrecision" -> 
                  None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.00013608978181551932`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 3001451220314565817|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 1, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.00013608978181552203`}, 
                    "StandardDeviation" -> {1.00053212832204}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.3, 1}, "ID" -> 
                    787979534263831810|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Mean" -> {0.00013608978181552203`}, 
                   "StandardDeviation" -> {1.00053212832204}, "Method" -> 
                   "NaiveSampler", "VectorLength" -> 1, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Type" -> "NumericalVector", "Version" -> {13.3, 1}, "ID" -> 
                   787979534263831810|>], "InputDimension" -> 0, 
                "OutputDimension" -> 1, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.1}, 
                    "ID" -> 3418703251837826833|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.083354, "MaxTrainingMemory" -> 184792, 
                  "DataMemory" -> 2256, "FunctionMemory" -> 38648, 
                  "LanguageVersion" -> {13.3, 1}, "Date" -> 
                  DateObject[{
                    2023, 9, 14, 16, 0, 32.022263`8.258027000509966}, 
                    "Instant", "Gregorian", 2.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-3.1516920894950835`, -3.1516920894950835`, \
-1.74961195814442, -1.608795819073631, -1.5072143979224648`, \
-1.381019028232207, -1.3216679546730665`, -1.197915534670655, \
-1.107971229621685, -1.1056007642901975`, -1.1020000010319688`}, 
                   "LeftBoundary" -> -1.74961195814442, "LeftScale" -> 
                   0.7010400656753317, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[1.5233488777155384`, 0.19441321663939437`], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.3, 1}, 
             "ID" -> 4270897793735380344|>], 
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 2344087184081217960|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {5.415722071342227*^-17}, 
             "StandardDeviation" -> {1.1832159566199232`}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 2994853854525481099|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 8966868728716526926|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {0.6188536920321601}, 
             "StandardDeviation" -> {2.669958506289822}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 4088785673966827386|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "Version" -> {13.3, 1}, "ID" -> 4629561655622906945|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> "f1",
              "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
             "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (0.6188536920321601 + 
       2.669958506289822 #& ), 
      "ProcessorFunction" -> (-0.23178401109016486` + 
       0.37453765578911613` #& ), "Name" -> "value", 
      "Quantiles" -> {-0.9743549036873252, 2.3970896889988795`}, "Mean" -> 
      0.61885369203216|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
    0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "NeighborsFunction" -> 
      MachineLearning`PackageScope`NeighborsFunction["Nearest", 
        NearestFunction[
         Hold[
          Nearest[CompressedData["
1:eJwBWQGm/iFib1JlAgAAACkAAAABAAAASMoEpO/1+r+l9pvDz4/lP5BHL5xb
GfC/p7x20Omb9b9ZkX3jjHbtP7kCQSVgW9C/PnuN4s4E0D/hqH1nLdryvwWl
oU+dnfE/N/bu7DM29L+CXqxCQhLrPyGXl2+LKNu/r9LDpHji9j/rmb0lMmLV
v/Hc6HUVw+I/oWJ2Nbd27b/hNxiW7P36P03divXRtLe/ykXAe8U+tj8Yv8vs
6pfxv+AoaEcuJvQ/vvhgS+9x+L9y0OwGyCvbP/KGqk34N+i/8RNPGCfd8j8S
6Lxqbw2Bvx725RFfIdY/vckMZpMo47/UERqR3pr1P0Rb4AJe2Pa/pa1Q5d9e
4D+nPbEdgkLrv20wWLdLMvA/lgenOISyxb9Q6OhyABLoP3Gknwv+8OW/zHey
aDU0+D/3ujImWbn5vz+E/EO0X8Q/aejcM+7h379Rhh7fnsT5Pw7huz0=
            "] -> Automatic, Method -> "KDtree"]]]], "NeighborsNumber" -> 2, 
      "DistributionData" -> {NormalDistribution, 0.09237844705104413}, 
      "TrainingOutput" -> 
      RawArray["Real32",{-0.5470031499862671, 
        0.2608265280723572, -0.7944381237030029, -0.8000177145004272, 
        0.6979858875274658, -0.7531561851501465, -0.19726361334323883`, \
-0.8037722110748291, 1.176830768585205, -0.7357929348945618, 
        0.5347824692726135, -0.8294151425361633, 
        1.9105284214019775`, -0.7277771234512329, 
        0.13909128308296204`, -0.8744783401489258, 
        2.397089719772339, -0.5218569040298462, -0.49397316575050354`, \
-0.8002035617828369, 
        1.4406095743179321`, -0.7075431942939758, -0.09657405316829681, \
-0.9743549227714539, 
        1.276768445968628, -0.5444528460502625, -0.21737121045589447`, \
-0.946909487247467, 1.5736650228500366`, -0.6741609573364258, 
        0.011667678132653236`, -0.9316672086715698, 
        0.9570425152778625, -0.6011377573013306, 
        0.5459022521972656, -0.7830787897109985, 
        1.984426736831665, -0.6742683053016663, -0.41710296273231506`, \
-0.7642444372177124, 2.3047969341278076`}], "DistributionSmoothing" -> 0.5, 
      "Processor" -> 
      MachineLearning`MLProcessor[
       "FirstValues", <|
        "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
         "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
      "NearestNeighbors", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "NeighborsNumber" -> <|"Value" -> 2, "Options" -> <||>|>, 
        "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
        "NearestMethod" -> <|"Value" -> "KDtree", "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Reporting" -> None, "TrainingFunction" -> Predict, "EMIterations" -> 
      Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 
      0.9820629315759775, "PreprocessingTime" -> 0.208147`5.769915149324898, 
      "LossName" -> "StandardDeviation", "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[2.226261631999623, 0.6428324189869521], "StandardDeviation" -> 
         Around[1.3393843385847457`, 0.3213883368176754], "EvaluationTime" -> 
         0.00001020295809548493, "TestSize" -> 33., "ModelMemory" -> 6128., 
         "ModelUtility" -> -1.0322392618434206`, "Round" -> 1, "Iteration" -> 
         29, "Time" -> {
          0.597178`6.227648793462235, 0.605284`6.233504187475353}, 
         "TrainingSize" -> 8, "TrainingTime" -> 0.0033669761715100265`, 
         "TrainingMemory" -> 69052., "ExperimentCount" -> 3, 
         "MeanCrossEntropyHistory" -> {
           Around[3.329142363157567, 0.9749136516175894], 
           Around[2.2231061836415438`, 0.6071650132868773], 
           Around[1.1265363491997578`, 0.09619290682117786]}, 
         "StandardDeviationHistory" -> {
           Around[1.8984917248066997`, 0.31776604538255027`], 
           Around[1.1612480437415416`, 0.22261595515587612`], 
           Around[0.9584132472059957, 0.25018560648648]}, 
         "IterationHistory" -> {4, 14, 29}, 
         "TimeHistory" -> {{
           0.271426`5.885196440046282, 0.276488`5.893221280504229}, {
           0.388265`6.040673236496414, 0.393931`6.046965152013141}, {
           0.597178`6.227648793462235, 0.605284`6.233504187475353}}, 
         "Configuration" -> {
          "NearestNeighbors", "NeighborsNumber" -> Automatic, 
           "DistributionSmoothing" -> 0.5, "NearestMethod" -> Automatic}, 
         "FinalTrainingSize" -> 41|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], TypeSystem`AnyType, 19], <||>], 
      "Configurations" -> 
      Dataset[<|<|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.01|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.4423441709312694`, 0.6911248935514006], 
              "StandardDeviation" -> 
              Around[1.6979034134573645`, 0.2667445006863579], 
              "EvaluationTime" -> 0.00005217220908980913, "TestSize" -> 33., 
              "ModelMemory" -> 15176., "ModelUtility" -> -1.2534870048783933`,
               "Round" -> 1, "Iteration" -> 23, 
              "Time" -> {
               0.503734`6.15374625845742, 0.516988`6.165025456136792}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.006854143078948891, 
              "TrainingMemory" -> 70776., "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[3.1232718144180485`, 0.6433485880461262], 
                Around[1.7614165274444904`, 0.12033561047803211`]}, 
              "StandardDeviationHistory" -> {
                Around[1.9155648007299924`, 0.2570762583362109], 
                Around[1.4802420261847369`, 0.1927084139281239]}, 
              "IterationHistory" -> {1, 23}, 
              "TimeHistory" -> {{
                0.238073`5.828255138099048, 0.248614`5.847070574565682}, {
                0.503734`6.15374625845742, 0.516988`6.165025456136792}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.021770047945377, 0.17658231540417513`], 
              "StandardDeviation" -> 
              Around[1.8907120571977827`, 0.2937572329651057], 
              "EvaluationTime" -> 0.0001845296581965163, "TestSize" -> 8., 
              "ModelMemory" -> 15176., "ModelUtility" -> -1.3607102059175644`,
               "Round" -> 2, "Iteration" -> 39, 
              "Time" -> {
               0.724781`6.3117517933643565, 0.734008`6.317245786841094}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.007398712713095852, 
              "TrainingMemory" -> 72128., "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[2.047179891414242, 0.2402515306685252], 
                Around[1.9963602044765123`, 0.2546267090429261]}, 
              "StandardDeviationHistory" -> {
                Around[1.9034871705614314`, 0.40814187247204375`], 
                Around[1.8779369438341338`, 0.4223052591475318]}, 
              "IterationHistory" -> {21, 39}, 
              "TimeHistory" -> {{
                0.473349`6.1267264574571545, 0.485441`6.137681447242596}, {
                0.724781`6.3117517933643565, 0.734008`6.317245786841094}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0001845296581965163, "ModelMemory" -> 
             15176., "StandardDeviation" -> 
             Around[1.8907120571977827`, 0.2937572329651057], 
             "TrainingMemory" -> 72128., "TrainingTime" -> 
             0.00988761529131819|>, "Index" -> 1|>, <|
          "Value" -> "DecisionTree", 
           "Options" -> <|
            "DistributionSmoothing" -> <|"Value" -> 1|>, 
             "FeatureFraction" -> <|"Value" -> 1|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.3603946242927307`, 0.48348772192308676`], 
              "StandardDeviation" -> 
              Around[2.1000790728193475`, 0.5155387670402547], 
              "EvaluationTime" -> 7.3217338800119065`*^-6, "TestSize" -> 33., 
              "ModelMemory" -> 5760., "ModelUtility" -> -1.4830595436412266`, 
              "Round" -> 1, "Iteration" -> 30, 
              "Time" -> {
               0.608685`6.235937592936683, 0.617865`6.242438588067435}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.003504179226206712, 
              "TrainingMemory" -> 65614., "ExperimentCount" -> 3, 
              "MeanCrossEntropyHistory" -> {
                Around[3.314620388647142, 0.5198670989546461], 
                Around[1.9892483348233354`, 0.07496484374127044], 
                Around[1.7773151494077157`, 0.06476603843370347]}, 
              "StandardDeviationHistory" -> {
                Around[3.08495313568518, 0.417560795886524], 
                Around[1.7492484829113462`, 0.1958157393969747], 
                Around[1.4660355998615153`, 0.1875838694380876]}, 
              "IterationHistory" -> {2, 17, 30}, 
              "TimeHistory" -> {{
                0.250269`5.849952051802875, 0.2552`5.8584256635450975}, {
                0.416102`6.070744796736355, 0.422515`6.0773871252469895}, {
                0.608685`6.235937592936683, 0.617865`6.242438588067435}}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.8627400620528882`, 0.20782811974887958`], 
              "StandardDeviation" -> 
              Around[1.8444191295591543`, 0.3218181467377676], 
              "EvaluationTime" -> 0.000024940778937110984`, "TestSize" -> 8., 
              "ModelMemory" -> 5888., "ModelUtility" -> -1.3396204471438793`, 
              "Round" -> 2, "Iteration" -> 36, 
              "Time" -> {
               0.690601`6.290772196374408, 0.69647`6.294447407701674}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.003981071705534968, 
              "TrainingMemory" -> 67573.33333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[1.9321914564954272`, 0.33839412224571525`], 
                Around[1.7932886676103494`, 0.2402162420413659]}, 
              "StandardDeviationHistory" -> {
                Around[1.865710445807107, 0.4513581720880231], 
                Around[1.8231278133112019`, 0.456938144626783]}, 
              "IterationHistory" -> {15, 36}, 
              "TimeHistory" -> {{
                0.396514`6.04980351936248, 0.402502`6.056313036179502}, {
                0.690601`6.290772196374408, 0.69647`6.294447407701674}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.000024940778937110984`, "ModelMemory" -> 
             5888., "StandardDeviation" -> 
             Around[1.8444191295591543`, 0.3218181467377676], 
             "TrainingMemory" -> 67573.33333333333, "TrainingTime" -> 
             0.005136418625476049|>, "Index" -> 2|>, <|
          "Value" -> "RandomForest", 
           "Options" -> <|
            "FeatureFraction" -> <|"Value" -> Automatic|>, 
             "LeafSize" -> <|"Value" -> Automatic|>, 
             "TreeNumber" -> <|"Value" -> Automatic|>, 
             "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
             "Implementation" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.2810163489945614`, 0.3192828386575788], 
              "StandardDeviation" -> 
              Around[1.8899599066717372`, 0.2899259280314258], 
              "EvaluationTime" -> 0.00007814454507783724, "TestSize" -> 33., 
              "ModelMemory" -> 99408., "ModelUtility" -> -1.3599411626656321`,
               "Round" -> 1, "Iteration" -> 33, 
              "Time" -> {
               0.647961`6.263093860486157, 0.665641`6.274785057868436}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.010266268232592241`, 
              "TrainingMemory" -> 158072., "ExperimentCount" -> 3, 
              "MeanCrossEntropyHistory" -> {
                Around[2.913410708753409, 0.49759247457473316`], 
                Around[1.9765087036468472`, 0.16041912145756673`], 
                Around[1.9531296345834293`, 0.04568130369499399]}, 
              "StandardDeviationHistory" -> {
                Around[2.375220019114628, 0.33166536547454256`], 
                Around[1.7715545851666, 0.27458465565684165`], 
                Around[1.5231051157339832`, 0.19056475868871972`]}, 
              "IterationHistory" -> {3, 19, 33}, 
              "TimeHistory" -> {{
                0.256753`5.861060520257341, 0.269734`5.882480686265946}, {
                0.435614`6.090646822396612, 0.452801`6.107452370806052}, {
                0.647961`6.263093860486157, 0.665641`6.274785057868436}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.256724256315313, 0.3827189409057582], 
              "StandardDeviation" -> 
              Around[1.9883466249217674`, 0.3311047194654015], 
              "EvaluationTime" -> 0.0003466590681377349, "TestSize" -> 8., 
              "ModelMemory" -> 99408., "ModelUtility" -> -1.41323181007705, 
              "Round" -> 2, "Iteration" -> 38, 
              "Time" -> {
               0.710159`6.302900588823225, 0.722459`6.310358199140473}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.01104059686104205, 
              "TrainingMemory" -> 158824., "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[2.2493597752297503`, 0.5219704452433775], 
                Around[2.2640887374008765`, 0.5626033200175377]}, 
              "StandardDeviationHistory" -> {
                Around[1.9769015999276274`, 0.45998177325661177`], 
                Around[1.9997916499159074`, 0.4763956553395164]}, 
              "IterationHistory" -> {9, 38}, 
              "TimeHistory" -> {{
                0.317364`5.953102654767776, 0.334502`5.975943712270571}, {
                0.710159`6.302900588823225, 0.722459`6.310358199140473}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0003466590681377349, "ModelMemory" -> 
             99408., "StandardDeviation" -> 
             Around[1.9883466249217674`, 0.3311047194654015], 
             "TrainingMemory" -> 158824., "TrainingTime" -> 
             0.01479291294561948|>, "Index" -> 3|>, <|
          "Value" -> "NearestNeighbors", 
           "Options" -> <|
            "NeighborsNumber" -> <|"Value" -> Automatic|>, 
             "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
             "NearestMethod" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.226261631999623, 0.6428324189869521], 
              "StandardDeviation" -> 
              Around[1.3393843385847457`, 0.3213883368176754], 
              "EvaluationTime" -> 0.00001020295809548493, "TestSize" -> 33., 
              "ModelMemory" -> 6128., "ModelUtility" -> -1.0322392618434206`, 
              "Round" -> 1, "Iteration" -> 29, 
              "Time" -> {
               0.597178`6.227648793462235, 0.605284`6.233504187475353}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.0033669761715100265`, 
              "TrainingMemory" -> 69052., "ExperimentCount" -> 3, 
              "MeanCrossEntropyHistory" -> {
                Around[3.329142363157567, 0.9749136516175894], 
                Around[2.2231061836415438`, 0.6071650132868773], 
                Around[1.1265363491997578`, 0.09619290682117786]}, 
              "StandardDeviationHistory" -> {
                Around[1.8984917248066997`, 0.31776604538255027`], 
                Around[1.1612480437415416`, 0.22261595515587612`], 
                Around[0.9584132472059957, 0.25018560648648]}, 
              "IterationHistory" -> {4, 14, 29}, 
              "TimeHistory" -> {{
                0.271426`5.885196440046282, 0.276488`5.893221280504229}, {
                0.388265`6.040673236496414, 0.393931`6.046965152013141}, {
                0.597178`6.227648793462235, 0.605284`6.233504187475353}}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.5499510577079312, 0.2974765006849016], 
              "StandardDeviation" -> 
              Around[1.3682290864514988`, 0.46751327744742316`], 
              "EvaluationTime" -> 0.00002924597990828349, "TestSize" -> 8., 
              "ModelMemory" -> 6512., "ModelUtility" -> -1.0727766449598657`, 
              "Round" -> 2, "Iteration" -> 35, 
              "Time" -> {
               0.68232`6.285533094898022, 0.68834`6.289348000990318}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.003435209008623909, 
              "TrainingMemory" -> 85648., "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[0.7488024732921628, 0.29345543692938075`], 
                Around[0.3510996421236995, 0.33678208979054886`]}, 
              "StandardDeviationHistory" -> {
                Around[1.3781931105848881`, 0.6503093654262019], 
                Around[1.3582650623181096`, 0.6722640964262284]}, 
              "IterationHistory" -> {8, 35}, 
              "TimeHistory" -> {{
                0.310136`5.943097174741028, 0.31573`5.950860843096305}, {
                0.68232`6.285533094898022, 0.68834`6.289348000990318}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00002924597990828349, "ModelMemory" -> 
             6512., "StandardDeviation" -> 
             Around[1.3682290864514988`, 0.46751327744742316`], 
             "TrainingMemory" -> 85648., "TrainingTime" -> 
             0.0047754118650458295`|>, "Index" -> 4|>, <|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 1.*^6|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.8578042295889508`, 0.41765312871831867`], 
              "StandardDeviation" -> 
              Around[2.925193919794679, 0.31312465138963325`], 
              "EvaluationTime" -> 0.00004144185874797419, "TestSize" -> 33., 
              "ModelMemory" -> 15176., "ModelUtility" -> -1.7876994939897797`,
               "Round" -> 1, "Iteration" -> 25, 
              "Time" -> {
               0.534847`6.17977455765019, 0.547018`6.189546610820365}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.006854143078948891, 
              "TrainingMemory" -> 70797.33333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[3.25429828552885, 0.4972613586656281], 
                Around[2.4613101736490517`, 0.13607573193899478`]}, 
              "StandardDeviationHistory" -> {
                Around[3.0849428275169966`, 0.417559565439009], 
                Around[2.765445012072361, 0.3523986900696504]}, 
              "IterationHistory" -> {5, 25}, 
              "TimeHistory" -> {{
                0.278379`5.896181463916862, 0.287731`5.9105316485863595}, {
                0.534847`6.17977455765019, 0.547018`6.189546610820365}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.7185821155303027`, 0.5202223313188304], 
              "StandardDeviation" -> 
              Around[3.204809979149815, 0.9759305347348114], "EvaluationTime" -> 
              0.00019811164905763907`, "TestSize" -> 8, "ModelMemory" -> 
              15176, "ModelUtility" -> -1.9169302915126454`, "Round" -> 2, 
              "Iteration" -> 28, 
              "Time" -> {
               0.582937`6.217166615097561, 0.594685`6.2258319777336295}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 71736, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.7185821155303027`, 0.36785273820021985`]}, 
              "StandardDeviationHistory" -> {
                Around[3.204809979149815, 0.6900870990779986]}, 
              "IterationHistory" -> {28}, 
              "TimeHistory" -> {{
                0.582937`6.217166615097561, 0.594685`6.2258319777336295}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00019811164905763907`, "ModelMemory" -> 
             15176, "StandardDeviation" -> 
             Around[3.204809979149815, 0.9759305347348114], "TrainingMemory" -> 
             71736, "TrainingTime" -> 0.010110888841318444`|>, "Index" -> 
           5|>, <|"Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.00001|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.5789324688151427`, 0.43157068868225573`], 
              "StandardDeviation" -> 
              Around[1.8014209369797591`, 0.21112703967106736`], 
              "EvaluationTime" -> 0.000049305874647924924`, "TestSize" -> 33.,
               "ModelMemory" -> 15176., 
              "ModelUtility" -> -1.3049011820513545`, "Round" -> 1, 
              "Iteration" -> 31, 
              "Time" -> {
               0.621209`6.2447827326034, 0.634458`6.2539478713499195}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.006477577341757766, 
              "TrainingMemory" -> 70844., "ExperimentCount" -> 3, 
              "MeanCrossEntropyHistory" -> {
                Around[3.119873106508784, 0.6422428165241303], 
                Around[1.7613201642875607`, 0.12021199148200316`], 
                Around[2.8556041356490827`, 0.5343690912814215]}, 
              "StandardDeviationHistory" -> {
                Around[1.9143426017632572`, 0.25687268023171206`], 
                Around[1.4801289964938578`, 0.19262838145897365`], 
                Around[2.009791212682163, 0.2729284356478929]}, 
              "IterationHistory" -> {6, 20, 31}, 
              "TimeHistory" -> {{
                0.28938`5.913013505801499, 0.297875`5.925579048850486}, {
                0.456242`6.110740255867212, 0.469988`6.123631762920384}, {
                0.621209`6.2447827326034, 0.634458`6.2539478713499195}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.0214298347739468`, 0.1764583290567213], 
              "StandardDeviation" -> 
              Around[1.8904986366009433`, 0.2937644560191583], 
              "EvaluationTime" -> 0.00015736567647427077`, "TestSize" -> 8., 
              "ModelMemory" -> 15176., "ModelUtility" -> -1.360601437291578, 
              "Round" -> 2, "Iteration" -> 37, 
              "Time" -> {
               0.698714`6.2958444387137265, 0.707857`6.301490524655275}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.0054444393724491225`, 
              "TrainingMemory" -> 71986.66666666666, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[2.0468994596099215`, 0.24008768021202231`], 
                Around[1.995960209937972, 0.25440719226560715`]}, 
              "StandardDeviationHistory" -> {
                Around[1.9033152370807858`, 0.40814747504728177`], 
                Around[1.8776820361211009`, 0.4223152050838062]}, 
              "IterationHistory" -> {7, 37}, 
              "TimeHistory" -> {{
                0.299596`5.928081004160504, 0.308446`5.940724136079889}, {
                0.698714`6.2958444387137265, 0.707857`6.301490524655275}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00015736567647427077`, "ModelMemory" -> 
             15176., "StandardDeviation" -> 
             Around[1.8904986366009433`, 0.2937644560191583], 
             "TrainingMemory" -> 71986.66666666666, "TrainingTime" -> 
             0.008709797484461906|>, "Index" -> 6|>, <|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 10000.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.857642964431489, 0.4180568293518465], 
              "StandardDeviation" -> 
              Around[2.923921891992111, 0.31318641320606266`], 
              "EvaluationTime" -> 0.00006568091981259936, "TestSize" -> 33., 
              "ModelMemory" -> 15176., "ModelUtility" -> -1.7872778256433568`,
               "Round" -> 1, "Iteration" -> 26, 
              "Time" -> {
               0.550354`6.192187120792775, 0.563701`6.202593798750962}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 70733.33333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[3.2545466085120562`, 0.49751899894268364`], 
                Around[2.460739320350922, 0.1361231294682639]}, 
              "StandardDeviationHistory" -> {
                Around[3.083922708946671, 0.41743772829155273`], 
                Around[2.7639210750375507`, 0.3522977492436589]}, 
              "IterationHistory" -> {10, 26}, 
              "TimeHistory" -> {{
                0.337068`5.979262517648257, 0.349531`5.995030692982246}, {
                0.550354`6.192187120792775, 0.563701`6.202593798750962}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.716917638331963, 0.5208524612946998], 
              "StandardDeviation" -> 
              Around[3.1991556085943054`, 0.9740802289383211], 
              "EvaluationTime" -> 0.00015736567647427077`, "TestSize" -> 8, 
              "ModelMemory" -> 15176, "ModelUtility" -> -1.9151567853856388`, 
              "Round" -> 2, "Iteration" -> 32, 
              "Time" -> {
               0.637833`6.256251978373361, 0.646291`6.261973101642764}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 71800, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.716917638331963, 0.36829830737918595`]}, 
              "StandardDeviationHistory" -> {
                Around[3.1991556085943054`, 0.6887787353020315]}, 
              "IterationHistory" -> {32}, 
              "TimeHistory" -> {{
                0.637833`6.256251978373361, 0.646291`6.261973101642764}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00015736567647427077`, "ModelMemory" -> 
             15176, "StandardDeviation" -> 
             Around[3.1991556085943054`, 0.9740802289383211], 
             "TrainingMemory" -> 71800, "TrainingTime" -> 
             0.010530207459611605`|>, "Index" -> 7|>, <|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 1.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.581310991221754, 0.8044847966682924], 
              "StandardDeviation" -> 
              Around[1.768981409805431, 0.3057345453018416], "EvaluationTime" -> 
              0.00005631735174140273, "TestSize" -> 33., "ModelMemory" -> 
              15176., "ModelUtility" -> -1.2975419532387644`, "Round" -> 1, 
              "Iteration" -> 22, 
              "Time" -> {
               0.487954`6.139923875974524, 0.500386`6.15085014382231}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 70845.33333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[3.3745798140768803`, 0.7210588879369776], 
                Around[1.7880421683666277`, 0.13623536838071315`]}, 
              "StandardDeviationHistory" -> {
                Around[2.0266695728954156`, 0.275116645137092], 
                Around[1.5112932467154467`, 0.20528750258964068`]}, 
              "IterationHistory" -> {11, 22}, 
              "TimeHistory" -> {{
                0.352024`5.998117266952089, 0.363706`6.012295459096734}, {
                0.487954`6.139923875974524, 0.500386`6.15085014382231}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.054813362453311, 0.18915120004510064`], 
              "StandardDeviation" -> 
              Around[1.912029841153295, 0.2933496492759948], "EvaluationTime" -> 
              0.0002979524204357164, "TestSize" -> 8., "ModelMemory" -> 
              15176., "ModelUtility" -> -1.3715448042663088`, "Round" -> 2, 
              "Iteration" -> 40, 
              "Time" -> {
               0.736306`6.318603332959873, 0.898762`6.405189695494969}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.05812529464686565, 
              "TrainingMemory" -> 126141.33333333333`, "ExperimentCount" -> 2,
               "MeanCrossEntropyHistory" -> {
                Around[2.0745896945290334`, 0.25725620698805945`], 
                Around[2.0350370303775893`, 0.2757765712503366]}, 
              "StandardDeviationHistory" -> {
                Around[1.920954502295345, 0.40801892285399527`], 
                Around[1.9031051800112453`, 0.4216510356878882]}, 
              "IterationHistory" -> {24, 40}, 
              "TimeHistory" -> {{
                0.520377`6.167863086547272, 0.532325`6.177721856262927}, {
                0.736306`6.318603332959873, 0.898762`6.405189695494969}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0002979524204357164, "ModelMemory" -> 
             15176., "StandardDeviation" -> 
             Around[1.912029841153295, 0.2933496492759948], "TrainingMemory" -> 
             126141.33333333333`, "TrainingTime" -> 0.031774653152457734`|>, 
           "Index" -> 8|>, <|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.001|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.4407700852486096`, 0.6896405904294363], 
              "StandardDeviation" -> 
              Around[1.697301872933136, 0.2662927728039666], "EvaluationTime" -> 
              0.00003814925490285352, "TestSize" -> 33., "ModelMemory" -> 
              15176., "ModelUtility" -> -1.2530918320272177`, "Round" -> 1, 
              "Iteration" -> 16, 
              "Time" -> {
               0.404179`6.058118738546004, 0.413797`6.068332331231759}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 70749.33333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[3.12021064159845, 0.6423526797236562], 
                Around[1.7613295288987691`, 0.12022417749935611`]}, 
              "StandardDeviationHistory" -> {
                Around[1.9144637754523426`, 0.25689286896812347`], 
                Around[1.4801399704139295`, 0.19263625315512273`]}, 
              "IterationHistory" -> {12, 16}, 
              "TimeHistory" -> {{
                0.366191`6.01525265979052, 0.375618`6.026291389425948}, {
                0.404179`6.058118738546004, 0.413797`6.068332331231759}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.0469272512483117`, 0.3395582026153195], 
              "StandardDeviation" -> 
              Around[1.9033322702711848`, 0.5772069037030744], 
              "EvaluationTime" -> 0.00015736567647427077`, "TestSize" -> 8, 
              "ModelMemory" -> 15176, "ModelUtility" -> -1.3956461938849078`, 
              "Round" -> 2, "Iteration" -> 18, 
              "Time" -> {
               0.424984`6.0799175733286095, 0.433831`6.088865575401707}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 71872, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.0469272512483117`, 0.24010390767680806`]}, 
              "StandardDeviationHistory" -> {
                Around[1.9033322702711848`, 0.4081469157561344]}, 
              "IterationHistory" -> {18}, 
              "TimeHistory" -> {{
                0.424984`6.0799175733286095, 0.433831`6.088865575401707}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00015736567647427077`, "ModelMemory" -> 
             15176, "StandardDeviation" -> 
             Around[1.9033322702711848`, 0.5772069037030744], 
             "TrainingMemory" -> 71872, "TrainingTime" -> 
             0.008896498557170722|>, "Index" -> 9|>, <|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 100000.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.857789552506687, 0.4176898390760988], 
              "StandardDeviation" -> 
              Around[2.9250781888429196`, 0.3131302644177349], 
              "EvaluationTime" -> 0.00004558700139956779, "TestSize" -> 33., 
              "ModelMemory" -> 15176., "ModelUtility" -> -1.7876611388668238`,
               "Round" -> 1, "Iteration" -> 27, 
              "Time" -> {
               0.567218`6.205294997717242, 0.579546`6.214632906191299}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.006854143078948891, 
              "TrainingMemory" -> 70754.66666666666, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[3.2543208547465037`, 0.49728478763439693`], 
                Around[2.4612582502668707`, 0.13608004253506106`]}, 
              "StandardDeviationHistory" -> {
                Around[3.0848500190111934`, 0.4175484816875566], 
                Around[2.765306358674646, 0.3523895077057175]}, 
              "IterationHistory" -> {13, 27}, 
              "TimeHistory" -> {{
                0.377502`6.028464250353003, 0.386596`6.038802349688988}, {
                0.567218`6.205294997717242, 0.579546`6.214632906191299}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.718430452822127, 0.520279705749496], 
              "StandardDeviation" -> 
              Around[3.2042942175828224`, 0.975761794908109], 
              "EvaluationTime" -> 0.00019811164905763907`, "TestSize" -> 8, 
              "ModelMemory" -> 15176, "ModelUtility" -> -1.9167686578138876`, 
              "Round" -> 2, "Iteration" -> 34, 
              "Time" -> {
               0.669166`6.277078860054852, 0.680602`6.284438214464534}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 71912, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.718430452822127, 0.36789330804921017`]}, 
              "StandardDeviationHistory" -> {
                Around[3.2042942175828224`, 0.689967782002281]}, 
              "IterationHistory" -> {34}, 
              "TimeHistory" -> {{
                0.669166`6.277078860054852, 0.680602`6.284438214464534}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00019811164905763907`, "ModelMemory" -> 
             15176, "StandardDeviation" -> 
             Around[3.2042942175828224`, 0.975761794908109], "TrainingMemory" -> 
             71912, "TrainingTime" -> 0.010110888841318444`|>, "Index" -> 
           10|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "DecisionTree", "LinearRegression", "NearestNeighbors", 
             "RandomForest"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
            TypeSystem`AnyLength]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "ModelMemory", "ModelUtility", "Round", "Iteration",
               "Time", "TrainingSize", "TrainingTime", "TrainingMemory", 
              "ExperimentCount", "MeanCrossEntropyHistory", 
              "StandardDeviationHistory", "IterationHistory", 
              "TimeHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 2], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[
               TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
              TypeSystem`Vector[
               TypeSystem`Vector[
                TypeSystem`Atom[Real], 2], TypeSystem`AnyLength]}], 2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 10], <||>], "TrainingSizes" -> {8, 33},
       "MaxTrainingSize" -> 41, "PreprocessorEvaluationTime" -> 6.15625*^-6, 
      "PreprocessorMemory" -> 55688, "InputDimension" -> 1, "OutputDimension" -> 
      1, "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 8, "TimeBudgets" -> 0.27999999999999997`, 
          "ElapsedTimes" -> 0.27933399999999997`, "ExperimentCounts" -> 
          24|>, <|"TrainingSizes" -> 33, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
          0.46514500000000003`, "ExperimentCounts" -> 16|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.1}, "ID" -> 
           345233281841007474|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 1.091123, 
      "MaxTrainingMemory" -> 968104, "DataMemory" -> 3976, "FunctionMemory" -> 
      234736, "LanguageVersion" -> {13.3, 1}, "Date" -> 
      DateObject[{2023, 9, 14, 16, 0, 33.023505`8.271398146038502}, "Instant",
         "Gregorian", 2.], "ProcessorCount" -> 4, "ProcessorType" -> "x86-64",
       "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9036888330555973`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"1e50e7bf-cead-4959-9e1e-d1fc2f63ae19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"knn", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"rules", ",", 
    RowBox[{"Method", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<NearestNeighbors\>\"", ",", 
       RowBox[{"\"\<NeighborsNumber\>\"", "\[Rule]", "2"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.903342673737096*^9, 3.903342678400523*^9}, {
  3.903342738333851*^9, 3.9033427591993093`*^9}, {3.903342870036888*^9, 
  3.9033428809325857`*^9}, {3.9033429299088087`*^9, 3.903342944964506*^9}, {
  3.903342997763939*^9, 3.903343108492495*^9}, {3.90334617988505*^9, 
  3.903346190973082*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"ff751768-a301-4183-bacd-e3ada56e551c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Numerical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Numerical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["41", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[<|
   "ExampleNumber" -> 41, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 41, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Sequence", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 4463274533565020503|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {5.415722071342227*^-17}, 
                    "StandardDeviation" -> {1.1832159566199232`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 2523344124640608097|>]}, 
                   "Invertibility" -> "Perfect", "StructurePreserving" -> 
                   True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                "DirectTraining", "BatchProcessing" -> Automatic, 
                "Model" -> <|
                 "RotationMatrix" -> {{1.}}, 
                  "Precisions" -> {0.9989365922352625}, "NoisePrecision" -> 
                  None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.00013608978181551932`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 3001451220314565817|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 1, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.00013608978181552203`}, 
                    "StandardDeviation" -> {1.00053212832204}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.3, 1}, "ID" -> 
                    787979534263831810|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Mean" -> {0.00013608978181552203`}, 
                   "StandardDeviation" -> {1.00053212832204}, "Method" -> 
                   "NaiveSampler", "VectorLength" -> 1, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Type" -> "NumericalVector", "Version" -> {13.3, 1}, "ID" -> 
                   787979534263831810|>], "InputDimension" -> 0, 
                "OutputDimension" -> 1, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.1}, 
                    "ID" -> 3418703251837826833|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.082546, "MaxTrainingMemory" -> 184784, 
                  "DataMemory" -> 2256, "FunctionMemory" -> 38648, 
                  "LanguageVersion" -> {13.3, 1}, "Date" -> 
                  DateObject[{
                    2023, 9, 14, 15, 53, 34.774553`8.293836536066436}, 
                    "Instant", "Gregorian", 2.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-3.1516920894950835`, -3.1516920894950835`, \
-1.74961195814442, -1.608795819073631, -1.5072143979224648`, \
-1.381019028232207, -1.3216679546730665`, -1.197915534670655, \
-1.107971229621685, -1.1056007642901975`, -1.1020000010319688`}, 
                   "LeftBoundary" -> -1.74961195814442, "LeftScale" -> 
                   0.7010400656753317, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[1.5233488777155384`, 0.19441321663939437`], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.3, 1}, 
             "ID" -> 4270897793735380344|>], 
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 2344087184081217960|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {5.415722071342227*^-17}, 
             "StandardDeviation" -> {1.1832159566199232`}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 2994853854525481099|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 8966868728716526926|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {0.6188536920321601}, 
             "StandardDeviation" -> {2.669958506289822}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 4088785673966827386|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "Version" -> {13.3, 1}, "ID" -> 4629561655622906945|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> "f1",
              "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
             "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (0.6188536920321601 + 
       2.669958506289822 #& ), 
      "ProcessorFunction" -> (-0.23178401109016486` + 
       0.37453765578911613` #& ), "Name" -> "value", 
      "Quantiles" -> {-0.9743549036873252, 2.3970896889988795`}, "Mean" -> 
      0.61885369203216|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
    0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "NeighborsFunction" -> 
      MachineLearning`PackageScope`NeighborsFunction["Nearest", 
        NearestFunction[
         Hold[
          Nearest[CompressedData["
1:eJwBWQGm/iFib1JlAgAAACkAAAABAAAASMoEpO/1+r+l9pvDz4/lP5BHL5xb
GfC/p7x20Omb9b9ZkX3jjHbtP7kCQSVgW9C/PnuN4s4E0D/hqH1nLdryvwWl
oU+dnfE/N/bu7DM29L+CXqxCQhLrPyGXl2+LKNu/r9LDpHji9j/rmb0lMmLV
v/Hc6HUVw+I/oWJ2Nbd27b/hNxiW7P36P03divXRtLe/ykXAe8U+tj8Yv8vs
6pfxv+AoaEcuJvQ/vvhgS+9x+L9y0OwGyCvbP/KGqk34N+i/8RNPGCfd8j8S
6Lxqbw2Bvx725RFfIdY/vckMZpMo47/UERqR3pr1P0Rb4AJe2Pa/pa1Q5d9e
4D+nPbEdgkLrv20wWLdLMvA/lgenOISyxb9Q6OhyABLoP3Gknwv+8OW/zHey
aDU0+D/3ujImWbn5vz+E/EO0X8Q/aejcM+7h379Rhh7fnsT5Pw7huz0=
            "] -> Automatic, Method -> "KDtree"]]]], "NeighborsNumber" -> 2, 
      "DistributionData" -> {NormalDistribution, 0.09237844705104413}, 
      "TrainingOutput" -> 
      RawArray["Real32",{-0.5470031499862671, 
        0.2608265280723572, -0.7944381237030029, -0.8000177145004272, 
        0.6979858875274658, -0.7531561851501465, -0.19726361334323883`, \
-0.8037722110748291, 1.176830768585205, -0.7357929348945618, 
        0.5347824692726135, -0.8294151425361633, 
        1.9105284214019775`, -0.7277771234512329, 
        0.13909128308296204`, -0.8744783401489258, 
        2.397089719772339, -0.5218569040298462, -0.49397316575050354`, \
-0.8002035617828369, 
        1.4406095743179321`, -0.7075431942939758, -0.09657405316829681, \
-0.9743549227714539, 
        1.276768445968628, -0.5444528460502625, -0.21737121045589447`, \
-0.946909487247467, 1.5736650228500366`, -0.6741609573364258, 
        0.011667678132653236`, -0.9316672086715698, 
        0.9570425152778625, -0.6011377573013306, 
        0.5459022521972656, -0.7830787897109985, 
        1.984426736831665, -0.6742683053016663, -0.41710296273231506`, \
-0.7642444372177124, 2.3047969341278076`}], "DistributionSmoothing" -> 0.5, 
      "Processor" -> 
      MachineLearning`MLProcessor[
       "FirstValues", <|
        "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
         "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
      "NearestNeighbors", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "NeighborsNumber" -> <|"Value" -> 2, "Options" -> <||>|>, 
        "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
        "NearestMethod" -> <|"Value" -> "KDtree", "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Configurations" -> 
      Dataset[<|<|
          "Value" -> "NearestNeighbors", 
           "Options" -> <|
            "NeighborsNumber" -> <|"Value" -> 2|>, 
             "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
             "NearestMethod" -> <|"Value" -> Automatic|>|>, "NaiveImputer" -> 
           Missing["KeyAbsent", "NaiveImputer"], "EMIterations" -> 
           Missing["KeyAbsent", "EMIterations"]|> -> <||>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{
          "Value", "Options", "NaiveImputer", "EMIterations"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 3], 
           TypeSystem`UnknownType, TypeSystem`UnknownType}], 
         TypeSystem`Assoc[
         TypeSystem`UnknownType, TypeSystem`UnknownType, 
          TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
      Dataset[<|"Configuration" -> {
          "NearestNeighbors", "NeighborsNumber" -> 2, "DistributionSmoothing" -> 
           0.5, "NearestMethod" -> Automatic}, "ModelUtility" -> Missing[]|>, 
        
        TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>], 
      "InputDimension" -> 1, "OutputDimension" -> 1|>, "AnomalyDetector" -> 
    None, "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.1}, "ID" -> 
           345233281841007474|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 0.137969, 
      "MaxTrainingMemory" -> 283360, "DataMemory" -> 3976, "FunctionMemory" -> 
      102160, "LanguageVersion" -> {13.3, 1}, "Date" -> 
      DateObject[{2023, 9, 14, 15, 53, 34.825398`8.294471068319497}, 
        "Instant", "Gregorian", 2.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.903346191405375*^9, 3.903687629613552*^9, 
  3.9036883444393673`*^9, 3.903688414840121*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"94aaa561-a94e-4107-81a5-5c3d7b855c4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rf", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"rules", ",", 
    RowBox[{"Method", "->", "\"\<RandomForest\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.903346467970886*^9, 3.903346484717037*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"578e50a8-b49b-4d59-975c-eb1ab9767f77"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Numerical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Numerical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["41", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[<|
   "ExampleNumber" -> 41, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 41, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Sequence", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 4463274533565020503|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {5.415722071342227*^-17}, 
                    "StandardDeviation" -> {1.1832159566199232`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 2523344124640608097|>]}, 
                   "Invertibility" -> "Perfect", "StructurePreserving" -> 
                   True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                "DirectTraining", "BatchProcessing" -> Automatic, 
                "Model" -> <|
                 "RotationMatrix" -> {{1.}}, 
                  "Precisions" -> {0.9989365922352625}, "NoisePrecision" -> 
                  None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.00013608978181551932`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 3001451220314565817|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 1, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.00013608978181552203`}, 
                    "StandardDeviation" -> {1.00053212832204}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.3, 1}, "ID" -> 
                    787979534263831810|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Mean" -> {0.00013608978181552203`}, 
                   "StandardDeviation" -> {1.00053212832204}, "Method" -> 
                   "NaiveSampler", "VectorLength" -> 1, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Type" -> "NumericalVector", "Version" -> {13.3, 1}, "ID" -> 
                   787979534263831810|>], "InputDimension" -> 0, 
                "OutputDimension" -> 1, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.1}, 
                    "ID" -> 3418703251837826833|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.073853, "MaxTrainingMemory" -> 185192, 
                  "DataMemory" -> 2256, "FunctionMemory" -> 38648, 
                  "LanguageVersion" -> {13.3, 1}, "Date" -> 
                  DateObject[{
                    2023, 9, 14, 15, 53, 34.929759`8.295770569093103}, 
                    "Instant", "Gregorian", 2.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-3.1516920894950835`, -3.1516920894950835`, \
-1.74961195814442, -1.608795819073631, -1.5072143979224648`, \
-1.381019028232207, -1.3216679546730665`, -1.197915534670655, \
-1.107971229621685, -1.1056007642901975`, -1.1020000010319688`}, 
                   "LeftBoundary" -> -1.74961195814442, "LeftScale" -> 
                   0.7010400656753317, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[1.5233488777155384`, 0.19441321663939437`], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.3, 1}, 
             "ID" -> 4270897793735380344|>], 
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 2344087184081217960|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {5.415722071342227*^-17}, 
             "StandardDeviation" -> {1.1832159566199232`}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 2994853854525481099|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 8966868728716526926|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {0.6188536920321601}, 
             "StandardDeviation" -> {2.669958506289822}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 4088785673966827386|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "Version" -> {13.3, 1}, "ID" -> 4629561655622906945|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> "f1",
              "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
             "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (0.6188536920321601 + 
       2.669958506289822 #& ), 
      "ProcessorFunction" -> (-0.23178401109016486` + 
       0.37453765578911613` #& ), "Name" -> "value", 
      "Quantiles" -> {-0.9743549036873252, 2.3970896889988795`}, "Mean" -> 
      0.61885369203216|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
    0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|"Trees" -> {
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.4245471954345703, -0.4243496358394623}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., -1., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.6738051176071167, -0.7568322420120239}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 2.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {
           0.6738051176071167, -0.008326406590640545}, "Children" -> 
          RawArray["Integer16",{{2, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., 0., 1.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1, 1}], 
          "NumericalThresholds" -> {
           0.845978856086731, -0.33411839604377747`, -0.9207416772842407}, 
          "Children" -> RawArray["Integer16",{{2, -4}, {3, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., -1., 0., 2.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.6738051176071167, -0.09260284900665283},
           "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.6738051176071167, -0.7568322420120239}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.5115813612937927, -0.1695103943347931}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.5115813612937927, -0.5987030863761902}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 2.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1, 1}], 
          "NumericalThresholds" -> {
           0.6738051176071167, -0.49816471338272095`, -1.099589228630066}, 
          "Children" -> RawArray["Integer16",{{2, -4}, {3, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., -1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {
           0.25029346346855164`, -0.6856679916381836}, "Children" -> 
          RawArray["Integer16",{{2, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., -1., 1.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1, 1}], 
          "NumericalThresholds" -> {
           0.6738051176071167, -0.1695103943347931, -0.6856679916381836}, 
          "Children" -> RawArray["Integer16",{{2, -4}, {3, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., -1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.5863139629364014, -0.5987030863761902}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1, 1}], 
          "NumericalThresholds" -> {
           0.6738051176071167, -0.25557711720466614`, -1.178265929222107}, 
          "Children" -> RawArray["Integer16",{{2, -4}, {3, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., -1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {
           0.6738051176071167, -0.008326406590640545}, "Children" -> 
          RawArray["Integer16",{{2, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., 0., 1.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {
           0.5863139629364014, -0.49816471338272095`}, "Children" -> 
          RawArray["Integer16",{{2, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., 0., 1.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1, 1}], 
          "NumericalThresholds" -> {
           0.845978856086731, -0.09260284900665283, -1.099589228630066}, 
          "Children" -> RawArray["Integer16",{{2, -4}, {3, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., -1., 0., 2.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.5863139629364014, -0.5987030863761902}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.5863139629364014, -0.09260284900665283},
           "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1, 1}], 
          "NumericalThresholds" -> {
           0.5115813612937927, -0.25557711720466614`, -1.3505648374557495`}, 
          "Children" -> RawArray["Integer16",{{2, -4}, {3, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., -1., 0., 2.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1, 1}], 
          "NumericalThresholds" -> {0.6738051176071167, 
           0.08689531683921814, -0.7568322420120239}, "Children" -> 
          RawArray["Integer16",{{2, -4}, {3, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., -1., 0., 1.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.845978856086731, -0.1695103943347931}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 2.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.6738051176071167, -0.09260284900665283},
           "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {
           0.5863139629364014, -0.49816471338272095`}, "Children" -> 
          RawArray["Integer16",{{2, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., 0., 1.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.9207214713096619, 0.15917065739631653`},
           "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 2.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {
           0.25029346346855164`, -0.25557711720466614`}, "Children" -> 
          RawArray["Integer16",{{2, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., 0., 1.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1, 1}], 
          "NumericalThresholds" -> {
           0.6738051176071167, -0.008326406590640545, -1.178265929222107}, 
          "Children" -> RawArray["Integer16",{{2, -4}, {3, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., -1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1, 1}], 
          "NumericalThresholds" -> {
           0.6738051176071167, -0.008326406590640545, -0.8518686890602112}, 
          "Children" -> RawArray["Integer16",{{2, -4}, {3, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., -1., 0., 2.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {
           0.4245471954345703, -0.008326406590640545}, "Children" -> 
          RawArray["Integer16",{{2, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., 0., 1.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {
           0.6738051176071167, -0.33411839604377747`}, "Children" -> 
          RawArray["Integer16",{{2, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., 0., 1.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.845978856086731, -0.09260284900665283}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 2.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1, 1}], 
          "NumericalThresholds" -> {
           0.4245471954345703, -0.33411839604377747`, -1.2632330656051636`}, 
          "Children" -> RawArray["Integer16",{{2, -4}, {3, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., -1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.845978856086731, -0.008326406590640545},
           "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 2.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.6738051176071167, -0.1695103943347931}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {
           0.6738051176071167, -0.33411839604377747`}, "Children" -> 
          RawArray["Integer16",{{2, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., 0., 1.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.5863139629364014, -0.1695103943347931}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {
           0.5115813612937927, -0.49816471338272095`}, "Children" -> 
          RawArray["Integer16",{{2, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., 0., 1.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.6738051176071167, -0.1695103943347931}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {
           0.5863139629364014, -0.49816471338272095`}, "Children" -> 
          RawArray["Integer16",{{2, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., 0., 1.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {
           0.5863139629364014, -0.25557711720466614`}, "Children" -> 
          RawArray["Integer16",{{2, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., 0., 2.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1, 1}], 
          "NumericalThresholds" -> {
           0.25029346346855164`, -0.33411839604377747`, -1.178265929222107}, 
          "Children" -> RawArray["Integer16",{{2, -4}, {3, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., -1., -1., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.6738051176071167, -0.6856679916381836}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.7521975040435791, 0.15917065739631653`},
           "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 2.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.5863139629364014, -0.1695103943347931}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1, 1}], 
          "NumericalThresholds" -> {
           0.6738051176071167, -0.33411839604377747`, -1.3505648374557495`}, 
          "Children" -> RawArray["Integer16",{{2, -4}, {3, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., -1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.6738051176071167, -0.1695103943347931}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 2.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.6738051176071167, -0.4243496358394623}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {
           0.5115813612937927, -0.33411839604377747`}, "Children" -> 
          RawArray["Integer16",{{2, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., 0., 1.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.6738051176071167, -0.09260284900665283},
           "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {
           0.7521975040435791, -0.33411839604377747`}, "Children" -> 
          RawArray["Integer16",{{2, -3}, {-1, -2}}], "LeafValues" -> 
          RawArray["Real32",{-1., 0., 2.}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{1, 1}], 
          "NumericalThresholds" -> {0.5863139629364014, -0.5987030863761902}, 
          "Children" -> RawArray["Integer16",{{2, -3}, {-1, -2}}], 
          "LeafValues" -> RawArray["Real32",{-1., 0., 1.}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 
          0|>]}, "Processor" -> 
      MachineLearning`MLProcessor[
       "FirstValues", <|
        "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
         "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], 
      "DistributionData" -> {NormalDistribution, 0.42792190820154424`}, 
      "Calibrator" -> None, "Method" -> "RandomForest", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "FeatureFraction" -> <|"Value" -> Rational[1, 3], "Options" -> <||>|>, 
        "LeafSize" -> <|"Value" -> 10, "Options" -> <||>|>, 
        "TreeNumber" -> <|"Value" -> 50, "Options" -> <||>|>, 
        "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
        "Implementation" -> <|"Value" -> "DAAL", "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Configurations" -> 
      Dataset[<|<|
          "Value" -> "RandomForest", 
           "Options" -> <|
            "FeatureFraction" -> <|"Value" -> Automatic|>, 
             "LeafSize" -> <|"Value" -> Automatic|>, 
             "TreeNumber" -> <|"Value" -> Automatic|>, 
             "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
             "Implementation" -> <|"Value" -> Automatic|>|>, "NaiveImputer" -> 
           Missing["KeyAbsent", "NaiveImputer"], "EMIterations" -> 
           Missing["KeyAbsent", "EMIterations"]|> -> <||>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{
          "Value", "Options", "NaiveImputer", "EMIterations"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 5], 
           TypeSystem`UnknownType, TypeSystem`UnknownType}], 
         TypeSystem`Assoc[
         TypeSystem`UnknownType, TypeSystem`UnknownType, 
          TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
      Dataset[<|"Configuration" -> {
          "RandomForest", "FeatureFraction" -> Automatic, "LeafSize" -> 
           Automatic, "TreeNumber" -> Automatic, "DistributionSmoothing" -> 
           0.5, "Implementation" -> Automatic}, "ModelUtility" -> Missing[]|>, 
        TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`UnknownType}], <||>], "InputDimension" -> 1, 
      "OutputDimension" -> 1|>, "AnomalyDetector" -> None, 
    "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.1}, "ID" -> 
           345233281841007474|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 0.120557, 
      "MaxTrainingMemory" -> 284176, "DataMemory" -> 3976, "FunctionMemory" -> 
      195824, "LanguageVersion" -> {13.3, 1}, "Date" -> 
      DateObject[{2023, 9, 14, 15, 53, 34.973207`8.29631043829063}, "Instant",
         "Gregorian", 2.], "ProcessorCount" -> 4, "ProcessorType" -> "x86-64",
       "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9033464852715063`*^9, 3.903687630207312*^9, 
  3.903688344623453*^9, 3.903688414988006*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"581fcf40-552b-4b03-ae53-03d4bb130ca2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nn", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"rules", ",", 
    RowBox[{"Method", "->", "\"\<NeuralNetwork\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.903343112743946*^9, 3.903343116603185*^9}, {
   3.9033461598741813`*^9, 3.9033461630899754`*^9}, {3.903346194678256*^9, 
   3.903346230649253*^9}, 3.903346269139822*^9, {3.903346440719556*^9, 
   3.9033464625925097`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"6c8481c1-c4fe-4cab-ad7d-12ab21a47cc5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Numerical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Numerical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["41", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[<|
   "ExampleNumber" -> 41, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 41, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Sequence", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 4463274533565020503|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {5.415722071342227*^-17}, 
                    "StandardDeviation" -> {1.1832159566199232`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 2523344124640608097|>]}, 
                   "Invertibility" -> "Perfect", "StructurePreserving" -> 
                   True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                "DirectTraining", "BatchProcessing" -> Automatic, 
                "Model" -> <|
                 "RotationMatrix" -> {{1.}}, 
                  "Precisions" -> {0.9989365922352625}, "NoisePrecision" -> 
                  None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.00013608978181551932`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 3001451220314565817|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 1, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.00013608978181552203`}, 
                    "StandardDeviation" -> {1.00053212832204}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.3, 1}, "ID" -> 
                    787979534263831810|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Mean" -> {0.00013608978181552203`}, 
                   "StandardDeviation" -> {1.00053212832204}, "Method" -> 
                   "NaiveSampler", "VectorLength" -> 1, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Type" -> "NumericalVector", "Version" -> {13.3, 1}, "ID" -> 
                   787979534263831810|>], "InputDimension" -> 0, 
                "OutputDimension" -> 1, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.1}, 
                    "ID" -> 3418703251837826833|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.060129, "MaxTrainingMemory" -> 185056, 
                  "DataMemory" -> 2256, "FunctionMemory" -> 38648, 
                  "LanguageVersion" -> {13.3, 1}, "Date" -> 
                  DateObject[{2023, 9, 14, 15, 53, 35.11217`8.29803265014712},
                     "Instant", "Gregorian", 2.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-3.1516920894950835`, -3.1516920894950835`, \
-1.74961195814442, -1.608795819073631, -1.5072143979224648`, \
-1.381019028232207, -1.3216679546730665`, -1.197915534670655, \
-1.107971229621685, -1.1056007642901975`, -1.1020000010319688`}, 
                   "LeftBoundary" -> -1.74961195814442, "LeftScale" -> 
                   0.7010400656753317, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[1.5233488777155384`, 0.19441321663939437`], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.3, 1}, 
             "ID" -> 4270897793735380344|>], 
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 2344087184081217960|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {5.415722071342227*^-17}, 
             "StandardDeviation" -> {1.1832159566199232`}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 2994853854525481099|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 8966868728716526926|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {0.6188536920321601}, 
             "StandardDeviation" -> {2.669958506289822}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 4088785673966827386|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "Version" -> {13.3, 1}, "ID" -> 4629561655622906945|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> "f1",
              "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
             "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (0.6188536920321601 + 
       2.669958506289822 #& ), 
      "ProcessorFunction" -> (-0.23178401109016486` + 
       0.37453765578911613` #& ), "Name" -> "value", 
      "Quantiles" -> {-0.9743549036873252, 2.3970896889988795`}, "Mean" -> 
      0.61885369203216|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
    0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "Method" -> "NeuralNetwork", "Network" -> 
      NetGraph[<|
        "Type" -> "Graph", 
         "Inputs" -> <|
          "Input" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>, 
         "Outputs" -> <|
          "Mean" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
           "LogStd" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
         "Nodes" -> <|
          "2" -> <|"Type" -> "NetArray", 
             "Arrays" -> <|
              "Array" -> RawArray["Real32",{-1.0907756090164185`}]|>, 
             "Parameters" -> <|
              "Dimensions" -> 
               NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT], 
               "$ArrayDimensions" -> {1}|>, "Inputs" -> <||>, 
             "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>|>, 
           "1" -> <|"Type" -> "Chain", 
             "Nodes" -> <|
              "1" -> <|"Type" -> "Linear", 
                 "Arrays" -> <|
                  "Weights" -> 
                   RawArray[
                    "Real32",{{-0.46573561429977417`}, \
{-0.10511572659015656`}, {-1.6311942338943481`}, {1.4866901636123657`}, {
                    2.7391254901885986`}, {-1.2689249515533447`}, \
{-1.0189133882522583`}, {0.19942735135555267`}, {
                    0.1477750539779663}, {-1.664239525794983}, {
                    0.046454936265945435`}, {0.1937563121318817}, {
                    0.9510058760643005}, {-0.8457313776016235}, \
{-0.06879546493291855}, {1.036088228225708}, {-0.3454151451587677}, {
                    0.21660277247428894`}, {-0.12839069962501526`}, \
{-0.07731185108423233}, {0.5900480151176453}, {-2.0366404056549072`}, {
                    0.029237978160381317`}, {-0.8821756839752197}, \
{-0.8161696791648865}, {-1.0655665397644043`}, {0.5342943072319031}, {
                    0.44852587580680847`}, {-0.45473572611808777`}, {
                    1.1470816135406494`}, {0.1283106505870819}, {
                    0.6811864376068115}, {
                    1.3292194604873657`}, {-1.1397290229797363`}, \
{-0.5891229510307312}, {-1.1099324226379395`}, {0.5913878083229065}, {
                    0.06266425549983978}, {-0.3727673292160034}, {
                    0.9280444383621216}, {
                    0.11464201658964157`}, {-0.8742656707763672}, {
                    0.9574586153030396}, {
                    0.1435469686985016}, {-0.6952922940254211}, \
{-0.631416916847229}, {-0.36457642912864685`}, {
                    0.3609732389450073}, {-0.19552507996559143`}, {
                    0.29443904757499695`}}], "Biases" -> 
                   RawArray["Real32",{
                    0.07515499740839005, -0.06206513196229935, 
                    0.0465068481862545, -0.17993637919425964`, \
-0.037621695548295975`, -0.0054008387960493565`, 0.11312661319971085`, 
                    0.07571924477815628, -0.03051135689020157, \
-0.23043012619018555`, 
                    0.12449883669614792`, -0.09408710151910782, \
-0.09487210214138031, -0.08850903809070587, -0.14266319572925568`, 
                    0.008273332379758358, -0.0718379095196724, \
-0.09693378955125809, -0.08017949014902115, 
                    0.030505159869790077`, -0.01602320559322834, 
                    0.11050036549568176`, -0.11152613162994385`, \
-0.1240650936961174, 
                    0.06204818934202194, -0.34262484312057495`, \
-0.11726374924182892`, 
                    0.07584581524133682, -0.12359604239463806`, \
-0.10210960358381271`, -0.1701267659664154, 
                    0.04110809415578842, -0.1093696802854538, 
                    0.09519699960947037, -0.09831779450178146, 
                    0.07036340236663818, -0.1056937426328659, \
-0.021310193464159966`, 0.12450459599494934`, 
                    0.10760603100061417`, -0.06379947811365128, 
                    0.20453375577926636`, 0.06702445447444916, 
                    0.06408372521400452, 0.09468362480401993, 
                    0.08468146622180939, 0.12478523701429367`, 
                    0.0945485383272171, -0.05173496529459953, \
-0.06482143700122833}]|>, 
                 "Parameters" -> <|
                  "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                   "$InputSize" -> 1, "$InputDimensions" -> {1}|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
               "2" -> <|
                "Type" -> "Elementwise", "Arrays" -> <||>, 
                 "Parameters" -> <|
                  "Function" -> 
                   NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
               "3" -> <|
                "Type" -> "Dropout", "Arrays" -> <||>, 
                 "Parameters" -> <|
                  "DropoutProbability" -> 0.01, "Method" -> "AlphaDropout", 
                   "OutputPorts" -> 
                   NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
               "4" -> <|
                "Type" -> "Linear", "Arrays" -> <|"Weights" -> CompressedData["
1:eJwtmWk0l9/XxgshCQmFIipTkTSI7713idCkEaFBJKXhp0FKSVLmzBlLSmlW
NOp77y1laEQaaNRkSJrTrB7/tZ4X56x11jmv9trXtT/XOgY+/81eKtOtW7d1
il3b7MXBdmvXLt40R/5/B7/FK0dZrfzfpdX/r53zAyBeuCBsm74VAxq0BKEs
FbqbR8LSX9mSPL9gGHtmI04adgR+BOyHwkP+kN5/GPwapcNhN1VE9Z0b4F5L
ND656i7du/oIBbMNj7OV58TuvrRU4kjDl6WKaNOfm/JipPo3JvOy1lTYUzJZ
DGtPFXenLSdLy7uwbKw6nBm4FXrGBPITg1x6LGeCdomJuL/GlBudN6FGQjxo
lIzmFfJ/4ceVtzar9Y5TmWGnoDOqO5Yt2cMNh8ZgyAINPLsgh979PC7JXHYJ
xpXsoutzHoDPRDPq3DYEsz6u59ShijRtiSbqpay7dKqsGvbekeWfZja4ebAa
hr0J4yHB2yXZLy1p/40QSnorh/rXX9N1fU30jPXCPXHPab28Kf4xUuf63xWS
/P6R1M/7JGxxioSnL/pLPzl6422fSTTI/jr5FxfRj577SC+7AeYoduNcu+Gw
2j4cxXADjPCzFbwkNiT7xYvdHzTyzqfefOj4I2FB7gfByboeZsqX05ePzwSV
v5o8aKQWROAriEE38U7MKH69P0W40B3A3ECLs26Nx3fSQso3UAXNpW30e4MB
NpRo4+E3U7B5jQb6va8m20Z/+DbUiP8cCcAHC915WmqukN3ci9Qz3eDFi/dC
wiJLatvHQuXKVzAjJFPYd3IKhhd7QfbhJogx+SHUxdRCy7074szVLlR/cIMk
MKGJxkjyhbE+saJnhMCx1ir0ZbUGijfc6H0v5EO7e8PEWcvBpPOYeLH0uWjq
Pw9bPgxhu4yHsHLdYtCRaEvcQpRtb+p8tw3NcEX1HfdBcGihyPhKmL/BiBr/
9UL/NWqw3CRRapdXCg9VEijcVI2Hb/WmcPBCMfbkuIQJoXDJahuPbQ5jeY8U
Cq8uEBZelRd2GXmhTka4eOBYOqljnmj9Lx2kLS0w1rEf7KhYRPKPbKip9gW0
j6rAuwO/ieWPnblb/3gyv2uDCyzTbEe3mqLmvu08RxoMOy7cpyPrPwgZwa8F
1O+BhUomfKfPaXp5Yxq2ncsl+w9DBF74i4oCV5N2yR0+MXwm+h0GvNRjA331
mAbnHpugvkep4PjOCrdGBeCyY1VweUoj/cidAWN0K+jxQBc+PHyzIN45B+e+
zqKsvA46/7FAMkQpg36bm2LW9Pvg9WUOW87vgDNeg3j3MSk0Zvmhr/Ja+s9E
wu6HjoNnSQ9OWJzGV8UkbhWLxP+MZNl9egj6qisIuckO7FzNwv6jppysboTJ
8wZwx5A68dvEUzyj/3xwWdKLNqfo8sxB48j3jynn1KZz43EjPFGWiWsetQpR
V48K3TLPwgz0wPeGTuTtP0j8s3M1KT2zJ1v/4VBUlgitDwZATbUmV/SeyN2c
CkCScIbml1qh/4G39MNVnqmBKeRUHyGkbiiN/ZGIBS6V4p324djtWD84We3E
Qs4CMexwHyy3uCy4uYaSbJAc7Q1xoIHmaqg0uhNm33QXXAPk+OiT7RymKMfp
ldMw5N1z0G08Dh1RBnQx+TLdnmUlyFzwgrHLe0qyFx4Q/AwzIbtapM+yVSAu
u0zm3xuF2nJjzt1wgT7P3MJJOvEk7RhHJ/bNopJBHmCksAF9Dmrz1ONZVOf8
kqDoJN1uMeVb562E+vXRVJEUwWEGLTAn0ooMkw9QyzqBfwZdpcLs60L0qAri
ycXQ+YzJ1cEAk0NG4tbLFyngQxr3s7xGRX8+CGf1bbguehzfCt5GPvsM0HJ2
hdjjzV6erzydo5p1+Wr3p9QRtBXmV32hy/5ujMnP4WPpcRLz5sLaie2gskOX
dZZpcavpQDrzww+7F92ExzfVoKyHIlfWBYg6liHYOKUVsivbaGn7LD7nMRE/
VR+hjz9s8dypTvCvPQ+1hovFTWsceHV0EppnRZNWY7jg2L8JqmIlpDM0nV5Y
54uJf2cJ5XNPQol2LkjH3SGd2R1St3FH2fTmHXoyIgZi58wkh4mvyfrlKbEm
KlaUS/VEk30H4fpvD/y6LgM8NxrTWJnp7BbdDPfGp8On9uPCBC8b4aD+A+r3
TYM67P5QsmIKjxtQICqOtBa2Hb5LwzsWUcH+BbzzW4HosbvQpvToN7jhe5oq
3qli7UVTcPZKp6ZP24Ub+o9p2BIXWB84VnySLUodDJ9Q9us3wvRlmZCaNJh/
TvfFPkW/YZtbH4yvsIE/tu5CtmslG1w2IMfXatAcX08fY7343qnPVNQ3G91K
9dHj7HFYFKYtXJg4E6KHV8Db5+e5ITUFmr5EQsh6ebxf6weXah6I78btEEfd
WMfe5QXQVKJP+qctsOdsM/HyARkeHXhV+qfXTdCNiicumEb3xO/w788TWBd8
iOZJr0PhLz9YeOgC7enbn68c3Quz1Tuh6I4XBdfZ05lMgS+cLqdyV2d6Y2Yo
2fxhNw2eZI23z2ejzccnYtqJ8UK150o+GWNFn4ZU8MqIE9TpGwFnF1gJNXIB
PEH5oNTA7b4k8Ws0TdE4TYb3EgX1Z+FdXmQIRqbPKXFMNZz9OEIMteyB+VZb
xREHbGHMkj5sb3AbpjVGS3Kmk3B0uCqsG2RPk52KoXRXLU8/p0Gll53RfP4b
ynqhgZtW7JHcWNhVv1ZP7F/qxktn7IWv9i5YWzWUo+8XwK6n2Zh0MI/21veS
+O2cDDS2L6Up3KXbX8fy8S5f3fZdHkNnqnHl6ny88uwn2dsNor1rvIQ/Z4og
68tXce7uJNK/00izov3FhOgtks2PjbG8TFYivJSCk84i3GivJA4xvy0dVqAP
m84WQ59TF4TBipO4Ke0c3Lh0D7xSn4NZppSsOhZTbbwf7jCfBMElNyDzuQGa
t2TRGszFFYZnwW50Ia1wToes6/Y4qsSVBmzqwQWlwDuWGvH+S7bQe0NPfFSu
hdsyjcWaXTlksSyUg+tKhcumJ/mVyU4suWuHHWUddLr0OgUuSILfJvooK1cO
dU078OujkeLtsVlUHXBNXJy0g8pHP4dLx/z5zNKvdMXQnba+XUAKOyLh2ZlK
UL2QR++1WgS3mFrR9mMq9hz1kVb9cuRqszjIdz1Ai/Y2QODKx7B2pwu8TOwF
cfbykPx+OPz4eRgk8XP5jdNQjLtayfGD5Ojc0lTYVfdUkM68S9cN+vOTTnmc
ppvGZypkYEp2JU0z0qd3Th9p3Th5QWNBJN5R+EWFA7ygR9YS3GofB7/lroht
9ftR2mZBIzYtxDo3X65fekeocvwnSF8uYPXHR+iKlQpu2B4Fe09Ho21qX7rZ
8wENHB3JcyxV2X1aDKiP7ckvf4XTY4rgZTLm3L4iVzzXrQh+bNWmIXUF+NlJ
E6qa54lzVY34fqwr68nIYne/V2T7szd8T24Rrlhk8vptOkLqoDfgc2wGDtf9
C6Z9T8OHaaacUFlMu0MuCftffoJPGUfxubcC9ws6i9EfZqBteoeQU6LDxX63
4LHgTc81bNHDbSAty39Nk862wK3aG1Skmsyv2zTZKFUbBkfth7eOFjx1gBIW
ThhFOmddsM86GZ7W7wG5Rtmxi3MetGT0wD63FHHL4wLx7XANwWOgLa952Q/r
tkRKlJtahMaMESwfNgtm8GF44zQfq39nwFaZFsmKM8Ww4pmOWKnghsdxId4I
yqTV9xZg22JZvizkiF+Py4gbZmpiQ395aNrgyV6fldDz21Dgh+Fo3tsfZZd/
h6tLdkHUMivw0m+lkrfHJO3XV9E5x7f03m45uz4dTyZ9vXmh/TRWmaAmfLWJ
oMnPNahGdzwvHZ1PV93m8L3X63CR/SNRPyUdyu138usfnWB+7jqaLPtFRpn2
fOhAnBCkGG0rhMuJbtMySEVmENSWHYaSbfvEkHJNXt9Nliu+XQU9BX9WnjmM
PG2PkZGgyRdejyTntykws/wa9CxQ4j+9t3KMrAuAdYeouSUX/uJWrtzqyn5K
I8Ub8BLO3c6nDQ+m45QWP/JfHQ+fdp2l3MszyVbnPUh3r6C+iW60d5UhTOq1
AsL7dNJuj2lkeMCaI0xX88jNK7Bk+nXa2l8PV3z6RM7hGfhGcZvwYdUuwcwi
nAbsj4Nuz2VZbXQCXXgcLJzJScCqPkfFC70UcFpwsFBQvQPkch347PBt4PLP
lLY7PqBmGyOi2tWc8DcHDg7eIsRs641nVDWwQ1iCi/eqYOOGdLJfMY3nDqvg
scqjwGKVPa9NGspeVUchbWIm9LDohyOn/5Fom52E9/ySFHtFg9q9SPC1y4N1
plmgqVzKOTPKIen1ffrbtxpC3tsIJl8UsLPMEJvyvoDWmmzR5flX2D2xVMiA
nXgdu+Hloyfo/cZ3EvJooODVm6H1bQYtedQT7y7yhrhQG2z8OJ6ttxdC5fhz
Et1f3cX0ocOEzw72NiYfnnOs8ntyGErknh3KC0e+JdXFNcL+ogsQfLoIqtUK
qCazB8vpGHGOzAKoX+mP8wp6SovbA3mfYyDPNXDHDUtMcEw6YOhtR5zm9RGG
dHmdtbkJ5y2PI+Wfo2jLv+XCmNgl4r8pTbDPvYhKjptyWWEVDWuvFAsj94pz
Jodw49C73PnnufTIqAH4fdBf2lSuziN1p2If5cfgU66HP15U0IT1QdTufAR6
WuSJ7/yjoblhH5d7vRFemznSzw87eHP3NHZfvk/oE2RJTRd9eVhxP1bq4ngP
09WQNbwGNw66z5mvVPi4cxztCf0syt5rBO8/z2DlmJn465EoFu4NwrUqM/Fa
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
                    "], "Biases" -> 
                   RawArray["Real32",{-0.08428014814853668, 
                    0.11913125216960907`, -0.10220552235841751`, \
-0.05865037441253662, 0.06554022431373596, 0.07146281749010086, 
                    0.1504126489162445, 
                    0.14317511022090912`, -0.054795484989881516`, \
-0.08467192202806473, -0.11136753112077713`, 
                    0.16516059637069702`, -0.07283936440944672, \
-0.07114576548337936, 
                    0.028701670467853546`, -0.10733277350664139`, \
-0.06895581632852554, 0.09294222295284271, -0.049226220697164536`, 
                    0.09913807362318039, -0.11592905223369598`, 
                    0.10952311754226685`, 0.08579882234334946, 
                    0.10991135984659195`, -0.13854646682739258`, 
                    0.1189141646027565, 
                    0.10085852444171906`, -0.12571145594120026`, \
-0.10687223821878433`, 0.053226370364427567`, 
                    0.112565778195858, -0.11446714401245117`, \
-0.10609633475542068`, 0.08321008831262589, -0.11651424318552017`, 
                    0.06321410834789276, -0.12934118509292603`, \
-0.07943081110715866, 0.08861849457025528, -0.10523757338523865`, 
                    0.0825621709227562, 
                    0.11197090148925781`, -0.0701824426651001, \
-0.10105351358652115`, 0.08020375669002533, -0.011709393933415413`, 
                    0.05394141003489494, 
                    0.00931961927562952, -0.0502328984439373, \
-0.06477813422679901}]|>, 
                 "Parameters" -> <|
                  "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                   "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
               "5" -> <|
                "Type" -> "Elementwise", "Arrays" -> <||>, 
                 "Parameters" -> <|
                  "Function" -> 
                   NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
               "6" -> <|
                "Type" -> "Linear", 
                 "Arrays" -> <|
                  "Weights" -> 
                   RawArray["Real32",{{
                    0.13455763459205627`, -0.09691271185874939, 
                    0.15375198423862457`, 
                    0.07289524376392365, -0.11229634284973145`, \
-0.05679461359977722, -0.06245271489024162, -0.09008953720331192, 
                    0.11420360952615738`, 0.1914196014404297, 
                    0.06115594133734703, -0.057367511093616486`, 
                    0.14558707177639008`, 
                    0.07914215326309204, -0.0880909413099289, 
                    0.2895226776599884, 
                    0.14841829240322113`, -0.08348876982927322, 
                    0.019945496693253517`, -0.14267875254154205`, 
                    0.028848228976130486`, -0.06402809917926788, \
-0.02235477603971958, -0.1838826686143875, 
                    0.05888989940285683, -0.09898759424686432, \
-0.05269205570220947, 0.12494196742773056`, 
                    0.069697804749012, -0.25349003076553345`, \
-0.1076807975769043, 0.10331981629133224`, 
                    0.2842012941837311, -0.14354649186134338`, 
                    0.08094201236963272, -0.04385748505592346, 
                    0.10697585344314575`, 
                    0.10242480784654617`, -0.04897676780819893, 
                    0.08125972002744675, -0.1467670053243637, \
-0.0967189222574234, 0.0397588349878788, 
                    0.009505088441073895, -0.06933026015758514, 
                    0.022852886468172073`, -0.09346778690814972, 
                    0.03118261881172657, 0.00030924577731639147`, 
                    0.16969485580921173`}}], "Biases" -> 
                   RawArray["Real32",{-0.08998061716556549}]|>, 
                 "Parameters" -> <|
                  "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 
                   50, "$InputDimensions" -> {50}|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"]}, 
             "Inputs" -> <|
              "Input" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>, 
             "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Outputs", "LogStd"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Mean"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"]}|>, <|
        "Version" -> "13.3.0", "Unstable" -> False|>], 
      "Training" -> <|
       "Optimizer" -> {"ADAM", "L2Regularization" -> None}, 
        TrainingProgressFunction -> {Null& , "Interval" -> 1}, 
        "TotalTrainingTime" -> 1.925065, "MeanInputsPerSecond" -> 
        4155.703833377054|>, "InputType" -> "NumericalVector", "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>,
          "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {-0.4538527081178163}, 
             "StandardDeviation" -> {0.9250659091702422}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 8516479318809777652|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
             "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
             False, "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "FeatureNumber" -> 1, 
      "DistributionData" -> {NormalDistribution, Automatic}, "Calibrator" -> 
      None, "PostProcessor" -> MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "NetworkType" -> <|"Value" -> "FullyConnected", "Options" -> <||>|>, 
        "NetworkDepth" -> <|"Value" -> 2, "Options" -> <||>|>, 
        "NumberOfParameters" -> <|"Value" -> 2600, "Options" -> <||>|>, 
        "ActivationFunction" -> <|"Value" -> "SELU", "Options" -> <||>|>, 
        "L2Regularization" -> <|"Value" -> None, "Options" -> <||>|>, 
        "Dropout" -> <|"Value" -> 0.01, "Options" -> <||>|>, 
        "NetInitializationMethod" -> <|
         "Value" -> Automatic, "Options" -> <||>|>, 
        "OptimizationMethod" -> <|
         "Value" -> {"ADAM", "L2Regularization" -> None}, "Options" -> <||>|>,
         MaxTrainingRounds -> <|"Value" -> 1000, "Options" -> <||>|>, 
        ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
        "EarlyStopping" -> <|"Value" -> False, "Options" -> <||>|>, 
        TrainingProgressReporting -> <|"Value" -> None, "Options" -> <||>|>, 
        "NetTrainOptions" -> <|
         "Value" -> {LearningRateMultipliers -> {}, TargetDevice -> "CPU"}, 
          "Options" -> <||>|>, 
        "LossFunction" -> <|"Value" -> Automatic, "Options" -> <||>|>, 
        "ValidationSetRatio" -> <|"Value" -> None, "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Reporting" -> None, "TrainingFunction" -> Predict, "EMIterations" -> 
      Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 
      0.9820629315759775, "PreprocessingTime" -> 0.232777`5.818485060253256, 
      "LossName" -> "StandardDeviation", "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[1.148387936947554, 0.15650315531719142`], "StandardDeviation" -> 
         Around[0.9662157960619518, 0.3576392711173273], "EvaluationTime" -> 
         0.0006046249439299633, "TestSize" -> 33, "ModelMemory" -> 63816, 
         "ModelUtility" -> -0.7302111249646527, "Round" -> 1, "Iteration" -> 
         1, "Time" -> {
          0.263138`5.871728562975194, 2.360324`6.824516615853376}, 
         "TrainingSize" -> 8, "TrainingTime" -> 1.9952623149688797`, 
         "TrainingMemory" -> 415648, "ExperimentCount" -> 1, 
         "MeanCrossEntropyHistory" -> {
           Around[1.148387936947554, 0.11066444240187752`]}, 
         "StandardDeviationHistory" -> {
           Around[0.9662157960619518, 0.2528891538256763]}, 
         "IterationHistory" -> {1}, 
         "TimeHistory" -> {{
           0.263138`5.871728562975194, 2.360324`6.824516615853376}}, 
         "Configuration" -> {
          "NeuralNetwork", "NetworkType" -> "FullyConnected", "NetworkDepth" -> 
           2, "NumberOfParameters" -> 2600, "ActivationFunction" -> "SELU", 
           "L2Regularization" -> None, "Dropout" -> 0.01, 
           "NetInitializationMethod" -> Automatic, 
           "OptimizationMethod" -> {"ADAM", "L2Regularization" -> None}, 
           MaxTrainingRounds -> 1000, ValidationSet -> Automatic, 
           "EarlyStopping" -> False, TrainingProgressReporting -> None, 
           "NetTrainOptions" -> Automatic, "LossFunction" -> Automatic}|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], TypeSystem`AnyType, 18], <||>], 
      "Configurations" -> 
      Dataset[<|<|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 2|>, 
             "NumberOfParameters" -> <|"Value" -> 2600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.148387936947554, 0.15650315531719142`], 
              "StandardDeviation" -> 
              Around[0.9662157960619518, 0.3576392711173273], 
              "EvaluationTime" -> 0.0006046249439299633, "TestSize" -> 33, 
              "ModelMemory" -> 63816, "ModelUtility" -> -0.7302111249646527, 
              "Round" -> 1, "Iteration" -> 1, 
              "Time" -> {
               0.263138`5.871728562975194, 2.360324`6.824516615853376}, 
              "TrainingSize" -> 8, "TrainingTime" -> 1.9952623149688797`, 
              "TrainingMemory" -> 415648, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.148387936947554, 0.11066444240187752`]}, 
              "StandardDeviationHistory" -> {
                Around[0.9662157960619518, 0.2528891538256763]}, 
              "IterationHistory" -> {1}, 
              "TimeHistory" -> {{
                0.263138`5.871728562975194, 2.360324`6.824516615853376}}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.6495833107171315, 0.348778616411733], 
              "StandardDeviation" -> 
              Around[1.3589077835674679`, 0.9492435733519929], 
              "EvaluationTime" -> 0.0024940778937110985`, "TestSize" -> 8, 
              "ModelMemory" -> 63816, "ModelUtility" -> -1.2224615635127947`, 
              "Round" -> 2, "Iteration" -> 2, 
              "Time" -> {
               2.472411`6.844665660638975, 4.519164`7.106603095615546}, 
              "TrainingSize" -> 33, "TrainingTime" -> 1.9952623149688797`, 
              "TrainingMemory" -> 418024, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.6495833107171315, 0.2466237247975981]}, 
              "StandardDeviationHistory" -> {
                Around[1.3589077835674679`, 0.6712165677149441]}, 
              "IterationHistory" -> {2}, 
              "TimeHistory" -> {{
                2.472411`6.844665660638975, 4.519164`7.106603095615546}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0024940778937110985`, "ModelMemory" -> 
             63816, "StandardDeviation" -> 
             Around[1.3589077835674679`, 0.9492435733519929], 
             "TrainingMemory" -> 418024, "TrainingTime" -> 
             2.8133198641061203`|>, "Index" -> 1|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 8|>, 
             "NumberOfParameters" -> <|"Value" -> 17600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
           2|>, <|"Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 4|>, 
             "NumberOfParameters" -> <|"Value" -> 7600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
           3|>, <|"Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 2|>, 
             "NumberOfParameters" -> <|"Value" -> 2600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
           4|>, <|"Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 4|>, 
             "NumberOfParameters" -> <|"Value" -> 7600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
           5|>, <|"Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 8|>, 
             "NumberOfParameters" -> <|"Value" -> 17600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
           6|>, <|"Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 8|>, 
             "NumberOfParameters" -> <|"Value" -> 17600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 300|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
           7|>, <|"Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 8|>, 
             "NumberOfParameters" -> <|"Value" -> 17600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 300|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
           8|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["NeuralNetwork"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 14]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "ModelMemory", "ModelUtility", "Round", "Iteration",
               "Time", "TrainingSize", "TrainingTime", "TrainingMemory", 
              "ExperimentCount", "MeanCrossEntropyHistory", 
              "StandardDeviationHistory", "IterationHistory", 
              "TimeHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 2], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[
               TypeSystem`Atom[Integer], 1], 
              TypeSystem`Vector[
               TypeSystem`Vector[
                TypeSystem`Atom[Real], 2], 1]}], TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 8], <||>], "TrainingSizes" -> {8, 33}, 
      "MaxTrainingSize" -> 41, "PreprocessorEvaluationTime" -> 3.46484375*^-6,
       "PreprocessorMemory" -> 55688, "InputDimension" -> 1, 
      "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 8, "TimeBudgets" -> 1.2085332699487348`, 
          "ElapsedTimes" -> 2.207202, "ExperimentCounts" -> 1|>, <|
         "TrainingSizes" -> 33, "TimeBudgets" -> 2.0142221165812244`, 
          "ElapsedTimes" -> 2.21582, "ExperimentCounts" -> 1|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.1}, "ID" -> 
           345233281841007474|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 4.706527, 
      "MaxTrainingMemory" -> 985792, "DataMemory" -> 3976, "FunctionMemory" -> 
      249168, "LanguageVersion" -> {13.3, 1}, "Date" -> 
      DateObject[{2023, 9, 14, 15, 53, 39.752143`8.351935524546219}, 
        "Instant", "Gregorian", 2.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.903343113331266*^9, 3.903343116991924*^9}, 
   3.903346163894919*^9, 3.903346196513653*^9, 3.903346231205985*^9, 
   3.903346270071043*^9, 3.90334644978032*^9, 3.903346491330119*^9, 
   3.903687638202957*^9, 3.903688349425136*^9, 3.903688419766521*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"e1541199-c6c7-45c6-8d59-3b67572fb5f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predict", " ", "=", " ", 
  RowBox[{"Predict", "[", "rules", "]"}]}]], "Input",
 CellChangeTimes->{{3.9033470341438823`*^9, 3.9033470398158503`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"d4e54e18-512b-4381-9634-90b7397d68fc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Numerical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Numerical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["41", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[<|
   "ExampleNumber" -> 41, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 41, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Sequence", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 4463274533565020503|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {5.415722071342227*^-17}, 
                    "StandardDeviation" -> {1.1832159566199232`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 2523344124640608097|>]}, 
                   "Invertibility" -> "Perfect", "StructurePreserving" -> 
                   True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                "DirectTraining", "BatchProcessing" -> Automatic, 
                "Model" -> <|
                 "RotationMatrix" -> {{1.}}, 
                  "Precisions" -> {0.9989365922352625}, "NoisePrecision" -> 
                  None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.00013608978181551932`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 3001451220314565817|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 1, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.00013608978181552203`}, 
                    "StandardDeviation" -> {1.00053212832204}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.3, 1}, "ID" -> 
                    787979534263831810|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Mean" -> {0.00013608978181552203`}, 
                   "StandardDeviation" -> {1.00053212832204}, "Method" -> 
                   "NaiveSampler", "VectorLength" -> 1, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Type" -> "NumericalVector", "Version" -> {13.3, 1}, "ID" -> 
                   787979534263831810|>], "InputDimension" -> 0, 
                "OutputDimension" -> 1, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.1}, 
                    "ID" -> 3418703251837826833|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.072905, "MaxTrainingMemory" -> 184936, 
                  "DataMemory" -> 2256, "FunctionMemory" -> 38648, 
                  "LanguageVersion" -> {13.3, 1}, "Date" -> 
                  DateObject[{
                    2023, 9, 14, 15, 53, 39.896182`8.353506314919366}, 
                    "Instant", "Gregorian", 2.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-3.1516920894950835`, -3.1516920894950835`, \
-1.74961195814442, -1.608795819073631, -1.5072143979224648`, \
-1.381019028232207, -1.3216679546730665`, -1.197915534670655, \
-1.107971229621685, -1.1056007642901975`, -1.1020000010319688`}, 
                   "LeftBoundary" -> -1.74961195814442, "LeftScale" -> 
                   0.7010400656753317, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[1.5233488777155384`, 0.19441321663939437`], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.3, 1}, 
             "ID" -> 4270897793735380344|>], 
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 2344087184081217960|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {5.415722071342227*^-17}, 
             "StandardDeviation" -> {1.1832159566199232`}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 2994853854525481099|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 8966868728716526926|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {0.6188536920321601}, 
             "StandardDeviation" -> {2.669958506289822}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.3, 1}, "ID" -> 4088785673966827386|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "Version" -> {13.3, 1}, "ID" -> 4629561655622906945|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> "f1",
              "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
             "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (0.6188536920321601 + 
       2.669958506289822 #& ), 
      "ProcessorFunction" -> (-0.23178401109016486` + 
       0.37453765578911613` #& ), "Name" -> "value", 
      "Quantiles" -> {-0.9743549036873252, 2.3970896889988795`}, "Mean" -> 
      0.61885369203216|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
    0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "NeighborsFunction" -> 
      MachineLearning`PackageScope`NeighborsFunction["Nearest", 
        NearestFunction[
         Hold[
          Nearest[CompressedData["
1:eJwBWQGm/iFib1JlAgAAACkAAAABAAAASMoEpO/1+r+l9pvDz4/lP5BHL5xb
GfC/p7x20Omb9b9ZkX3jjHbtP7kCQSVgW9C/PnuN4s4E0D/hqH1nLdryvwWl
oU+dnfE/N/bu7DM29L+CXqxCQhLrPyGXl2+LKNu/r9LDpHji9j/rmb0lMmLV
v/Hc6HUVw+I/oWJ2Nbd27b/hNxiW7P36P03divXRtLe/ykXAe8U+tj8Yv8vs
6pfxv+AoaEcuJvQ/vvhgS+9x+L9y0OwGyCvbP/KGqk34N+i/8RNPGCfd8j8S
6Lxqbw2Bvx725RFfIdY/vckMZpMo47/UERqR3pr1P0Rb4AJe2Pa/pa1Q5d9e
4D+nPbEdgkLrv20wWLdLMvA/lgenOISyxb9Q6OhyABLoP3Gknwv+8OW/zHey
aDU0+D/3ujImWbn5vz+E/EO0X8Q/aejcM+7h379Rhh7fnsT5Pw7huz0=
            "] -> Automatic, Method -> "KDtree"]]]], "NeighborsNumber" -> 2, 
      "DistributionData" -> {NormalDistribution, 0.09237844705104413}, 
      "TrainingOutput" -> 
      RawArray["Real32",{-0.5470031499862671, 
        0.2608265280723572, -0.7944381237030029, -0.8000177145004272, 
        0.6979858875274658, -0.7531561851501465, -0.19726361334323883`, \
-0.8037722110748291, 1.176830768585205, -0.7357929348945618, 
        0.5347824692726135, -0.8294151425361633, 
        1.9105284214019775`, -0.7277771234512329, 
        0.13909128308296204`, -0.8744783401489258, 
        2.397089719772339, -0.5218569040298462, -0.49397316575050354`, \
-0.8002035617828369, 
        1.4406095743179321`, -0.7075431942939758, -0.09657405316829681, \
-0.9743549227714539, 
        1.276768445968628, -0.5444528460502625, -0.21737121045589447`, \
-0.946909487247467, 1.5736650228500366`, -0.6741609573364258, 
        0.011667678132653236`, -0.9316672086715698, 
        0.9570425152778625, -0.6011377573013306, 
        0.5459022521972656, -0.7830787897109985, 
        1.984426736831665, -0.6742683053016663, -0.41710296273231506`, \
-0.7642444372177124, 2.3047969341278076`}], "DistributionSmoothing" -> 0.5, 
      "Processor" -> 
      MachineLearning`MLProcessor[
       "FirstValues", <|
        "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
         "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
      "NearestNeighbors", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "NeighborsNumber" -> <|"Value" -> 2, "Options" -> <||>|>, 
        "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
        "NearestMethod" -> <|"Value" -> "KDtree", "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Reporting" -> None, "TrainingFunction" -> Predict, "EMIterations" -> 
      Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 
      0.9820629315759775, "PreprocessingTime" -> 0.198673`5.749683843254187, 
      "LossName" -> "StandardDeviation", "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[2.226261631999623, 0.6428324189869521], "StandardDeviation" -> 
         Around[1.3393843385847457`, 0.3213883368176754], "EvaluationTime" -> 
         0.000012385075752183485`, "TestSize" -> 33., "ModelMemory" -> 6128., 
         "ModelUtility" -> -1.0322392641192883`, "Round" -> 1, "Iteration" -> 
         29, "Time" -> {
          0.595063`6.226107940911856, 0.602349`6.2313931871729915}, 
         "TrainingSize" -> 8, "TrainingTime" -> 0.004291773509562197, 
         "TrainingMemory" -> 69098., "ExperimentCount" -> 3, 
         "MeanCrossEntropyHistory" -> {
           Around[3.329142363157567, 0.9749136516175894], 
           Around[2.2231061836415438`, 0.6071650132868773], 
           Around[1.1265363491997578`, 0.09619290682117786]}, 
         "StandardDeviationHistory" -> {
           Around[1.8984917248066997`, 0.31776604538255027`], 
           Around[1.1612480437415416`, 0.22261595515587612`], 
           Around[0.9584132472059957, 0.25018560648648]}, 
         "IterationHistory" -> {4, 15, 29}, 
         "TimeHistory" -> {{
           0.284388`5.905456260505411, 0.293205`5.918716365515182}, {
           0.414944`6.0695344826609965, 0.421506`6.07634875454059}, {
           0.595063`6.226107940911856, 0.602349`6.2313931871729915}}, 
         "Configuration" -> {
          "NearestNeighbors", "NeighborsNumber" -> Automatic, 
           "DistributionSmoothing" -> 0.5, "NearestMethod" -> Automatic}, 
         "FinalTrainingSize" -> 41|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], TypeSystem`AnyType, 19], <||>], 
      "Configurations" -> 
      Dataset[<|<|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.01|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.4423441709312694`, 0.6911248935514006], 
              "StandardDeviation" -> 
              Around[1.6979034134573645`, 0.2667445006863579], 
              "EvaluationTime" -> 0.00004802706643821553, "TestSize" -> 33., 
              "ModelMemory" -> 15176., "ModelUtility" -> -1.2534870008270005`,
               "Round" -> 1, "Iteration" -> 23, 
              "Time" -> {
               0.520244`6.167752073668599, 0.530221`6.176001917955875}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 70690.66666666666, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[3.1232718144180485`, 0.6433485880461262], 
                Around[1.7614165274444904`, 0.12033561047803211`]}, 
              "StandardDeviationHistory" -> {
                Around[1.9155648007299924`, 0.2570762583362109], 
                Around[1.4802420261847369`, 0.1927084139281239]}, 
              "IterationHistory" -> {1, 23}, 
              "TimeHistory" -> {{
                0.234616`5.821902619667496, 0.245528`5.841646019698711}, {
                0.520244`6.167752073668599, 0.530221`6.176001917955875}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.047179891414242, 0.33976697305232395`], 
              "StandardDeviation" -> 
              Around[1.9034871705614314`, 0.5771997714223145], 
              "EvaluationTime" -> 0.00024940778937110987`, "TestSize" -> 8, 
              "ModelMemory" -> 15176, "ModelUtility" -> -1.3957223064307458`, 
              "Round" -> 2, "Iteration" -> 16, 
              "Time" -> {
               0.424038`6.078949770963297, 0.437866`6.092886217323279}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.01, "TrainingMemory" -> 
              71800, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[2.047179891414242, 0.2402515306685252]}, 
              "StandardDeviationHistory" -> {
                Around[1.9034871705614314`, 0.40814187247204375`]}, 
              "IterationHistory" -> {16}, 
              "TimeHistory" -> {{
                0.424038`6.078949770963297, 0.437866`6.092886217323279}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00024940778937110987`, "ModelMemory" -> 
             15176, "StandardDeviation" -> 
             Around[1.9034871705614314`, 0.5771997714223145], 
             "TrainingMemory" -> 71800, "TrainingTime" -> 
             0.01040957344480193|>, "Index" -> 1|>, <|
          "Value" -> "DecisionTree", 
           "Options" -> <|
            "DistributionSmoothing" -> <|"Value" -> 1|>, 
             "FeatureFraction" -> <|"Value" -> 1|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.3603946242927307`, 0.48348772192308676`], 
              "StandardDeviation" -> 
              Around[2.1000790728193475`, 0.5155387670402547], 
              "EvaluationTime" -> 9.710237467713113*^-6, "TestSize" -> 33., 
              "ModelMemory" -> 5760., "ModelUtility" -> -1.4830595461234801`, 
              "Round" -> 1, "Iteration" -> 30, 
              "Time" -> {
               0.604997`6.233298214616746, 0.612947`6.23896791727597}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.003981071705534968, 
              "TrainingMemory" -> 65598., "ExperimentCount" -> 3, 
              "MeanCrossEntropyHistory" -> {
                Around[3.314620388647142, 0.5198670989546461], 
                Around[1.9892483348233354`, 0.07496484374127044], 
                Around[1.7773151494077157`, 0.06476603843370347]}, 
              "StandardDeviationHistory" -> {
                Around[3.08495313568518, 0.417560795886524], 
                Around[1.7492484829113462`, 0.1958157393969747], 
                Around[1.4660355998615153`, 0.1875838694380876]}, 
              "IterationHistory" -> {2, 18, 30}, 
              "TimeHistory" -> {{
                0.248454`5.8467909865837395, 0.256421`5.86049858302705}, {
                0.455384`6.109922761027224, 0.461961`6.116150306282124}, {
                0.604997`6.233298214616746, 0.612947`6.23896791727597}}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.8627400620528882`, 0.20782811974887958`], 
              "StandardDeviation" -> 
              Around[1.8444191295591543`, 0.3218181467377676], 
              "EvaluationTime" -> 0.00002924597990828349, "TestSize" -> 8., 
              "ModelMemory" -> 5888., "ModelUtility" -> -1.3396204515428303`, 
              "Round" -> 2, "Iteration" -> 37, 
              "Time" -> {
               0.700212`6.296774542782924, 0.706542`6.300682976844153}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.003981071705534968, 
              "TrainingMemory" -> 67594.66666666666, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[1.9321914564954272`, 0.33839412224571525`], 
                Around[1.7932886676103494`, 0.2402162420413659]}, 
              "StandardDeviationHistory" -> {
                Around[1.865710445807107, 0.4513581720880231], 
                Around[1.8231278133112019`, 0.456938144626783]}, 
              "IterationHistory" -> {13, 37}, 
              "TimeHistory" -> {{
                0.394472`6.047561175497544, 0.401406`6.055128853295216}, {
                0.700212`6.296774542782924, 0.706542`6.300682976844153}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00002924597990828349, "ModelMemory" -> 
             5888., "StandardDeviation" -> 
             Around[1.8444191295591543`, 0.3218181467377676], 
             "TrainingMemory" -> 67594.66666666666, "TrainingTime" -> 
             0.005613311104804305|>, "Index" -> 2|>, <|
          "Value" -> "RandomForest", 
           "Options" -> <|
            "FeatureFraction" -> <|"Value" -> Automatic|>, 
             "LeafSize" -> <|"Value" -> Automatic|>, 
             "TreeNumber" -> <|"Value" -> Automatic|>, 
             "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
             "Implementation" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.281016381334516, 0.31928285895168385`], 
              "StandardDeviation" -> 
              Around[1.8899599066717372`, 0.2899259280314258], 
              "EvaluationTime" -> 0.00009837815359158407, "TestSize" -> 33., 
              "ModelMemory" -> 99408., "ModelUtility" -> -1.3599411829929906`,
               "Round" -> 1, "Iteration" -> 33, 
              "Time" -> {
               0.641185`6.258528347331811, 0.65574`6.268276669841195}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.012924465962305568`, 
              "TrainingMemory" -> 158072., "ExperimentCount" -> 3, 
              "MeanCrossEntropyHistory" -> {
                Around[2.913410783135789, 0.49759250486959966`], 
                Around[1.9765087036468472`, 0.16041912145756673`], 
                Around[1.953129657220912, 0.045681300470533495`]}, 
              "StandardDeviationHistory" -> {
                Around[2.375220019114628, 0.33166536547454256`], 
                Around[1.7715545851666, 0.27458465565684165`], 
                Around[1.5231051157339832`, 0.19056475868871972`]}, 
              "IterationHistory" -> {3, 19, 33}, 
              "TimeHistory" -> {{
                0.259016`5.86487158575131, 0.281233`5.900611273133322}, {
                0.464636`6.118657849402827, 0.478642`6.1315557980281685}, {
                0.641185`6.258528347331811, 0.65574`6.268276669841195}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.256724256315313, 0.3827189409057582], 
              "StandardDeviation" -> 
              Around[1.9883466249217674`, 0.3311047194654015], 
              "EvaluationTime" -> 0.006813045504547104, "TestSize" -> 8., 
              "ModelMemory" -> 99408., "ModelUtility" -> -1.6058730068735274`,
               "Round" -> 2, "Iteration" -> 39, 
              "Time" -> {
               0.721598`6.309840314329517, 0.879654`6.395856875374105}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.009999999999999998, 
              "TrainingMemory" -> 158824., "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[2.2493597752297503`, 0.5219704452433775], 
                Around[2.2640887374008765`, 0.5626033200175377]}, 
              "StandardDeviationHistory" -> {
                Around[1.9769015999276274`, 0.45998177325661177`], 
                Around[1.9997916499159074`, 0.4763956553395164]}, 
              "IterationHistory" -> {9, 39}, 
              "TimeHistory" -> {{
                0.345045`5.98942073198153, 0.359318`6.007023967185086}, {
                0.721598`6.309840314329517, 0.879654`6.395856875374105}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.006813045504547104, "ModelMemory" -> 99408.,
              "StandardDeviation" -> 
             Around[1.9883466249217674`, 0.3311047194654015], 
             "TrainingMemory" -> 158824., "TrainingTime" -> 
             0.017024465962305568`|>, "Index" -> 3|>, <|
          "Value" -> "NearestNeighbors", 
           "Options" -> <|
            "NeighborsNumber" -> <|"Value" -> Automatic|>, 
             "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
             "NearestMethod" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.226261631999623, 0.6428324189869521], 
              "StandardDeviation" -> 
              Around[1.3393843385847457`, 0.3213883368176754], 
              "EvaluationTime" -> 0.000012385075752183485`, "TestSize" -> 33.,
               "ModelMemory" -> 6128., "ModelUtility" -> -1.0322392641192883`,
               "Round" -> 1, "Iteration" -> 29, 
              "Time" -> {
               0.595063`6.226107940911856, 0.602349`6.2313931871729915}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.004291773509562197, 
              "TrainingMemory" -> 69098., "ExperimentCount" -> 3, 
              "MeanCrossEntropyHistory" -> {
                Around[3.329142363157567, 0.9749136516175894], 
                Around[2.2231061836415438`, 0.6071650132868773], 
                Around[1.1265363491997578`, 0.09619290682117786]}, 
              "StandardDeviationHistory" -> {
                Around[1.8984917248066997`, 0.31776604538255027`], 
                Around[1.1612480437415416`, 0.22261595515587612`], 
                Around[0.9584132472059957, 0.25018560648648]}, 
              "IterationHistory" -> {4, 15, 29}, 
              "TimeHistory" -> {{
                0.284388`5.905456260505411, 0.293205`5.918716365515182}, {
                0.414944`6.0695344826609965, 0.421506`6.07634875454059}, {
                0.595063`6.226107940911856, 0.602349`6.2313931871729915}}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.5499510577079312, 0.2974765006849016], 
              "StandardDeviation" -> 
              Around[1.3682290864514988`, 0.46751327744742316`], 
              "EvaluationTime" -> 0.00003410854384661474, "TestSize" -> 8., 
              "ModelMemory" -> 6512., "ModelUtility" -> -1.0727766499161797`, 
              "Round" -> 2, "Iteration" -> 36, 
              "Time" -> {
               0.687718`6.288955385001544, 0.697612`6.295158936018192}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.0047572389519572895`, 
              "TrainingMemory" -> 85589.33333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[0.7488024732921628, 0.29345543692938075`], 
                Around[0.3510996421236995, 0.33678208979054886`]}, 
              "StandardDeviationHistory" -> {
                Around[1.3781931105848881`, 0.6503093654262019], 
                Around[1.3582650623181096`, 0.6722640964262284]}, 
              "IterationHistory" -> {8, 36}, 
              "TimeHistory" -> {{
                0.336996`5.979169739506076, 0.34319`5.987079618220162}, {
                0.687718`6.288955385001544, 0.697612`6.295158936018192}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00003410854384661474, "ModelMemory" -> 
             6512., "StandardDeviation" -> 
             Around[1.3682290864514988`, 0.46751327744742316`], 
             "TrainingMemory" -> 85589.33333333333, "TrainingTime" -> 
             0.006242241479864685|>, "Index" -> 4|>, <|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 1.*^6|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.8578042295889508`, 0.41765312871831867`], 
              "StandardDeviation" -> 
              Around[2.925193919794679, 0.31312465138963325`], 
              "EvaluationTime" -> 0.00005217220908980913, "TestSize" -> 33., 
              "ModelMemory" -> 15176., "ModelUtility" -> -1.78769950481388, 
              "Round" -> 1, "Iteration" -> 27, 
              "Time" -> {
               0.570398`6.207722987565437, 0.580472`6.21532626918336}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.008769857814933977, 
              "TrainingMemory" -> 70765.33333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[3.25429828552885, 0.4972613586656281], 
                Around[2.4613101736490517`, 0.13607573193899478`]}, 
              "StandardDeviationHistory" -> {
                Around[3.0849428275169966`, 0.417559565439009], 
                Around[2.765445012072361, 0.3523986900696504]}, 
              "IterationHistory" -> {5, 27}, 
              "TimeHistory" -> {{
                0.296286`5.923256124333461, 0.310357`5.943406538696976}, {
                0.570398`6.207722987565437, 0.580472`6.21532626918336}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.7185821155303027`, 0.5202223313188304], 
              "StandardDeviation" -> 
              Around[3.204809979149815, 0.9759305347348114], "EvaluationTime" -> 
              0.00024940778937110987`, "TestSize" -> 8, "ModelMemory" -> 
              15176, "ModelUtility" -> -1.916930342902536, "Round" -> 2, 
              "Iteration" -> 35, 
              "Time" -> {
               0.672204`6.279046085938802, 0.684906`6.287175964283882}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 71976, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.7185821155303027`, 0.36785273820021985`]}, 
              "StandardDeviationHistory" -> {
                Around[3.204809979149815, 0.6900870990779986]}, 
              "IterationHistory" -> {35}, 
              "TimeHistory" -> {{
                0.672204`6.279046085938802, 0.684906`6.287175964283882}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00024940778937110987`, "ModelMemory" -> 
             15176, "StandardDeviation" -> 
             Around[3.204809979149815, 0.9759305347348114], "TrainingMemory" -> 
             71976, "TrainingTime" -> 0.012026603577303532`|>, "Index" -> 
           5|>, <|"Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.00001|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.5789324688151427`, 0.43157068868225573`], 
              "StandardDeviation" -> 
              Around[1.8014209369797591`, 0.21112703967106736`], 
              "EvaluationTime" -> 0.000043088160670534526`, "TestSize" -> 33.,
               "ModelMemory" -> 15176., 
              "ModelUtility" -> -1.3049011759273905`, "Round" -> 1, 
              "Iteration" -> 31, 
              "Time" -> {
               0.615663`6.240888047723037, 0.626208`6.248263605058032}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 70772., "ExperimentCount" -> 3, 
              "MeanCrossEntropyHistory" -> {
                Around[3.119873106508784, 0.6422428165241303], 
                Around[1.7613201642875607`, 0.12021199148200316`], 
                Around[2.8556041356490827`, 0.5343690912814215]}, 
              "StandardDeviationHistory" -> {
                Around[1.9143426017632572`, 0.25687268023171206`], 
                Around[1.4801289964938578`, 0.19262838145897365`], 
                Around[2.009791212682163, 0.2729284356478929]}, 
              "IterationHistory" -> {6, 20, 31}, 
              "TimeHistory" -> {{
                0.312441`5.946313012636602, 0.322441`5.95999525287482}, {
                0.481325`6.133983412996056, 0.492425`6.143885087077823}, {
                0.615663`6.240888047723037, 0.626208`6.248263605058032}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.0214298347739468`, 0.1764583290567213], 
              "StandardDeviation" -> 
              Around[1.8904986366009433`, 0.2937644560191583], 
              "EvaluationTime" -> 0.00023230907593328626`, "TestSize" -> 8., 
              "ModelMemory" -> 15176., "ModelUtility" -> -1.3606015123287274`,
               "Round" -> 2, "Iteration" -> 38, 
              "Time" -> {
               0.708987`6.302183265519626, 0.719053`6.308305896061371}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 72120., "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[2.0468994596099215`, 0.24008768021202231`], 
                Around[1.995960209937972, 0.25440719226560715`]}, 
              "StandardDeviationHistory" -> {
                Around[1.9033152370807858`, 0.40814747504728177`], 
                Around[1.8776820361211009`, 0.4223152050838062]}, 
              "IterationHistory" -> {7, 38}, 
              "TimeHistory" -> {{
                0.324304`5.962497298836276, 0.335062`5.9766701699850655}, {
                0.708987`6.302183265519626, 0.719053`6.308305896061371}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00023230907593328626`, "ModelMemory" -> 
             15176., "StandardDeviation" -> 
             Around[1.8904986366009433`, 0.2937644560191583], 
             "TrainingMemory" -> 72120., "TrainingTime" -> 
             0.008896498557170722|>, "Index" -> 6|>, <|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 10000.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.857642964431489, 0.4180568293518465], 
              "StandardDeviation" -> 
              Around[2.923921891992111, 0.31318641320606266`], 
              "EvaluationTime" -> 0.00004558700139956779, "TestSize" -> 33., 
              "ModelMemory" -> 15176., "ModelUtility" -> -1.7872778056431882`,
               "Round" -> 1, "Iteration" -> 26, 
              "Time" -> {
               0.557181`6.197541291958875, 0.567819`6.205754914016033}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 70794.66666666666, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[3.2545466085120562`, 0.49751899894268364`], 
                Around[2.460739320350922, 0.1361231294682639]}, 
              "StandardDeviationHistory" -> {
                Around[3.083922708946671, 0.41743772829155273`], 
                Around[2.7639210750375507`, 0.3522977492436589]}, 
              "IterationHistory" -> {10, 26}, 
              "TimeHistory" -> {{
                0.361412`6.009547561884868, 0.37087`6.020766697783333}, {
                0.557181`6.197541291958875, 0.567819`6.205754914016033}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.716917638331963, 0.5208524612946998], 
              "StandardDeviation" -> 
              Around[3.1991556085943054`, 0.9740802289383211], 
              "EvaluationTime" -> 0.00015736567647427077`, "TestSize" -> 8, 
              "ModelMemory" -> 15176, "ModelUtility" -> -1.9151567854793887`, 
              "Round" -> 2, "Iteration" -> 32, 
              "Time" -> {
               0.629256`6.2503723587643965, 0.639286`6.257240187231695}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 71800, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.716917638331963, 0.36829830737918595`]}, 
              "StandardDeviationHistory" -> {
                Around[3.1991556085943054`, 0.6887787353020315]}, 
              "IterationHistory" -> {32}, 
              "TimeHistory" -> {{
                0.629256`6.2503723587643965, 0.639286`6.257240187231695}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00015736567647427077`, "ModelMemory" -> 
             15176, "StandardDeviation" -> 
             Around[3.1991556085943054`, 0.9740802289383211], 
             "TrainingMemory" -> 71800, "TrainingTime" -> 
             0.008896498557170722|>, "Index" -> 7|>, <|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 1.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.4532659296889325`, 0.491220104679273], 
              "StandardDeviation" -> 
              Around[1.756631571310481, 0.20054549705075728`], 
              "EvaluationTime" -> 0.00004802706643821553, "TestSize" -> 33., 
              "ModelMemory" -> 15176., "ModelUtility" -> -1.2791301460933187`,
               "Round" -> 1, "Iteration" -> 34, 
              "Time" -> {
               0.658421`6.270048667520778, 0.669396`6.277228106383107}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.006718000670412151, 
              "TrainingMemory" -> 70712., "ExperimentCount" -> 3, 
              "MeanCrossEntropyHistory" -> {
                Around[3.3745798140768803`, 0.7210588879369776], 
                Around[1.7880421683666277`, 0.13623536838071315`], 
                Around[2.1971758066232896`, 0.3125932229896278]}, 
              "StandardDeviationHistory" -> {
                Around[2.0266695728954156`, 0.275116645137092], 
                Around[1.5112932467154467`, 0.20528750258964068`], 
                Around[1.7319318943205806`, 0.23046832513037507`]}, 
              "IterationHistory" -> {11, 22, 34}, 
              "TimeHistory" -> {{
                0.372707`6.022912543032278, 0.381885`6.033477593620625}, {
                0.50648`6.156107294009391, 0.517712`6.165633225067327}, {
                0.658421`6.270048667520778, 0.669396`6.277228106383107}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.0745896945290334`, 0.3638152169271739], 
              "StandardDeviation" -> 
              Around[1.920954502295345, 0.5770258944049818], "EvaluationTime" -> 
              0.00019811164905763907`, "TestSize" -> 8, "ModelMemory" -> 
              15176, "ModelUtility" -> -1.404319754914211, "Round" -> 2, 
              "Iteration" -> 24, 
              "Time" -> {
               0.53278`6.1780929070068185, 0.542119`6.185639622046729}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 71736, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.0745896945290334`, 0.25725620698805945`]}, 
              "StandardDeviationHistory" -> {
                Around[1.920954502295345, 0.40801892285399527`]}, 
              "IterationHistory" -> {24}, 
              "TimeHistory" -> {{
                0.53278`6.1780929070068185, 0.542119`6.185639622046729}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00019811164905763907`, "ModelMemory" -> 
             15176, "StandardDeviation" -> 
             Around[1.920954502295345, 0.5770258944049818], "TrainingMemory" -> 
             71736, "TrainingTime" -> 0.009304925782780943|>, "Index" -> 
           8|>, <|"Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.001|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.4407700852486096`, 0.6896405904294363], 
              "StandardDeviation" -> 
              Around[1.697301872933136, 0.2662927728039666], "EvaluationTime" -> 
              0.00004144185874797419, "TestSize" -> 33., "ModelMemory" -> 
              15176., "ModelUtility" -> -1.2530918354135716`, "Round" -> 1, 
              "Iteration" -> 17, 
              "Time" -> {
               0.440709`6.095696913101484, 0.452909`6.107555944365509}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.006854143078948891, 
              "TrainingMemory" -> 70813.33333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[3.12021064159845, 0.6423526797236562], 
                Around[1.7613295288987691`, 0.12022417749935611`]}, 
              "StandardDeviationHistory" -> {
                Around[1.9144637754523426`, 0.25689286896812347`], 
                Around[1.4801399704139295`, 0.19263625315512273`]}, 
              "IterationHistory" -> {12, 17}, 
              "TimeHistory" -> {{
                0.383723`6.035562824682092, 0.392611`6.04550745679964}, {
                0.440709`6.095696913101484, 0.452909`6.107555944365509}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.0469272512483117`, 0.3395582026153195], 
              "StandardDeviation" -> 
              Around[1.9033322702711848`, 0.5772069037030744], 
              "EvaluationTime" -> 0.00019811164905763907`, "TestSize" -> 8, 
              "ModelMemory" -> 15176, "ModelUtility" -> -1.3956462347246303`, 
              "Round" -> 2, "Iteration" -> 21, 
              "Time" -> {
               0.494957`6.146112464199462, 0.504593`6.154486214940193}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 71800, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.0469272512483117`, 0.24010390767680806`]}, 
              "StandardDeviationHistory" -> {
                Around[1.9033322702711848`, 0.4081469157561344]}, 
              "IterationHistory" -> {21}, 
              "TimeHistory" -> {{
                0.494957`6.146112464199462, 0.504593`6.154486214940193}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00019811164905763907`, "ModelMemory" -> 
             15176, "StandardDeviation" -> 
             Around[1.9033322702711848`, 0.5772069037030744], 
             "TrainingMemory" -> 71800, "TrainingTime" -> 
             0.009441068191317683|>, "Index" -> 9|>, <|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 100000.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.857789552506687, 0.4176898390760988], 
              "StandardDeviation" -> 
              Around[2.9250781888429196`, 0.3131302644177349], 
              "EvaluationTime" -> 0.00004802706643821553, "TestSize" -> 33., 
              "ModelMemory" -> 15176., "ModelUtility" -> -1.7876611414006387`,
               "Round" -> 1, "Iteration" -> 25, 
              "Time" -> {
               0.544009`6.187151078153721, 0.554636`6.195553048593456}, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 70813.33333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[3.2543208547465037`, 0.49728478763439693`], 
                Around[2.4612582502668707`, 0.13608004253506106`]}, 
              "StandardDeviationHistory" -> {
                Around[3.0848500190111934`, 0.4175484816875566], 
                Around[2.765306358674646, 0.3523895077057175]}, 
              "IterationHistory" -> {14, 25}, 
              "TimeHistory" -> {{
                0.403239`6.057107522552732, 0.412999`6.067493993590612}, {
                0.544009`6.187151078153721, 0.554636`6.195553048593456}}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.718430452822127, 0.520279705749496], 
              "StandardDeviation" -> 
              Around[3.2042942175828224`, 0.975761794908109], 
              "EvaluationTime" -> 0.00015736567647427077`, "TestSize" -> 8, 
              "ModelMemory" -> 15176, "ModelUtility" -> -1.9167686171616651`, 
              "Round" -> 2, "Iteration" -> 28, 
              "Time" -> {
               0.583174`6.21734314682332, 0.592671`6.224358670780375}, 
              "TrainingSize" -> 33, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 71864, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.718430452822127, 0.36789330804921017`]}, 
              "StandardDeviationHistory" -> {
                Around[3.2042942175828224`, 0.689967782002281]}, 
              "IterationHistory" -> {28}, 
              "TimeHistory" -> {{
                0.583174`6.21734314682332, 0.592671`6.224358670780375}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00015736567647427077`, "ModelMemory" -> 
             15176, "StandardDeviation" -> 
             Around[3.2042942175828224`, 0.975761794908109], "TrainingMemory" -> 
             71864, "TrainingTime" -> 0.008896498557170722|>, "Index" -> 
           10|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "DecisionTree", "LinearRegression", "NearestNeighbors", 
             "RandomForest"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
            TypeSystem`AnyLength]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "ModelMemory", "ModelUtility", "Round", "Iteration",
               "Time", "TrainingSize", "TrainingTime", "TrainingMemory", 
              "ExperimentCount", "MeanCrossEntropyHistory", 
              "StandardDeviationHistory", "IterationHistory", 
              "TimeHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 2], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[
               TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
              TypeSystem`Vector[
               TypeSystem`Vector[
                TypeSystem`Atom[Real], 2], TypeSystem`AnyLength]}], 2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 10], <||>], "TrainingSizes" -> {8, 33},
       "MaxTrainingSize" -> 41, "PreprocessorEvaluationTime" -> 6.25*^-6, 
      "PreprocessorMemory" -> 55688, "InputDimension" -> 1, "OutputDimension" -> 
      1, "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 8, "TimeBudgets" -> 0.27999999999999997`, 
          "ElapsedTimes" -> 0.28589200000000003`, "ExperimentCounts" -> 
          25|>, <|"TrainingSizes" -> 33, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
          0.46061300000000005`, "ExperimentCounts" -> 14|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.1}, "ID" -> 
           345233281841007474|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 1.074858, 
      "MaxTrainingMemory" -> 1041608, "DataMemory" -> 3976, "FunctionMemory" -> 
      234224, "LanguageVersion" -> {13.3, 1}, "Date" -> 
      DateObject[{2023, 9, 14, 15, 53, 40.894323`8.36423800114967}, "Instant",
         "Gregorian", 2.], "ProcessorCount" -> 4, "ProcessorType" -> "x86-64",
       "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.903347041200521*^9, 3.903687639717484*^9, 
  3.903688350637218*^9, 3.903688420911746*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"f71aa84f-dcd5-4bb4-92f9-c1840aa42ece"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotDataFitPreict", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"data", ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "7"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    " ", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"knn", "[", "x", "]"}], ",", 
        RowBox[{"nn", "[", "x", "]"}], ",", "model2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQvbxsvvA1kbeODA92SoHogFPJDiBaaP10bxA9oZ97
AojOaj48FUQnH+F6BKKfpe56AaLfM9W8BdGX3O+Aad7E939BtJTZSaHrQFpT
6bwYiObY9UcaRBvN/iAPonkynqiA6K7w1aYg2ox9lQWIZnvM7ACiO8w6wHS3
s60niJ517FAgiJ7gs3Azh+hbx4yNydtB9CqzcG5OIJ32IwZM2/16pQiiLQS+
gGlxqzB1EH1jb78+iH6X6OgEoudZ2LuAaL+3Yqu5gPSuVuUNINomnPkwiF7m
rgymXXL8joPpd/PBtN3rA2dAtOuNlvMg+v7FWTdAtERMxh0Q/e996wsQrfNv
xWsQvcVaQpIbSHs8/iYNok3OHDm+EaR+ne0pEA0AoSOwCg==
  "],
 CellLabel->"In[82]:=",ExpressionUUID->"3ed733fb-b45c-43c1-9435-08a07d0a6f54"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    InterpretationBox[{
      TagBox[
       TagBox[
        {RGBColor[0.9, 0.36, 0.054], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQUHHHjWxEx892p/Ghj82+/5LlBS+Pmn/WfPgMCf
/QJXtrj9DPqy3xgMfu+P+HW459nTT/tnzQSBn/vjeqxee7r92A8x7sd+h5AT
l1+1f4Wa923/1At5bpH5P/aDjTvzZX/Pt1K/II8fUPM+77/y4yS/K+cPqHkf
93c9evBrZslvqHkf9m/KWqfG/uwvVP+b/Us4396/u+P//hlg9S/31zmYX+bq
/Q6179n+gFsLHXf0/NtvBDb/8X6Hqv8qgvu/Qc17sH8S94FtJ9p/QvXf3C/h
H2LjaPB1vwFY/eX9e24f/3bW9RtU/uR+hRmiB+b2vd8/AczfuX/FSvU5/Sde
7IcFoENUUtXJba/2L4DI27+pXSy/DugOCP+k/c7I1b82r7q/3wJivr2E0vk9
QTO220Pkb9o3lD8xu7N5sT3UffY7Jh+Yu0Xqur0JxP32NstnG9w888Q+A+I/
ez4+JZ+n69/bz4H4377uQKenM/dX+wuQ8LHfIpaYVjSHwQEafvbXnnjPWxLP
4AANX/ukkPt6vHeYHSDmf7YvE2TeND2F0+EcJH7sLyb88M4U43OA2PfNXuJx
WnSBjADUvB/2FWeXsCTfEYSa99Ne7xVTgpaHMNS83/Y5M/mWaj4Ug5r3xz7l
Ib+AyWpxqHn/7Dk+RbVJi0s7wILv/Jv4sgJhGQcAl1xDrw==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ],
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Point[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQUHHHjWxEx892p/Ghj82+/5LlBS+Pmn/WfPgMCf
/QJXtrj9DPqy3xgMfu+P+HW459nTT/tnzQSBn/vjeqxee7r92A8x7sd+h5AT
l1+1f4Wa923/1At5bpH5P/aDjTvzZX/Pt1K/II8fUPM+77/y4yS/K+cPqHkf
93c9evBrZslvqHkf9m/KWqfG/uwvVP+b/Us4396/u+P//hlg9S/31zmYX+bq
/Q6179n+gFsLHXf0/NtvBDb/8X6Hqv8qgvu/Qc17sH8S94FtJ9p/QvXf3C/h
H2LjaPB1vwFY/eX9e24f/3bW9RtU/uR+hRmiB+b2vd8/AczfuX/FSvU5/Sde
7IcFoENUUtXJba/2L4DI27+pXSy/DugOCP+k/c7I1b82r7q/3wJivr2E0vk9
QTO220Pkb9o3lD8xu7N5sT3UffY7Jh+Yu0Xqur0JxP32NstnG9w888Q+A+I/
ez4+JZ+n69/bz4H4377uQKenM/dX+wuQ8LHfIpaYVjSHwQEafvbXnnjPWxLP
4AANX/ukkPt6vHeYHSDmf7YvE2TeND2F0+EcJH7sLyb88M4U43OA2PfNXuJx
WnSBjADUvB/2FWeXsCTfEYSa99Ne7xVTgpaHMNS83/Y5M/mWaj4Ug5r3xz7l
Ib+AyWpxqHn/7Dk+RbVJi0s7wILv/Jv4sgJhGQcAl1xDrw==
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PlotRange" -> {{-4., 4.}, {-2., 7.}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
            "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.9, 0.36, 0.054], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{-4., 4.}, {-2., 7.}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}]},
     Annotation[{{
        Annotation[{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Point[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQUHHHjWxEx892p/Ghj82+/5LlBS+Pmn/WfPgMCf
/QJXtrj9DPqy3xgMfu+P+HW459nTT/tnzQSBn/vjeqxee7r92A8x7sd+h5AT
l1+1f4Wa923/1At5bpH5P/aDjTvzZX/Pt1K/II8fUPM+77/y4yS/K+cPqHkf
93c9evBrZslvqHkf9m/KWqfG/uwvVP+b/Us4396/u+P//hlg9S/31zmYX+bq
/Q6179n+gFsLHXf0/NtvBDb/8X6Hqv8qgvu/Qc17sH8S94FtJ9p/QvXf3C/h
H2LjaPB1vwFY/eX9e24f/3bW9RtU/uR+hRmiB+b2vd8/AczfuX/FSvU5/Sde
7IcFoENUUtXJba/2L4DI27+pXSy/DugOCP+k/c7I1b82r7q/3wJivr2E0vk9
QTO220Pkb9o3lD8xu7N5sT3UffY7Jh+Yu0Xqur0JxP32NstnG9w888Q+A+I/
ez4+JZ+n69/bz4H4377uQKenM/dX+wuQ8LHfIpaYVjSHwQEafvbXnnjPWxLP
4AANX/ukkPt6vHeYHSDmf7YvE2TeND2F0+EcJH7sLyb88M4U43OA2PfNXuJx
WnSBjADUvB/2FWeXsCTfEYSa99Ne7xVTgpaHMNS83/Y5M/mWaj4Ug5r3xz7l
Ib+AyWpxqHn/7Dk+RbVJi0s7wILv/Jv4sgJhGQcAl1xDrw==
           "]]}, "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{-4., 4.}, {-2., 7.}}, 
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
         "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
         GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListPlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}, 
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
          CapForm["Butt"], LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ], 
        TagBox[
         {RGBColor[0.365248, 0.427802, 0.758297], AbsoluteThickness[1.6], 
          Opacity[1.], CapForm["Butt"], LineBox[CompressedData["
1:eJwtWHk4Ffv/t4dyjoQsZTuoJGnTypk2RZfKzVJRckNXUty2K0lSiUIpF6ls
SSVFCiWvU4hESiX7fuyO41jPzInffJ/n99c8r2dmPvOZ9/v9WmZ03Y7buUuI
iYntFhcT+9/RhK3aNz3N5FjU1ve53p5iHxeyQoUkk/Php0vsu6tT7BcvlxmO
jDE5ajq772qcm2IvX2jj1tXP5ARcPL3j+6Ep9urZIfUVv5icdROD08TSKTbR
MVwe95zJcaemGYzy32y7q5VPVxxkctqml2h4T4vYZ6pCjnkWMjgrM861m/5N
sX/8mNn3/pACJ8btr1UPRibY8znHlVfPm8VZZ2VjsCh7lP3qaLE0s0meY+eu
pLA3YJjten0Zvy5YjmN9drfBH4J+9uStc6Fgy3LEn+U7le3mslMYzeqxbTIc
s0aTvTrLG9kJ1sv8vl+T5swy02mN+VrODvY+dHaRlRSHY/DOOjE4BOckn5zx
G5TgfCHW3m3R+opDQVX6NeninOI1XrjzsRl33nFjE7zEOEHM8sbWlC68aVk4
K0NvCoYaLivXhvIQsEH8WbzaFPaIjho+eMiDeVydzTXGFDwOWB2TLOKBYxcW
6UH+RoWsIPXTbx5KS/qVdKt/o8A59832f4bw42mmeszF39DTyMOMpXzwzqxc
ENQqwoTm6LPN6sNgKRKb9tynsCJ5buDwWwEiTNv8vaIpXHSyCbxfJsDkruCX
QaEUPr5/Xr3tpwAVN4v1n/lRCGx9WxnFE+DkHKsZMtso/PnFeeaEzgg+qtpV
5A6RcN/q/XXu5RF4zT/soLmRRMBRnAqxHsUPc+nIZWYkDOqTDN44jMLiQFrp
tsX0+bKh731uo5jzoGfNSRUSLx0FvzaeG0WBzjHNyl4hmrNvkgVPR8HQP90a
eEsIHwXlqPYZY8g2CvVq75jEuMa7uSavxqD9zTV/cd0khlLGb8zFGK6fWSt7
6sskUrxX1orKxuBe3PdwRv4k2n7rSvxuGIPaAZs244hJrPCMW5MoPo7zN5Wc
zqyZhNbZDFmpP8axfTJh66wbE/iqbczQrR9HS0mWjpnZOBo35Ua4dU0g4E/h
ljXG42hWdVeuG5yAWhvx9zq9cdhN2KtZj01gl6gqy4IxjoW5209oSk2Cs5y3
aVvXGJZX2M0M0J1E4gMjd6eYMchkLYpm7Z+E278pj/3HR/HRJOLXt0+T4Brf
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

           "]]},
         Annotation[#, "Charting`Private`Tag#2"]& ], 
        TagBox[
         {RGBColor[0.945109, 0.593901, 0.], AbsoluteThickness[1.6], Opacity[
          1.], CapForm["Butt"], LineBox[CompressedData["
1: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
5Uus/ShpjP7/fwYKYIfrfZA1Rv8D+W0pOw==
           "]]},
         Annotation[#, "Charting`Private`Tag#3"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1: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
              "]]}, "Charting`Private`Tag#1"], 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.365248, 0.427802, 0.758297], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1:eJwtWHk4Ffv/t4dyjoQsZTuoJGnTypk2RZfKzVJRckNXUty2K0lSiUIpF6ls
SSVFCiWvU4hESiX7fuyO41jPzInffJ/n99c8r2dmPvOZ9/v9WmZ03Y7buUuI
iYntFhcT+9/RhK3aNz3N5FjU1ve53p5iHxeyQoUkk/Php0vsu6tT7BcvlxmO
jDE5ajq772qcm2IvX2jj1tXP5ARcPL3j+6Ep9urZIfUVv5icdROD08TSKTbR
MVwe95zJcaemGYzy32y7q5VPVxxkctqml2h4T4vYZ6pCjnkWMjgrM861m/5N
sX/8mNn3/pACJ8btr1UPRibY8znHlVfPm8VZZ2VjsCh7lP3qaLE0s0meY+eu
pLA3YJjten0Zvy5YjmN9drfBH4J+9uStc6Fgy3LEn+U7le3mslMYzeqxbTIc
s0aTvTrLG9kJ1sv8vl+T5swy02mN+VrODvY+dHaRlRSHY/DOOjE4BOckn5zx
G5TgfCHW3m3R+opDQVX6NeninOI1XrjzsRl33nFjE7zEOEHM8sbWlC68aVk4
K0NvCoYaLivXhvIQsEH8WbzaFPaIjho+eMiDeVydzTXGFDwOWB2TLOKBYxcW
6UH+RoWsIPXTbx5KS/qVdKt/o8A59832f4bw42mmeszF39DTyMOMpXzwzqxc
ENQqwoTm6LPN6sNgKRKb9tynsCJ5buDwWwEiTNv8vaIpXHSyCbxfJsDkruCX
QaEUPr5/Xr3tpwAVN4v1n/lRCGx9WxnFE+DkHKsZMtso/PnFeeaEzgg+qtpV
5A6RcN/q/XXu5RF4zT/soLmRRMBRnAqxHsUPc+nIZWYkDOqTDN44jMLiQFrp
tsX0+bKh731uo5jzoGfNSRUSLx0FvzaeG0WBzjHNyl4hmrNvkgVPR8HQP90a
eEsIHwXlqPYZY8g2CvVq75jEuMa7uSavxqD9zTV/cd0khlLGb8zFGK6fWSt7
6sskUrxX1orKxuBe3PdwRv4k2n7rSvxuGIPaAZs244hJrPCMW5MoPo7zN5Wc
zqyZhNbZDFmpP8axfTJh66wbE/iqbczQrR9HS0mWjpnZOBo35Ua4dU0g4E/h
ljXG42hWdVeuG5yAWhvx9zq9cdhN2KtZj01gl6gqy4IxjoW5209oSk2Cs5y3
aVvXGJZX2M0M0J1E4gMjd6eYMchkLYpm7Z+E278pj/3HR/HRJOLXt0+T4Brf
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

              "]]}, "Charting`Private`Tag#2"], 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.945109, 0.593901, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1: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
5Uus/ShpjP7/fwYKYIfrfZA1Rv8D+W0pOw==
              "]]}, "Charting`Private`Tag#3"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{-4, 4}, {-1.925646309479319, 23.096789386583076`}},
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.945109, 0.593901, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.365248, 0.427802, 0.758297], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-4, 4}, {-1.925646309479319, 23.096789386583076`}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.945109, 0.593901, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
           "]]}, "Charting`Private`Tag#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.365248, 0.427802, 0.758297], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwtWHk4Ffv/t4dyjoQsZTuoJGnTypk2RZfKzVJRckNXUty2K0lSiUIpF6ls
SSVFCiWvU4hESiX7fuyO41jPzInffJ/n99c8r2dmPvOZ9/v9WmZ03Y7buUuI
iYntFhcT+9/RhK3aNz3N5FjU1ve53p5iHxeyQoUkk/Php0vsu6tT7BcvlxmO
jDE5ajq772qcm2IvX2jj1tXP5ARcPL3j+6Ep9urZIfUVv5icdROD08TSKTbR
MVwe95zJcaemGYzy32y7q5VPVxxkctqml2h4T4vYZ6pCjnkWMjgrM861m/5N
sX/8mNn3/pACJ8btr1UPRibY8znHlVfPm8VZZ2VjsCh7lP3qaLE0s0meY+eu
pLA3YJjten0Zvy5YjmN9drfBH4J+9uStc6Fgy3LEn+U7le3mslMYzeqxbTIc
s0aTvTrLG9kJ1sv8vl+T5swy02mN+VrODvY+dHaRlRSHY/DOOjE4BOckn5zx
G5TgfCHW3m3R+opDQVX6NeninOI1XrjzsRl33nFjE7zEOEHM8sbWlC68aVk4
K0NvCoYaLivXhvIQsEH8WbzaFPaIjho+eMiDeVydzTXGFDwOWB2TLOKBYxcW
6UH+RoWsIPXTbx5KS/qVdKt/o8A59832f4bw42mmeszF39DTyMOMpXzwzqxc
ENQqwoTm6LPN6sNgKRKb9tynsCJ5buDwWwEiTNv8vaIpXHSyCbxfJsDkruCX
QaEUPr5/Xr3tpwAVN4v1n/lRCGx9WxnFE+DkHKsZMtso/PnFeeaEzgg+qtpV
5A6RcN/q/XXu5RF4zT/soLmRRMBRnAqxHsUPc+nIZWYkDOqTDN44jMLiQFrp
tsX0+bKh731uo5jzoGfNSRUSLx0FvzaeG0WBzjHNyl4hmrNvkgVPR8HQP90a
eEsIHwXlqPYZY8g2CvVq75jEuMa7uSavxqD9zTV/cd0khlLGb8zFGK6fWSt7
6sskUrxX1orKxuBe3PdwRv4k2n7rSvxuGIPaAZs244hJrPCMW5MoPo7zN5Wc
zqyZhNbZDFmpP8axfTJh66wbE/iqbczQrR9HS0mWjpnZOBo35Ua4dU0g4E/h
ljXG42hWdVeuG5yAWhvx9zq9cdhN2KtZj01gl6gqy4IxjoW5209oSk2Cs5y3
aVvXGJZX2M0M0J1E4gMjd6eYMchkLYpm7Z+E278pj/3HR/HRJOLXt0+T4Brf
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

           "]]}, "Charting`Private`Tag#2"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.945109, 0.593901, 0.], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
5Uus/ShpjP7/fwYKYIfrfZA1Rv8D+W0pOw==
           "]]}, "Charting`Private`Tag#3"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{-4, 4}, {-1.925646309479319, 23.096789386583076`}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           RGBColor[0.945109, 0.593901, 0.], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Directive[
           Opacity[1.], 
           RGBColor[0.365248, 0.427802, 0.758297], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Directive[
           Opacity[1.], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.9, 0.36, 0.054], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.365248, 0.427802, 0.758297], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.945109, 0.593901, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.645957, 0.253192, 0.685109], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.285821, 0.56, 0.450773], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.7, 0.336, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.491486, 0.345109, 0.8], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.71788, 0.568653, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.70743, 0.224, 0.542415], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.287228, 0.490217, 0.664674], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
       
       CapForm["Butt"], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-4., 4.}, {-2., 7.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.903342974518176*^9, 3.903343125254608*^9, {3.903346005357082*^9, 
   3.903346050130784*^9}, 3.903346202304134*^9, 3.903346238783188*^9, {
   3.903346272213992*^9, 3.903346302218365*^9}, {3.903346375432359*^9, 
   3.903346404885193*^9}, 3.903346454742186*^9, {3.903346518858515*^9, 
   3.903346527174899*^9}, {3.903346896682107*^9, 3.90334691366717*^9}, 
   3.90368764092709*^9, {3.903688259057386*^9, 3.903688275965868*^9}, 
   3.903688352463183*^9, 3.9036884226094913`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"ebc85bc6-d716-426e-ad23-3ebb11aa4518"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotDataFitPreictGeneral", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"data", ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "16"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    " ", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"knn", "[", "x", "]"}], ",", 
        RowBox[{"dt", "[", "x", "]"}], ",", 
        RowBox[{"nn", "[", "x", "]"}], ",", 
        RowBox[{"predict", "[", "x", "]"}], ",", "model2"}], "}"}], ",", " ", 
      
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "2.1"}], ",", " ", "2.1"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.903346929694046*^9, 3.903346975307447*^9}, {
  3.903347055270349*^9, 3.903347057746357*^9}, {3.90368768200353*^9, 
  3.9036876914382553`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"93e77e6d-3236-4f43-805a-dcc0c0bf580e"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    InterpretationBox[{
      TagBox[
       TagBox[
        {RGBColor[0.9, 0.36, 0.054], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQUHHHjWxEx892p/Ghj82+/5LlBS+Pmn/WfPgMCf
/QJXtrj9DPqy3xgMfu+P+HW459nTT/tnzQSBn/vjeqxee7r92A8x7sd+h5AT
l1+1f4Wa923/1At5bpH5P/aDjTvzZX/Pt1K/II8fUPM+77/y4yS/K+cPqHkf
93c9evBrZslvqHkf9m/KWqfG/uwvVP+b/Us4396/u+P//hlg9S/31zmYX+bq
/Q6179n+gFsLHXf0/NtvBDb/8X6Hqv8qgvu/Qc17sH8S94FtJ9p/QvXf3C/h
H2LjaPB1vwFY/eX9e24f/3bW9RtU/uR+hRmiB+b2vd8/AczfuX/FSvU5/Sde
7IcFoENUUtXJba/2L4DI27+pXSy/DugOCP+k/c7I1b82r7q/3wJivr2E0vk9
QTO220Pkb9o3lD8xu7N5sT3UffY7Jh+Yu0Xqur0JxP32NstnG9w888Q+A+I/
ez4+JZ+n69/bz4H4377uQKenM/dX+wuQ8LHfIpaYVjSHwQEafvbXnnjPWxLP
4AANX/ukkPt6vHeYHSDmf7YvE2TeND2F0+EcJH7sLyb88M4U43OA2PfNXuJx
WnSBjADUvB/2FWeXsCTfEYSa99Ne7xVTgpaHMNS83/Y5M/mWaj4Ug5r3xz7l
Ib+AyWpxqHn/7Dk+RbVJi0s7wILv/Jv4sgJhGQcAl1xDrw==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ],
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Point[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQUHHHjWxEx892p/Ghj82+/5LlBS+Pmn/WfPgMCf
/QJXtrj9DPqy3xgMfu+P+HW459nTT/tnzQSBn/vjeqxee7r92A8x7sd+h5AT
l1+1f4Wa923/1At5bpH5P/aDjTvzZX/Pt1K/II8fUPM+77/y4yS/K+cPqHkf
93c9evBrZslvqHkf9m/KWqfG/uwvVP+b/Us4396/u+P//hlg9S/31zmYX+bq
/Q6179n+gFsLHXf0/NtvBDb/8X6Hqv8qgvu/Qc17sH8S94FtJ9p/QvXf3C/h
H2LjaPB1vwFY/eX9e24f/3bW9RtU/uR+hRmiB+b2vd8/AczfuX/FSvU5/Sde
7IcFoENUUtXJba/2L4DI27+pXSy/DugOCP+k/c7I1b82r7q/3wJivr2E0vk9
QTO220Pkb9o3lD8xu7N5sT3UffY7Jh+Yu0Xqur0JxP32NstnG9w888Q+A+I/
ez4+JZ+n69/bz4H4377uQKenM/dX+wuQ8LHfIpaYVjSHwQEafvbXnnjPWxLP
4AANX/ukkPt6vHeYHSDmf7YvE2TeND2F0+EcJH7sLyb88M4U43OA2PfNXuJx
WnSBjADUvB/2FWeXsCTfEYSa99Ne7xVTgpaHMNS83/Y5M/mWaj4Ug5r3xz7l
Ib+AyWpxqHn/7Dk+RbVJi0s7wILv/Jv4sgJhGQcAl1xDrw==
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PlotRange" -> {{-2.1, 2.1}, {-2., 16.}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
            "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.9, 0.36, 0.054], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{-2.1, 2.1}, {-2., 16.}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}]},
     Annotation[{{
        Annotation[{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Point[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQUHHHjWxEx892p/Ghj82+/5LlBS+Pmn/WfPgMCf
/QJXtrj9DPqy3xgMfu+P+HW459nTT/tnzQSBn/vjeqxee7r92A8x7sd+h5AT
l1+1f4Wa923/1At5bpH5P/aDjTvzZX/Pt1K/II8fUPM+77/y4yS/K+cPqHkf
93c9evBrZslvqHkf9m/KWqfG/uwvVP+b/Us4396/u+P//hlg9S/31zmYX+bq
/Q6179n+gFsLHXf0/NtvBDb/8X6Hqv8qgvu/Qc17sH8S94FtJ9p/QvXf3C/h
H2LjaPB1vwFY/eX9e24f/3bW9RtU/uR+hRmiB+b2vd8/AczfuX/FSvU5/Sde
7IcFoENUUtXJba/2L4DI27+pXSy/DugOCP+k/c7I1b82r7q/3wJivr2E0vk9
QTO220Pkb9o3lD8xu7N5sT3UffY7Jh+Yu0Xqur0JxP32NstnG9w888Q+A+I/
ez4+JZ+n69/bz4H4377uQKenM/dX+wuQ8LHfIpaYVjSHwQEafvbXnnjPWxLP
4AANX/ukkPt6vHeYHSDmf7YvE2TeND2F0+EcJH7sLyb88M4U43OA2PfNXuJx
WnSBjADUvB/2FWeXsCTfEYSa99Ne7xVTgpaHMNS83/Y5M/mWaj4Ug5r3xz7l
Ib+AyWpxqHn/7Dk+RbVJi0s7wILv/Jv4sgJhGQcAl1xDrw==
           "]]}, "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{-2.1, 2.1}, {-2., 16.}}, 
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
         "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
         GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListPlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}, 
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
          CapForm["Butt"], LineBox[CompressedData["
1:eJxF2fc/1f3/wPFDISQjlKhTGnKyK2XUOcnIuIRcRUZ2SDQko6x0LjuSkRVC
5qXMY75FJXtly95k73F8bt/b7Xu9nj89bve/4XHCxE7LnBaHw/2kweH+r+uZ
ql/r6nDlmybcg8Ki89jVI7tkY0fwa3K22upJcM/cOY+hoF3sP2e0LFp2dlGR
v5bwiR3LArcnK66ZeoH1TrBb5TmBB6J6uuntwCe7ykOyrMAW3MlqOmZUjPer
5Xn6mCUs5ZYfHc098HTQo7JUXfDqa7oENXkwziXy9ZwImHBz9qBL1w7yrZNy
CfReYMOgKE2iGNh6Zxnn2LuNvP/cAPduMzhTp1aIXAV2nSsvUK4Aq5Pz5VhK
wfijGfVNBduYUmLSrF30EjafE6/zLhsswerolRADfmat/vmzN3jz+BZDvSHY
vePTvckL4Exl8Sv7ureQu4uLjgi4gc0PH22xtQTP27v55GuCD+7Xeb5PDSz5
Ucz8riJYV5rxVgYJ/KJ5kESV3sImJxlvHA5bwSp23/IliIIZROTXFU6Bj43v
u9+2uol8Ia6+zawazP+s6q939mB2la/fK/Fg7wtlHnorG8g4fPGVpRqw7LtC
XiwP/JyRsuEbB+aUL5iYDwVnu+Z33PYD0/BJNjKSwRqFeT9K3MEfbl8ss3MB
zy7l5vE7bGC0Ls4WR8ZXsQMp+2jVy9aRRfX11Z3owYa3Gp3bcOBAFblP4ltr
yKXX8loDVsAzl8/ipubWsBLmdeaErVVMReCAbsIIOIVr+cvdLrDZImZaWwE+
3ujHJZsBfu990umoG5hDrriXqgnemzf18evaKvKqwJEHXjFg06Oe1528wU0c
U7y2T8FklmPeE5Zg2X1ayyaG4HA6G8Jx3VUscc6qtk1vHVukJRv9vgVWx8WF
RaqDU3cK6+4ogz0nfF5ew4P1W3VFzq2sILOmbryhxoErXN8vNKuBhWw8CkXw
4HBdKw+/hWVkNQ2D0cJuMK2SpvJEJThLXn3ofBlYX07VxY0CZiLd4KzNBhdc
UcjkzlzGPNPMs2rPrmMcUsT+zHiwzQUpdoUwMImVMZ4qDeaa6hSj9C8hpwvw
6Hn6gq+Z675WuwhetomvSSKAk+0nWXfxYHfHgOz0I0vY520T37myDUz3hfjf
OlxgCfe2tb1s4P1eTpFfmMBPQhhPm60sInckvM/iHgAnfC385pIHfjjQ1TXg
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
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ], {}, 
        TagBox[
         {RGBColor[0.945109, 0.593901, 0.], AbsoluteThickness[1.6], Opacity[
          1.], CapForm["Butt"], LineBox[CompressedData["
1:eJxFmXk0VV/Yx2/KkFRUyFwyJ6k0/EL3psEQEQoRzUllSiqp8DOUzJVS+JWE
hEqKVL4qpYgyz1xjhkvIdM+59O53rXet96+7Pmuf/dzn7P0M32ed5YfdLI/x
MRiMT7MYjP/9ncrc9eH7d0Zh+c1PqR+PdWG/8cUT6iWMQm0NrNY814V3XSnz
g4sZhR/Pmhy+HdgFfxm+/cyPjEJpwSK5U4+6IHw9b/RFLqMw3ke1X6K9CzJH
lZXuJBF7l74EnXfoxhbpv8GHLjAKPeNK3SytehAUnG06sYJRWFCoI3xway8y
Kked6xtmUG6aFl7tzoHVCoMkgcBpeP2TuMxn5TCU8jeuKrkyDfNtL4Sk1w1j
zGJVXvjFaWyaf+BL/uZhxF5ZWr7EbRq7QpIGuMbDqG8Y4irun0ZJu+mN887D
cIy6v4epPY1nz1SLTzwehsv0GONCMw8FQm4v5BRG4FeX6tSnw8OvbNkds+aM
4pGrn5nuah4GdocIrZo3ii/8drrh6jzIJfp72y4axTwdYck18jyY6C3mPV02
itio0+UXBHmYvymlwVh/FJnGa/SFGmmE8PtnmnqPovFtvrTqVRo2fhIn5dmj
0HlQVnP0GwU/sYjBwud/8K++WZlkEQXZD2nqxa//oLLxe1FJAQVzk3m6Ze/+
wF38+0vtHAru8dVrar7+wdPQkmheIgWXlAMejew/UDxXbHbLi8Kq6OeH34iO
Qczkw+dPChQyZjl2FLmNYehPzitFby7EihS3TCmNIzJaUvSoOxfCW3Rd6zXG
ob3ax+WxCxdhFXyJudrj8HRhKqg5cZGa+ErFQ28cE+xv11YZcWEgf/latdU4
Zspa7TdJc6Fkl/vaJmAcC9KE+HYXTOFUgcyrfXXjWO3gsPuiwBQCy5+6T5yb
wISq9KnAhAk0+jqZU3cm8fFK3EiF6Tjy5oe/qYmYgnh/vXZe2x9o8i4Fbfbh
4gy7oYEdOopAxaIduWYUqvUjdqcFjUL7wp/ZcRYU9O4bfHLzG0Wln7nEeSsK
wvueZsycG0XGHME8dTsKaaW+V2UPjUL4MuV64iiFrtcKyrYbR1Hvm2C1xYeC
Q/gx9x+dI2D9OPRAO51CUb9Ud2zrCEJ3ZbSJZ1JYaVRu59gwgoL80ISJZxQo
vo3bBstHEHBXXiLrFYW7F4Qk5uWP4HgunTRYSPw78vTtzqgRjPEtW5VTS2HX
5hGBAr0RmERq/dj6l8Kcu9daF28cgcPB+d+bZtEoGFd4fXLNCGRf2BS7z6Gx
9sXuY+IqI0iu0HpzYy6NpWoZn04vHEHrgl/XgxbT6BI/4SfTQeJ2p/26QBUa
iWdnbDyah7ElpvDUdzUSVxW3VxfXDkMj0Lhs4UoaJWFFrZ6lw/j4snl98Goa
L2Yr6pfkDCPlvr/cuk00row0cy+EDJN4K/wdYkRjk7lXRbn/MEpW/Qy7aEJj
JGPeEyXfYRT8iZk+ZkrjqPNm25/uw8j2WDZnlQUNk7Y7r1X3D+PCHHG7KBsa
c/RXR1y2Hsb2vTosRzsa7+99OVa1exg7ma7KKvY0tPeNL7m6bRgziSVIdqQh
WWZ5tlZzGAvM7F/uP0bjp0a/iabqMDy9bF9zj9MIveavGLB8GM73I0VinGlM
b3tesUpiGBvUvNe9OEWj+JzMQeG/vxGzYpF4qgeNg3uiG04k/wZVJefj7Etj
pdSC+Jq43zAo89aMvEyT+A113Bb5G8e5JSHPr9AIdw/slPf5jYnXjzrb/Wjk
R54frDH/jf2GRk2MIBrBNmPPtu34jX13nltThPcoeHi+2PwbDmWPlg8F0+jN
cpkMU/4N6c+eN4qu0RAvPzBrOz0EoWHbsxphNNi3Gz+9GB6CgL7NunHCGQds
ghV6hpBsrCabH07DYNBiHv1zCEZvR06siaSx4FVZmfOXITiyAx50EW7wNYmq
fTsE15UCNtFRNNxFtotnpwyBktLZUh9NQ7e6sE4hfgg7hc2LPGNoCMTr3wuP
HsLhM9/lBG/SSFi5UeGk7xDuHtuwTO4WDec/L9trPYbQf6j8/FPCOm+1k7ef
GILlnNApndskXkw01JdZEtZijOnE0ri9KHUg3JA8/yrf9Snhg40rsmi9IeTV
Rv6SuUNDM+mB+8m1Q6htf3r2G+HJk3Lr6lSHEGgnL193l8bHNffGt8sNYfTf
/V9a4mhEcCXyshcNIdbwxenWezSUrovqR0wPwmF/19rSeBrDFuF/6dFB9Py4
cDk3gcbbpcIfT/YO4q585HB8Ig3LtNmGO6oGsWj5dWWrBzSuFk9Y8NIGMWF1
89yZRyQeI88udkkchBp3r51iMg0Jm+GaupuDsC4SfvuTcEZP3/6XVwaRzBRV
lEyhcSHruNxyr0GIrlC8/JzwNu/OtoiTg/hSmVGzNZVGI3/LURfrQbS616Wb
p9F4XGanWm88iC1O51W/E3a/Xdu3g0n8lYp6yHpCQ++AVcZLnUHkZ2pszyIs
qPzTdbnGIHxS5SOXpNOo5JiuiVQYRCH7pc1Zwok53/7wlgwizK4/oYTwSd+d
r12EB+H3NElE5im5n+2fLtT/5UBl+MajI4STRQRmHRnjIHks/c0TwotrjK4P
9nKgZSlt9otwQMINsQstHCi5cbNlMmiMHiuP46sk+7vVYg0JH9YSUwz/wgGP
5eftQrhiwipd8i2xF/DXKpAwC7Frk55xcO2no91tws9DGvI1kzlwzT0nkEB4
mYXstty7HFhu3G5/n3DkUqfSreEcCCVszowiPMN+aPXdn4OYXlueL2HXJ11N
+7w5yEnx/upEuNVD9Wi7y//7s3uzC+eUEwdqz83DVxIu4Mv0mrDioHDw3CwB
wqtKf/P8jMj/DT6z/kveL/7m2qB5+hxcyM95Ooesizicmx+7hoOp4Ki//7vu
q5R3e5kKB3oXaZ8RwhwOJfdUmoOf6cly9YQdXumnrF/IQZTa7UWvCJde9tMq
nM1Bsy0nK4Tw5p2fXptMDWCn+GixOeH0BQLMGs4AvCeDhRYQlq4zKnZqH4Di
9z7pD+S+rv93w7y/ZgA8zs2rLoSnTpTXeZUMQMnMd95cws7aYgf/Fgyg1ql0
SwKJh/opq97rLwewpV60SIWw4YdY9yVpA5iIvOX+mMSTiqWsv3r0AIoepTL/
JfEXK+00NydoAF4NVzZ2kPjk73wYvcVnAI1epv4bCHedVU2yOjKA/h8f2t6T
+LbWc9FotRlAJV+M1wjJh09zMrOdTQdIvdRukiKcdHvtp8vrB+Ar7PbH+CGN
RY7ndglpDCDC5z/zPSSf/FXyqmLkByDbknDZ7D+S77n6XamCA6jXvMVdQfJR
vsGIv7KhH7UTxz2MSX5HPLwR7lDej/zNrsETpD5MnywX//WxH8clSzixpJ40
U1YqvKf92C8XmVdN6tM9WSdDlSv9EJL+4apB6p/kwXPXfRT7IRr2Pek+qb9J
TfWvNkv2gyFZNTxE6rOWjV4HNa8fdw03vt1A6vfO3bN1L433Ycw0ze3RRRpe
etGcS1/7oLI+IWOE1H9G3thSvfd9CGCHZP9yoxG2znYH70Uf5OctFa48Q+OR
hkKi7/0+bKpQ+DfgJMnHpZnml137oHFrXNbqIA3HW6K++kf68M7pUGDvARr9
C73Spm360CsaE+NB+tcsQd1ZV7b2If+94m6nfaSfjX/NvrKkD2xGtcujXeQ8
KrrE/fJ74XDxfVjROhIvZkYGrGe9WDCwfG6ENo2Ur09dGcm9sAjI3meyivRH
eBb7hfdiw1Dswnukn3MyGRf9D/bC4PAbpftLSX1SP/p4695eyJe9r+YuIf31
cXHFLJNeXDswtHeXGA2Z+AiNgHW98L62Z1kR0QspkqP7DNR6IdApy+TwEz1x
c++/fHK9aF5t1cDPR/JrwZtnH8V6od0h6yY2Q8EkVLY5QKAXQtRFxkKKgsA2
66Qgy1/wS+Xp3PhKob+Ev0PQ6Bf2L62xMfxModwyd3mo/i88eNvhPfmBQuxh
6YcRar+gwrPe9+EtBeUA9n93ZnqQX/pBzp3ope0fTic8Se9BtUhAg/YtCmrG
8i0rHxBuMbh2I4qCSMUP2azbPaAyz7fUhxH9xF4bn+1H9hfwPTYKonCEwb33
dl8Pai8ZV189R2HntfRGfdMeJPJfbjvpQUFD1EG6cGsP/MpvvN1xhsKoAuKK
NHvgcyBJtJLovdpU94adij3gGR/OCThIIX+1otQ3yR78NHedtdqBQgAz6G4Z
Xw+EJ9vNU4h+PF68od58qhuO63z5gs3J+Zj3SlYOdkPodtvqvbsoaNXF2Vh3
dkN+ten3c4YUFjntulNb3w1NneeWZ3ZQmOjh1dqWk3XLezV22yg0umZJNH3q
xpWkN9abt1J4eEUsti2rG1/MCovr9CgUvk+4ObK/Gway475u6hSSd5hXnbXo
RpjJoG+pCoVrZYzFEzu6kVVR+UhGiYJFy5EYSpvY3/pg61qi63WOiVf6qnRD
8VdbXbUshaWDX8T+ynQjBtYup6QpsHnq0bMFu9FrmDbnvDjRt4FNP4N4XeCl
S+QOLCL6WCRcVGi0C87K/nL8YhTCbm2xCP3VhcPU8IFVC8mcITscKdLSBVZv
zz2T+RSskx/+iKjsgtJH3UTMo7BJ02qh2NcuZFTEZO4XpvBX93WE+MsupGTR
W90Fif9Fq27lpJL1na5iX/kpiJo9jrOK78Luoschi+dQWOZ4Kzk6qAsOK6Le
+TMosPw88+fbdkFFUk/+/RQXX4X6kWHaBeu03cvTJ7iwiD70edfWLqRtqim5
PsbFwSSLn9c1upBUK3JcYZgLvyKtHv7pTvQIqrx/1MOFkFnKQPJIJ9455hgu
7+IiqkZuZFtPJ3y3RkxFtXPxoEeE5/+jExPb7SKXtnCh5hY4a3lRJ7Ysanny
tZGL55O0QGFeJ1xPZfS71HOxye+siFNmJ3a3JFbM1HDxQWhAbOZhJ4QCwg6F
V3FhEn1YMiG2E/vOtEYHVHBRKdUoq3ejEyX3j/LSfnCxP2mPYtPVTnxVXi91
mXCHxjdVH69OfDF632JI2OUla5XUyU4M54aNCREe1c1bm3egE0MigUIfyrnw
KVq9ycayE0aHLKXcCPOZpepP7OyEzu5FyvMJh9bIb7ut2wntVY1748q4pL7H
Gulod8L0rsVsGcL3eubvrlLqhMjl6xazCCu6BVl5SnXCYlmFxl3C6ZM8W7EF
nejgs9FUIvbW+nk5Pucj/tSl/00mnC/EOWI+2YEUSwdzaeLftugjJ4cGOtCI
JvdAwt+lmlzD2R14XZm3oJOwdZKll2ZNBy7MyDzZ8JOLZo2Si6XfOhDM31aa
TPjoy61XXQo60BEU4PWNnB9H903g3JcdEMnN+v6MnL9XkXZoWmoHsmf9/mNA
7pNnmhZpGN+BqOfuojkjXATWKNzuierAzMK5bZ+muRBxvHMvKKgDzUfnmBWQ
eLzVs+CBkg+xl+hpf1eS5NfkdPrhIx1YFtozu1+bwmep5sLW9eT52/H1sw+T
+ud4l1Pb2I6Pqmd7LT5S6Bk9wL/pZzvuCucYC5RR+BKyQj7uczvc82SS/quj
EPIiy9z+eTsO25t1XOJQcN7p5fzucTt6vH+MFUxQMGr6x1/uPtkvKvSkm0FD
iP9zdltQO5TWfbA+Sua53rjQUtaldtSHjMVnytD4qmXR9dC9HVrrs1/9WkH0
hW2T+FH7dmxStqyU0qEhnDFyoVe7HWt3Fcx6u4f0J1ZutLFKO3r3HtjmTOat
khrf9HSZdjzwNPt2/BCNG38Fm08LtEOvZ0WnEOmPp2+VjZXRbIQe+fgw4wIN
U/Wb81ePsLFzB3/GGtJ/RazkmSNNbATIfnvEjiD96FenjWUFG3yLTKKFSX8v
833i/vILGx/z2hQkiB7IEnO7vuQdG6OfpCg+oj8iUnSSzr1gw1XruYA/0T+u
ulR+bQp5nqsZwX5G9N5PVG2MZ+Od+otcpVc0FlIm/FQwG55zWDvtQfR/hKi8
vS8bWs9MnpoVkXlwRe2Gdx5sUF1LWpS+ET2ad99c7gQbd9d627PLaESZHXK+
4sDGUltBnl8l0eMdKv5te9gQSVZ+ub+WhsV5ThzLkI05u3fHvmgg/VokO/uh
Hhv71d9/HmimIfbwfCnfWjYOq38/PY9N9PJ6/a4jqmzIiz3REuwi+qCEb7pI
lo1G+veTNb00YsbCtUIE2dj3OPfZ6mEaqlFGKyTz28C29vAumSH3+abKuiG5
Da31qU2qfDykdToG349sI/u2dZzg50Fj47k+hWNtCJM6NhM5jwfN1ofP1ETb
kGeXHX9VggeO4Kr2fqoVO3uDDo8u5SFzTd6izO5WKPUK/Gcow4NWUPm5NW9b
EVP3I/itAg9DWXapfx63wk95yzqOIg/P6rvqX0W1IqzE32pCmQd3PnfhC5da
Ifu04+yoKg/amrTu5uOt+OJm1VqizsM/Nou4681bkfjL6k/SSh4MAtRfr9nU
iqnIBbTFKh52ZbLOrlreCtHmp+dqtHiwrrfRVhduxZa1u/JWa/NwYLbboNKf
FvQaGV+OXsPDca3g9GXNLeD4p8zOWcuDm13CCdnPLYjtX7Piv3U8XAjMUVqa
1YJgUfNXTjo8+D8rbV98pwU5hk1za8l6aGNH4kK/FuzTM/PjJ/Zv8lP28062
oDZBcZsw8S9eW0xK0LIFo0b3d7WQ93tsr1bLp9uCxMvyRZeX8ZAVzLw5s6IF
Gddk+TjSPBQ2n5k/Md4M1pntxdILefgmGFQy0tqMkjfrLtQL8VC5Nj5ksLgZ
r5sTho6Q+2o68HJ73/NmHNRLuvqOJvr6Wsms7rhmuHf3/G0bozH4sr2AHdCM
3VYyWcGDNCZapy41n2pGjOr2hGPdJL/Xq05U6TfDoWrj+YhqEl8Ht7z8odJM
3ttkY30p0YM39rqXLmxGh4HmD/VPZH5u/7f/Y3sT+BRM1zi+oLFe5H5qQUkT
9t9e8n0NmQe2bMw+mv+yCXqKipk1ZP41PPxt+ev4JrwOmp9uQvS1RTi79UVQ
E0pGdiy6coOGXd7k/UzXJhxnV7tqB5J5r3OB3RObJvit1/vvLNHTXv/oVz1Q
b0JMDzMvwZPG3e644siyRli3XLdaQuoHW9/q+RnxRmTbN/I85Wn0ObucOTnT
gH11F2QOSZD8uOmvcexXAxYdkOJTXkD0aP+zZIc3DZgSeHjRnNQ3tViRuF0H
GiCf9O4HOih4DH32V39cD9PX/94Tf0Ah+6p8SFREPeSHl3go3KEwJno+bPJ8
PXKkHY7PjqDgvU7tzmeTeozZy892uETB90JoxqHhOmyaOTDyeC/RE3zmdXG6
dVgQeUvvLdEPJTdTmxnKdXA5ddCGy+VinjKj48SCOhR8vvpe8jcXEYYvOOvb
a6H5wOyFSQMXN8MW81UG1yLZyb575ikXiRL1msKVNcguHGT2mHDBTtVe6/G2
BvmGKR51W7hY/s/1jfXJNfh+VXQoZS0XyfabDVLO16DrqfmJcmkunjyItzGQ
q0Hi42m/uIEp5GgcCvBxrsaWtCBDiZApTLx9E9K+pxo7N24sG7s4hY1mi8KN
dKuxOfDR1+zTU8h3+3RHYkE1Ej0KvH/smQJylDOzX1ah8FB0/wbpKTB2XsmW
SqhC+eeQeG/hKRjU1eb6BVehOrUiLpaaRBE35ONuuypkHNMqPdc4CYEb7OJX
BlWQkLlerVMyCUPZf8pkNauwQO3qTNWbSVzLjK78V7wKt8JEja2eTKJkS39d
/0wlXGuW6GTfncS73tbZtX2VkPi3tyclbBJZMVWrP1RXYp8WO1spaBIP9L7a
Z6ASHUslUu5cnkR0z7uQO+mVONzscorhPQnbiMiN2/dVQtaE7aRrM4meFp07
CZkV6KU3nHCSmMSsy1f3WTj8hNGtOuGq6xMYVfEK0DX8iUDbv+m5fhPo+umc
pbL2J2L4zI1unp/AVyVLgWnBn/DM4nBXHZuAXJzxaasTPxClLHdsnDmBTZtu
rRSQKMetiqtrK/+Mw81bPf3U2VIEeT78ILp3HF3fNaRe7SiF5fNU11km47Bd
oXltRrIUn5btdO3bMg7WT63j0e9KUIwH/8SrjWORho5iLn8JcjZQdTH0GHJa
ttzju/sVC54Nvvr+3xio7dahce8+Q0B8JVOi+g8CF191KeYvhPKDjJiPKqOY
uyKws8H5MeLDjcfjTQZhcEf1YINrMjNxmT63/lkP1LXHDrd4FTJtDT4aihS1
wlaxUmFkXilTO2t2w8Dtn1DNs7mhsK2KyRC9d9nP4wbmVpz29uquZwYbLw9a
bF/GrHt/KR8qrcxdQU36px+1MLdrfp5fzWln+l6enSbO/4sZc+Sby6fbXczm
o+6mA5lDzJqqBzBe84u53k5wfbrkH+ZcmamkRP5+5i52+Dp79UnmOtPv2a5P
OEzpAYPlPHmaudt62Z75wb+ZkenyPr7Nf5mrH02FL5YaYdam8dboKvOxXuSZ
/D7lPMr00I/5cdNiDivjTfOdldV/mBlyoYWVyQKspNWZtWmq48xiiY++p74J
sUSj3zuE35lgDiw7LmG7eB5rKiLX8T1jiilTclZR0mQ+q2nW8ET6Hi7zjonK
M1erhayNB51r/xZQTNsfgnY3CkVZEesUTBct4TFNR78G+3wQYzk9gr774Wnm
9EjnoHP+ItaTmf+815fNMEcGZSbPfl7MOn+iTbF5IYMVOvv1tvXvlrBiltp1
/1jEYO0QbRG6WriElfGtMvWTOIN1d2LXo69FS1jslV80n8owWEclBiXty5aw
jIYzNvioMlhBbq2Mq61LWEsv+pgsZTJYx8bC8t8zxFl5oeKe1q4MluOdE+Vb
t4mzKnUjdYw8GKyL4XxL9xmKszgcoUldLwbroPtWU5dd4qxl5rxLK3wYrC6+
GcdoK3HWtcWdQaNBDJZK1t1PzUfEWbbxz+OiEhisD9ueHDgWKM7yNNNwCHzA
YFFMHd1z18RZYTOP5C88YrBWNY9mBoaJswoP3nnk9ITBWh4xMJ10S5ylpnwl
U+sVg1UWndnclCzOMqiddFPMY7B2eqkc7UsTZzmEeKyVeMtgDc5dHTuRIc6K
6juaO11I7J1LVRJ9Jc5Kv9d6ceQTg1VsIukv+0acVbTLVq/7C4P1scczQe29
OKuVVzFT/43Buu7mmazzQZz1f98HWcZ3H7NYn8VZ/wOCvv5/
           "]]},
         Annotation[#, "Charting`Private`Tag#3"]& ], 
        TagBox[
         {RGBColor[0.645957, 0.253192, 0.685109], AbsoluteThickness[1.6], 
          Opacity[1.], CapForm["Butt"], LineBox[CompressedData["
1:eJxF2fc/1f3/wPFDISQjlKhTGnKyK2XUOcnIuIRcRUZ2SDQko6x0LjuSkRVC
5qXMY75FJXtly95k73F8bt/b7Xu9nj89bve/4XHCxE7LnBaHw/2kweH+r+uZ
ql/r6nDlmybcg8Ki89jVI7tkY0fwa3K22upJcM/cOY+hoF3sP2e0LFp2dlGR
v5bwiR3LArcnK66ZeoH1TrBb5TmBB6J6uuntwCe7ykOyrMAW3MlqOmZUjPer
5Xn6mCUs5ZYfHc098HTQo7JUXfDqa7oENXkwziXy9ZwImHBz9qBL1w7yrZNy
CfReYMOgKE2iGNh6Zxnn2LuNvP/cAPduMzhTp1aIXAV2nSsvUK4Aq5Pz5VhK
wfijGfVNBduYUmLSrF30EjafE6/zLhsswerolRADfmat/vmzN3jz+BZDvSHY
vePTvckL4Exl8Sv7ureQu4uLjgi4gc0PH22xtQTP27v55GuCD+7Xeb5PDSz5
Ucz8riJYV5rxVgYJ/KJ5kESV3sImJxlvHA5bwSp23/IliIIZROTXFU6Bj43v
u9+2uol8Ia6+zawazP+s6q939mB2la/fK/Fg7wtlHnorG8g4fPGVpRqw7LtC
XiwP/JyRsuEbB+aUL5iYDwVnu+Z33PYD0/BJNjKSwRqFeT9K3MEfbl8ss3MB
zy7l5vE7bGC0Ls4WR8ZXsQMp+2jVy9aRRfX11Z3owYa3Gp3bcOBAFblP4ltr
yKXX8loDVsAzl8/ipubWsBLmdeaErVVMReCAbsIIOIVr+cvdLrDZImZaWwE+
3ujHJZsBfu990umoG5hDrriXqgnemzf18evaKvKqwJEHXjFg06Oe1528wU0c
U7y2T8FklmPeE5Zg2X1ayyaG4HA6G8Jx3VUscc6qtk1vHVukJRv9vgVWx8WF
RaqDU3cK6+4ogz0nfF5ew4P1W3VFzq2sILOmbryhxoErXN8vNKuBhWw8CkXw
4HBdKw+/hWVkNQ2D0cJuMK2SpvJEJThLXn3ofBlYX07VxY0CZiLd4KzNBhdc
UcjkzlzGPNPMs2rPrmMcUsT+zHiwzQUpdoUwMImVMZ4qDeaa6hSj9C8hpwvw
6Hn6gq+Z675WuwhetomvSSKAk+0nWXfxYHfHgOz0I0vY520T37myDUz3hfjf
OlxgCfe2tb1s4P1eTpFfmMBPQhhPm60sInckvM/iHgAnfC385pIHfjjQ1TXg
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
           "]]},
         Annotation[#, "Charting`Private`Tag#4"]& ], 
        TagBox[
         {RGBColor[0.285821, 0.56, 0.450773], AbsoluteThickness[1.6], Opacity[
          1.], CapForm["Butt"], LineBox[CompressedData["
1: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

           "]]},
         Annotation[#, "Charting`Private`Tag#5"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1:eJxF2fc/1f3/wPFDISQjlKhTGnKyK2XUOcnIuIRcRUZ2SDQko6x0LjuSkRVC
5qXMY75FJXtly95k73F8bt/b7Xu9nj89bve/4XHCxE7LnBaHw/2kweH+r+uZ
ql/r6nDlmybcg8Ki89jVI7tkY0fwa3K22upJcM/cOY+hoF3sP2e0LFp2dlGR
v5bwiR3LArcnK66ZeoH1TrBb5TmBB6J6uuntwCe7ykOyrMAW3MlqOmZUjPer
5Xn6mCUs5ZYfHc098HTQo7JUXfDqa7oENXkwziXy9ZwImHBz9qBL1w7yrZNy
CfReYMOgKE2iGNh6Zxnn2LuNvP/cAPduMzhTp1aIXAV2nSsvUK4Aq5Pz5VhK
wfijGfVNBduYUmLSrF30EjafE6/zLhsswerolRADfmat/vmzN3jz+BZDvSHY
vePTvckL4Exl8Sv7ureQu4uLjgi4gc0PH22xtQTP27v55GuCD+7Xeb5PDSz5
Ucz8riJYV5rxVgYJ/KJ5kESV3sImJxlvHA5bwSp23/IliIIZROTXFU6Bj43v
u9+2uol8Ia6+zawazP+s6q939mB2la/fK/Fg7wtlHnorG8g4fPGVpRqw7LtC
XiwP/JyRsuEbB+aUL5iYDwVnu+Z33PYD0/BJNjKSwRqFeT9K3MEfbl8ss3MB
zy7l5vE7bGC0Ls4WR8ZXsQMp+2jVy9aRRfX11Z3owYa3Gp3bcOBAFblP4ltr
yKXX8loDVsAzl8/ipubWsBLmdeaErVVMReCAbsIIOIVr+cvdLrDZImZaWwE+
3ujHJZsBfu990umoG5hDrriXqgnemzf18evaKvKqwJEHXjFg06Oe1528wU0c
U7y2T8FklmPeE5Zg2X1ayyaG4HA6G8Jx3VUscc6qtk1vHVukJRv9vgVWx8WF
RaqDU3cK6+4ogz0nfF5ew4P1W3VFzq2sILOmbryhxoErXN8vNKuBhWw8CkXw
4HBdKw+/hWVkNQ2D0cJuMK2SpvJEJThLXn3ofBlYX07VxY0CZiLd4KzNBhdc
UcjkzlzGPNPMs2rPrmMcUsT+zHiwzQUpdoUwMImVMZ4qDeaa6hSj9C8hpwvw
6Hn6gq+Z675WuwhetomvSSKAk+0nWXfxYHfHgOz0I0vY520T37myDUz3hfjf
OlxgCfe2tb1s4P1eTpFfmMBPQhhPm60sInckvM/iHgAnfC385pIHfjjQ1TXg
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
              "]]}, "Charting`Private`Tag#1"], {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.945109, 0.593901, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1: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
              "]]}, "Charting`Private`Tag#3"], 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.645957, 0.253192, 0.685109], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1:eJxF2fc/1f3/wPFDISQjlKhTGnKyK2XUOcnIuIRcRUZ2SDQko6x0LjuSkRVC
5qXMY75FJXtly95k73F8bt/b7Xu9nj89bve/4XHCxE7LnBaHw/2kweH+r+uZ
ql/r6nDlmybcg8Ki89jVI7tkY0fwa3K22upJcM/cOY+hoF3sP2e0LFp2dlGR
v5bwiR3LArcnK66ZeoH1TrBb5TmBB6J6uuntwCe7ykOyrMAW3MlqOmZUjPer
5Xn6mCUs5ZYfHc098HTQo7JUXfDqa7oENXkwziXy9ZwImHBz9qBL1w7yrZNy
CfReYMOgKE2iGNh6Zxnn2LuNvP/cAPduMzhTp1aIXAV2nSsvUK4Aq5Pz5VhK
wfijGfVNBduYUmLSrF30EjafE6/zLhsswerolRADfmat/vmzN3jz+BZDvSHY
vePTvckL4Exl8Sv7ureQu4uLjgi4gc0PH22xtQTP27v55GuCD+7Xeb5PDSz5
Ucz8riJYV5rxVgYJ/KJ5kESV3sImJxlvHA5bwSp23/IliIIZROTXFU6Bj43v
u9+2uol8Ia6+zawazP+s6q939mB2la/fK/Fg7wtlHnorG8g4fPGVpRqw7LtC
XiwP/JyRsuEbB+aUL5iYDwVnu+Z33PYD0/BJNjKSwRqFeT9K3MEfbl8ss3MB
zy7l5vE7bGC0Ls4WR8ZXsQMp+2jVy9aRRfX11Z3owYa3Gp3bcOBAFblP4ltr
yKXX8loDVsAzl8/ipubWsBLmdeaErVVMReCAbsIIOIVr+cvdLrDZImZaWwE+
3ujHJZsBfu990umoG5hDrriXqgnemzf18evaKvKqwJEHXjFg06Oe1528wU0c
U7y2T8FklmPeE5Zg2X1ayyaG4HA6G8Jx3VUscc6qtk1vHVukJRv9vgVWx8WF
RaqDU3cK6+4ogz0nfF5ew4P1W3VFzq2sILOmbryhxoErXN8vNKuBhWw8CkXw
4HBdKw+/hWVkNQ2D0cJuMK2SpvJEJThLXn3ofBlYX07VxY0CZiLd4KzNBhdc
UcjkzlzGPNPMs2rPrmMcUsT+zHiwzQUpdoUwMImVMZ4qDeaa6hSj9C8hpwvw
6Hn6gq+Z675WuwhetomvSSKAk+0nWXfxYHfHgOz0I0vY520T37myDUz3hfjf
OlxgCfe2tb1s4P1eTpFfmMBPQhhPm60sInckvM/iHgAnfC385pIHfjjQ1TXg
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
              "]]}, "Charting`Private`Tag#4"], 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.285821, 0.56, 0.450773], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1: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

              "]]}, "Charting`Private`Tag#5"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{-2.1, 2.1}, {-1.925646309479319, 
            7.7942196640790025`}}, "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {False, False}, "LabelStyle" -> {FontFamily -> "Times"}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.285821, 0.56, 0.450773], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.645957, 0.253192, 0.685109], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.945109, 0.593901, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-2.1, 2.1}, {-1.925646309479319, 
           7.7942196640790025`}}, "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {False, False}, "LabelStyle" -> {FontFamily -> "Times"}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.285821, 0.56, 0.450773], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.645957, 0.253192, 0.685109], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.945109, 0.593901, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxF2fc/1f3/wPFDISQjlKhTGnKyK2XUOcnIuIRcRUZ2SDQko6x0LjuSkRVC
5qXMY75FJXtly95k73F8bt/b7Xu9nj89bve/4XHCxE7LnBaHw/2kweH+r+uZ
ql/r6nDlmybcg8Ki89jVI7tkY0fwa3K22upJcM/cOY+hoF3sP2e0LFp2dlGR
v5bwiR3LArcnK66ZeoH1TrBb5TmBB6J6uuntwCe7ykOyrMAW3MlqOmZUjPer
5Xn6mCUs5ZYfHc098HTQo7JUXfDqa7oENXkwziXy9ZwImHBz9qBL1w7yrZNy
CfReYMOgKE2iGNh6Zxnn2LuNvP/cAPduMzhTp1aIXAV2nSsvUK4Aq5Pz5VhK
wfijGfVNBduYUmLSrF30EjafE6/zLhsswerolRADfmat/vmzN3jz+BZDvSHY
vePTvckL4Exl8Sv7ureQu4uLjgi4gc0PH22xtQTP27v55GuCD+7Xeb5PDSz5
Ucz8riJYV5rxVgYJ/KJ5kESV3sImJxlvHA5bwSp23/IliIIZROTXFU6Bj43v
u9+2uol8Ia6+zawazP+s6q939mB2la/fK/Fg7wtlHnorG8g4fPGVpRqw7LtC
XiwP/JyRsuEbB+aUL5iYDwVnu+Z33PYD0/BJNjKSwRqFeT9K3MEfbl8ss3MB
zy7l5vE7bGC0Ls4WR8ZXsQMp+2jVy9aRRfX11Z3owYa3Gp3bcOBAFblP4ltr
yKXX8loDVsAzl8/ipubWsBLmdeaErVVMReCAbsIIOIVr+cvdLrDZImZaWwE+
3ujHJZsBfu990umoG5hDrriXqgnemzf18evaKvKqwJEHXjFg06Oe1528wU0c
U7y2T8FklmPeE5Zg2X1ayyaG4HA6G8Jx3VUscc6qtk1vHVukJRv9vgVWx8WF
RaqDU3cK6+4ogz0nfF5ew4P1W3VFzq2sILOmbryhxoErXN8vNKuBhWw8CkXw
4HBdKw+/hWVkNQ2D0cJuMK2SpvJEJThLXn3ofBlYX07VxY0CZiLd4KzNBhdc
UcjkzlzGPNPMs2rPrmMcUsT+zHiwzQUpdoUwMImVMZ4qDeaa6hSj9C8hpwvw
6Hn6gq+Z675WuwhetomvSSKAk+0nWXfxYHfHgOz0I0vY520T37myDUz3hfjf
OlxgCfe2tb1s4P1eTpFfmMBPQhhPm60sInckvM/iHgAnfC385pIHfjjQ1TXg
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
           "]]}, "Charting`Private`Tag#1"], {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.945109, 0.593901, 0.], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
           "]]}, "Charting`Private`Tag#3"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.645957, 0.253192, 0.685109], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxF2fc/1f3/wPFDISQjlKhTGnKyK2XUOcnIuIRcRUZ2SDQko6x0LjuSkRVC
5qXMY75FJXtly95k73F8bt/b7Xu9nj89bve/4XHCxE7LnBaHw/2kweH+r+uZ
ql/r6nDlmybcg8Ki89jVI7tkY0fwa3K22upJcM/cOY+hoF3sP2e0LFp2dlGR
v5bwiR3LArcnK66ZeoH1TrBb5TmBB6J6uuntwCe7ykOyrMAW3MlqOmZUjPer
5Xn6mCUs5ZYfHc098HTQo7JUXfDqa7oENXkwziXy9ZwImHBz9qBL1w7yrZNy
CfReYMOgKE2iGNh6Zxnn2LuNvP/cAPduMzhTp1aIXAV2nSsvUK4Aq5Pz5VhK
wfijGfVNBduYUmLSrF30EjafE6/zLhsswerolRADfmat/vmzN3jz+BZDvSHY
vePTvckL4Exl8Sv7ureQu4uLjgi4gc0PH22xtQTP27v55GuCD+7Xeb5PDSz5
Ucz8riJYV5rxVgYJ/KJ5kESV3sImJxlvHA5bwSp23/IliIIZROTXFU6Bj43v
u9+2uol8Ia6+zawazP+s6q939mB2la/fK/Fg7wtlHnorG8g4fPGVpRqw7LtC
XiwP/JyRsuEbB+aUL5iYDwVnu+Z33PYD0/BJNjKSwRqFeT9K3MEfbl8ss3MB
zy7l5vE7bGC0Ls4WR8ZXsQMp+2jVy9aRRfX11Z3owYa3Gp3bcOBAFblP4ltr
yKXX8loDVsAzl8/ipubWsBLmdeaErVVMReCAbsIIOIVr+cvdLrDZImZaWwE+
3ujHJZsBfu990umoG5hDrriXqgnemzf18evaKvKqwJEHXjFg06Oe1528wU0c
U7y2T8FklmPeE5Zg2X1ayyaG4HA6G8Jx3VUscc6qtk1vHVukJRv9vgVWx8WF
RaqDU3cK6+4ogz0nfF5ew4P1W3VFzq2sILOmbryhxoErXN8vNKuBhWw8CkXw
4HBdKw+/hWVkNQ2D0cJuMK2SpvJEJThLXn3ofBlYX07VxY0CZiLd4KzNBhdc
UcjkzlzGPNPMs2rPrmMcUsT+zHiwzQUpdoUwMImVMZ4qDeaa6hSj9C8hpwvw
6Hn6gq+Z675WuwhetomvSSKAk+0nWXfxYHfHgOz0I0vY520T37myDUz3hfjf
OlxgCfe2tb1s4P1eTpFfmMBPQhhPm60sInckvM/iHgAnfC385pIHfjjQ1TXg
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
           "]]}, "Charting`Private`Tag#4"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.285821, 0.56, 0.450773], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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

           "]]}, "Charting`Private`Tag#5"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{-2.1, 2.1}, {-1.925646309479319, 
         7.7942196640790025`}}, "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {False, False}, "LabelStyle" -> {FontFamily -> "Times"}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           RGBColor[0.285821, 0.56, 0.450773], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Directive[
           Opacity[1.], 
           RGBColor[0.645957, 0.253192, 0.685109], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Directive[
           Opacity[1.], 
           RGBColor[0.945109, 0.593901, 0.], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Directive[
           Opacity[1.], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.9, 0.36, 0.054], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.365248, 0.427802, 0.758297], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.945109, 0.593901, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.645957, 0.253192, 0.685109], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.285821, 0.56, 0.450773], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.7, 0.336, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.491486, 0.345109, 0.8], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.71788, 0.568653, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.70743, 0.224, 0.542415], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.287228, 0.490217, 0.664674], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
       
       CapForm["Butt"], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.1, 2.1}, {-2., 16.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9033469425241213`*^9, 3.903346978099504*^9}, 
   3.903347061512042*^9, 3.903687644144008*^9, {3.903687685912057*^9, 
   3.903687694008032*^9}, 3.90368835521471*^9, 3.903688425742235*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"9f827e4c-0cef-426a-a2ed-77f97d1ce96e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nn", "[", "x", "]"}], ",", "model2"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "4.1"}], ",", " ", "4.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.903346992563818*^9, 3.903346995604782*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"36475409-cafd-4792-bc77-634f885c32be"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
         CapForm["Butt"], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.365248, 0.427802, 0.758297], AbsoluteThickness[1.6], 
         Opacity[1.], CapForm["Butt"], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-4.1, 4.1}, {-1.7711978864067566`, 
           24.100922496087584`}}, "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {False, False}, "LabelStyle" -> {FontFamily -> "Times"}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{-4.1, 4.1}, {-1.7711978864067566`, 
          24.100922496087584`}}, "Frame" -> {{True, True}, {True, True}}, 
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {False, False}, "LabelStyle" -> {FontFamily -> "Times"}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwtWHk4VO37nyQky4ik7ExespSlyDYnRbKUQkUpW0giQqLXlkqyRZs1FVK9
lQpF5R5Eki2iyDoY2wwz9pkz+D3f6/r9da7Pde77fs7zufej6B5w9CwPgUBw
WEMg/O/5zUv9pJcXkdK8Viha35qACTyt3dTuQaSkt78rq9lPwKz6z7SS3YiU
o/uSYg+bErDG43fNt5wiUry4t6a9tAlYm+XyjsYjRIrp33mBu5sJWN/2Fl4d
EyKFV1tUruXbKnluKuj1sjiRcoC6tDS4tELeOxW8dvs1UcqdkMqhLc7L5Cr7
KLUmWRFKmGCP4dY2NrmCdeKvXKsQxYbGnn0QtUDOUSzT4cZvoHS1hG6P0J8l
295fdZdXEaQoPO/CGvdPk0P3ScmzugUo1p9+TM/HjpH9dsmWCATzU0Sk3kXv
URgk25YXTL0U56Oolm9QyXZtJxeGLJcsN/BSFA4OOeRZl5CbQvc63PNaSymS
SqeHeNWCX7FD1N8tPBQKj9qg/bMuWIiYPPyqnUDBRnXz75kMQ4ZU78ytoRWo
iLiVecWBDgMvbpIMulbghb5/4/MgOqiY6ByjNa8ASZhn5U8qHd653Sw3q1gB
rv5S6a4mOjS+0I7GU1fgBqW/edycAQSTG8IXTFegRzri4Hb9KfBx26Fql7EM
rVxdjctCTHg92+W0krwMRgTF89HSTJi/Hnf7v7hlcGm1cYjfzoTYF11TAheX
geKRhd+3ZEL27LXSKotlKOuMyn4Rx4TW63/MdOe4IFqR//M5lwkGL2JcJA9z
IeqbixqdyoKC3NkvtH1cOMo9myfGYsHG9LNyHwy4oJavu1dvlQX0iIP9x5W4
cNGreTVAegYe2Yq5ZczjMCkdJ/PVfgb4WHmeMtk4fIzaw75eOQO/9CnnlcY5
kB1dy5uVOAt7NXQaZ3o54P8y5PapjFl4rZCvUdPGAen1ip+kCmchfn08w+Mz
B87l3KffgFkw+ns4oCCFA5sXQu7pzMzCk8j+INXdHNBZc83+67E5CKxduaJ1
jQ1Xq/m0szbPg39ntr5uGBtcB4e+dCvNg++o4bz+BTYYvWfkSmrNg/v6yxf3
HmfD2yexfJH75+Go7bSXgzobVpl9ZmKB86DX0W8f3r4E+w0zhU5+nYelYYpm
nfISSBn3nLrgsgBRvNcGXb4ugIBduv3UlUUwTYkSV6hYgIEl7WPUmEVY2XLV
nPpmAUq+VXe23FqEyB0hz72yFmDli39RVgbCzt6BAUEL0Ggz5zbzEeFi6zUx
CgvgnnihI20B4VMSivlX50GipUb11IUliCwpcJ3Qm4PP7pH7P1mwwfPxuapm
tTkoe/R1c5otG6yTNZXey81BbLXO2BkHNkj5lA5FCMyBYZ2GY58buqd0rZdw
zyxE+sn1e15lw3DssN/Oa7NwdNVb6FoZ0j+ifCX05wzMZalQrm1DvJqOdjnX
zcBKmvbCsjoHpNRfGpI/zcDMpvijvjocGObV5fIXzACv0702STIHIj+aRWWE
IT+372RWHufAO3n365/lkb3dc+FTNznwUEiFlicxA7kOW3X8kjkQxR63uL5+
BvZrT4h03+WATXugwKFZFnwVDhm69pgDIzdibvfXseA/trPihgp0/lTeHR5/
FgTvWrj7a5QD1Q41Xvke6L0/U2OQzgG/TyNGFk4sENpKutfL4kBV/Hbarf0s
oOZFvSzAOeCrXGIoJs2CQv/8jAARHCQSOkXfE1mQ2TbKv7QRh0rm0rADHwts
Yv+TvrgZh42VJikPWSiPjmi5qCvg8OnEtyH5eiakufMd/LkTBy8Y/1j1hQmE
/FO3m/VwIKoIJXu8Z8LV3xUz5QY4eM7aGTzLZcK7A4wdThgOQsndiVohTHCN
niyvOIRD2RzXrdWXCRQ5lzDSURxcT8rrB7kyYWX6e3+8Iw6lqp6DpdZMcI9t
uiR3CofTNYxdJkpM6Mn3+enig4PAduKG/s1M6BYfNjA6j8O7VJ2BaGEmNMzt
2rrOHweRz1MSt1jTYCPEmXW+hIP7LV1o7JmG1th2SVoIOv9Y2Dli/TQILTnr
uoThcIa1pvJB7jSsLALPhn9xKKm08Pl7axputAhvMItC5yXe3igfMg3Yqry+
RwwOxSqbvAutp2GGEFTgeR0H3jknsYndyF5d0ed9N3Fwqsr9pKk0DVOfJxuF
buHAc0qVWLo0Bb6FpZqnEnE4pnahYmloCirPRqgOJuHwYuGtp3HLFDTeL7E4
nILDSs2CSHTFFHylM3UKU3Gwv2NUXlMwBeEleWa0OzgUnY724L8zBQZ3reaF
03HgqtcKW1+dAit4kyd3Fwc79vqPyd5TMJC6oqh9D4f8ukPubUenIJsTxtK4
j8NSerqQpOkU6H13KSc+wMHW7U+Zk9oUhC17jBY/xOGJlqxbjsQUiKg/fF+c
icMC7rZhcJUBGg09NvdRXbP6XlhKmmRAd2ZDvHsuDrn3J8/4dDLg17k8MYk8
HA5oh5RM/8cAm+zhkn+e4jBWbfn58n0GnBYJflWQj0OCg8zX1SgGGFp/s+At
xEGdNv3j5jkGPJSXVTd7hkPj5Zp2UXsGyGw7ts61CIcL6x/8fWDMgISxg44u
z5F/s3yH5FXQec/PmO95gcMbDdPJZ6IM8Eo5TJhD2K5SbHYHmw5tQW4nk17i
wDo8wvlApYMV/7Y16/7DIW3wIw/WSIfKxDUyzgjrXUoUrC+lA8HOe00Swh28
rhvtHtGhs1dTOwfh0Pu6W//E08F/fNgxAWEpVX4lV9TXElc9pu0RLi/vVhs7
ifreJot+BYSdrV9rXzSnw1XN8I41COM9MXuWtOjQbFEXuYy+J9vfcW+0FB0u
+l62aEPYlKB2UICHDsnWsr+jEO6/w7VLnZyEqdCU4nUIRyu3npDqmIRkelOb
B7qfUulT17zKSdi9p/hLBuKjxuKyj2rRJHRm52QVIr48/1hdLL6DsMmhBwmI
z3W+cmEGEZPg1XLkpDniuxBnRVE8J+HGkaLRTuSPA0m1Ny0PTcJEairN5H/+
kstIadWfBEJJdWz4YxxuFfs9OKE4CSua3sZJj3DYboY9GhBE5xfwpgfnIP+c
HX3N7J2AF6yDfhQUPyKLFWVh3yZgY3hMBgnFW3F8ciXh7QTcvbR21BvF68zL
Xc3EuAmQEWYdZ6L4TzdZ3/nwwgRwsx6kshKQP1p6ehWOT4BWKLvqL8qn0Jlr
jJ3bJ8BiMnK5AuXf5rjj8x/FJ8CyOZXpFYn67Cb1ZWx5HJz9f64OhyO+DdqE
jrSOQ+OfjgPHUP5nNxRIdJWPg839VEfLAMT3qSsybk/HIa33o9oGVD+ioxQ0
AkPH4d00uYXgjoOi2Jwu+8w4SPyyzdNxwaH6yTejmIPjcFX1w6DOCcRnnb/1
HZlx0PEX2vDIFvF53Mx+C984NK+LClpviYPl+KaTj6fHoPJ9+3fMDMW70Bff
t9Vj0BAWJiO+G8V7bmrQnv/G4HOPwYXXO1C87/AMr7o3BpjJ9+MSaog/+w0J
P33GQKJkpgWTRvE93HfH6egY8Hn6CQhIoPgOfZcxaDQGefskuh8IIT75bzw+
t20MbtAbppm8iM8Mp+cskTHwU2+ZFVvmwFHP6+epS6PgG2CxzWqBAxt3vNVs
p47CmINUWi2TA2lfBd6VlI3C1WjffLcRhKc/VFw+PQqHimlvdRs5kGou2bj8
igbG7J+ux+5xwI5oljz1gAaYlv5sfhIHiH8v2PXH0GAhzDGo7DqSv1j7i+JI
A8PDzgNyIUjeiHX/LZkGEjHfDgX7IXk+WacnajQIi1dWS/DgQGurpXS6OA02
JoXlBTtzICUruPfa8gj0KXYspx/hwCGvvEfBoyMgKYe51lhyQES70e3szxEo
CQl9O7+PA834ovKxTyMQ1DYnHYb6cXKdMs2iYASoL4N/1BkizGqbWm87ArEB
tbsZqL8f+rxSzNk9Al4mHq9uKiB7N7dfmlQYAcO0tKxkaWTvyLFdPYIjIPgg
juQhyYEkmdjFxrlhiBw4sz9aDPXr0VflX/qGweLCskCGMAeE3nVFvK4fhs5+
Rl+AIAcSD2gTUrOH0Zywu1SGF8lvdKmOvjEMho0VlkUEJN8bHxd4cRgUZK1s
1iyzITFoQMB+/zCYzvsckplng42J0I99WsMw0yFyuYfJBiEBgyQ9qWGIo5mn
+NDZcDsnRUySPgQVzH8/UqlssPL51M7XOQRyoz1NZ/vYIKg7em8RhiBhu2gK
vYsNDcsbT4w9HwKeI+4Tph1sSKg33dqVPgR9gW3pa34i/XTfnu//DgGvzqa9
wS1I//T93ArvITCMWzdDQLhBtdr15ZEhWBj4stm3GenPMpSyjYbgoX1adEYT
0q/cMpK4bQh8rrraLjYi/Vvmz/4VHYKVkkUVcSTfYB94zp9NBbs7gZfWIXu3
5HLUzwxRIZq3lr8JYcvxesbhJip8ropJPtfKBoGSuTfYBypMXbWfPtXJhvpI
hSDtx1RokP97/Bu6f/xBGz2l21Sod1y9dArx28q/qz8plAo26THWj5D/NtfJ
JrDdqODJPBlzGc1rhWbT/a0GVDhhfJmfdpoDDMKfBGMSFYJP51ftR/GpB5Rd
RaJUYE6vHfe+zYEao7TbUbRByAv8cdS/jAOCnPDdkz8HodVN996RHyifPnoM
HvsyCDfeOrt+7+dARqhNYnXRIKjeZPd1zHJgQG+XvtbdQaDde/QplB8H1VlZ
akbUILSVTdy2kcIh4C1f0rrzgxCulGNiqIr6veYfas/eQaiIyd1laIGDBZ2S
ZKk5CD0z4VtVHHBIevHcoERqEEKZikeyPXCQ+Sci+fb0AHxmMQROoHroMeKx
Z7F7AHz/ie1KQPPDi6c2w+51A3Aq4NFOa1SfZ9x2pTS/HQA7g8Nh9qh/7FGQ
MzTMGYBsxdXhghJU//r4RgriB4Cek3bjTiUO9dnTKWLBAxCuoNMrWY/mlS1V
I2NWyF4E8WzyH9Tvfz9Pddg9AFz+pz3f+3AYuZdmRFEcAMHscf29NNQ/SPVK
O1j9UHdLNuEm2osuP84I46vvhz/UsnPXuTjwyZ1v7s3thz69JJVNa7lwN9OY
VBrSD35OY/d2r+eC8maR8ESbfnDIMRCeEOHCu/T+Fg/lfvj6Xlh/hwQXMOLb
bUacPlCpkTfl28KF0+sdfo4/64PUV+kWT9Bexri+7Z+qyD74Re47WfgPF67y
LF596NgHkuXj88rqXBCMqm8L0OiDzFDGWRktLmTgGaoH1vZBkEFsTOpOLqiG
nY+U6+6F+vHw0gYdLppXjX/NF/dCYuk1LSs9LpgHimxvutkLw08leJ9pc+EX
oz8q/3QvUBf/7S1X5YKH79uOiF294Nqsxashz4UZWqy6vVAvLBECbJfR90d7
OMRsH+qBgUT9YzyCaA8d2PZ7TUUPlOnVEjxXEL+nFjW6UnuANr7gzzeDg0ZX
fWyxdw9IpnCvjA6h+avtvNaZTT1grCNGMq/FoapssWdLYzd8/rxZ+xnqTxOf
aIwrj7phqYOr5mKN5vmqjpWuoG6g//klF2WC5uEf7xUyt3RDtspxmRF5NL8O
BHhu9e6CQ5EfTvDTOKAxcjok3LAL4vyE0kY6OeA4YXujW7gLzcvP5XZ/Q/k0
p16UWfIHtFQyeRQKOWC5fmxyK88fEDD3t5J04cBFkd/c8I7faH//qLrTCuWH
eJ3w36LfIFFT5FSB9tYJ2fwdWYd/g9TuwBIlEVQvdVwvSed0gpnz6WdnPrCh
5eQfjrRBB8ilWK12sJegfE2QtrFlCzRgWaUCexZAtXvfwuhcM3Q3Nz1zU1mA
h+82fUp/jHBS9J4H4gsQ6lG+f5LTBEJHnYyzGPOgU0s4kfmqEappd/cK5c3D
i/iUyKWNDaBpUVb2d2UOskRf/Sjp/QpniXZ5LemzIDgWmeqa8BWsxVtv/4iY
hXCKnaOQ/ldQnvY/+MVjFk4EzvV5pNbAB2rFdVfdWZBoN5rZuK8aWi0Sr79B
e6SU5j1tqh3Ape7BC0cEZ4Bt2PrDmVYCMWaGd/hsmKBv93ProZn35OS1l15F
pQ5BQCpnKZnYSnY9U7jH1KwGBNd/E5L07iYzNOOceebbyLmvHmp8aKKSzRyt
jMoSx8kiKfC5xHaMXA30xKbiOXJW8nPZJX8GOT7pv9PmrlzyFZNA4bQoFllY
YvFdRDMP9t4sYM5Kao78ApetixPnx7aQvFLpTxfI3x2CNo+obMCGI+LCebzZ
ZJPAhvg9waLYF3de208cnLxY8UE36rUYxoWXF8ZqV8i9AR2B0hRxjHTM2ain
mIA9UX7zDz13E+ZqeDLTYGkNVldwwGjaaTPW0hWgcPjkWmx3Pzaqr7EFq8VK
t34o5MXS1ubqirdvxabcRYy7hPkwU/fiA6upMpjG7NCHAH9+jOCbfnYvJoex
rCaeHf8ggK0tkjKkN8tj4y68wJYWxK72Hco5X6GA+RgctmL4bMD2P6p92Bmu
iC1HS+50fCOEaRwwU4zSVcJq41jGl8VEsLYHdjo5i0qYhN3yl4mTopjkwtbm
46+UMcGyPvPXbqJY/Rdvo9vFyhhBhtIU6C2KDb/0a698r4zRR2N7l4JEMQEf
sRpShTJWEyWwzJcgijXuCWycqlPGgt6IGyt/FMUOScrIXBlQxnz4N/VqChKx
E+kytT7iJMyjYt1jUWEiFso/YH5fkoSdvrDgyRIlYhqOk1k1W0iYQ/tveskm
IuYgK+wiq0DCsEeZXCNFIjY1KzjXrEHCpPQVZKwMiJhqZoKemgUJE58gDqgb
EbHXB1Zz7Q+SMJGcNfnCpkTMtWhtyb82JIx37ZD6z31EbGfqV4G2oySM2Vxg
dOIwETPIWMy6fIaETcbcX91zlIgFi78sznMnYTS9mzXSjkTshWaa8/ezJKwn
08e635mIhana+G/1I2G/bZ1Eq1yIWBHV65VZAAlrI1i1P3ElYv6h36t8g0hY
43vDB3EeRKxh6NLLtBAS9v//S7EZk+qoijAS9n/gNd49
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.365248, 0.427802, 0.758297], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwtmHk8Vd33x00hGa4xQ5lSj4iKuDLdnUrGkilUHtMjRaZCqicphYzNpZKK
HhGZQqh1hVKuIRoQkdnFdQeuOxz6ne/r9fvrvN6vvc9nr7P3Wut8ztEKiHD9
R0hAQEBKUEDgf9ePwfqHg4MJZD+NT3OKkhpI/FmLYk8ggbwyPxZshakjh6G/
u0j+BHKVYqp+yKw6ohy6tVflCIHs5Hfi7keKOuq2W95KOUgg2zKzuSUZ6uiX
XqeIkRWB7LU6fFKZoI4WaNGly/IEMkc45PixtevRLtppYb3LMmQH/cOik1vV
UKNbwub29dJk6cyAQF3LtaiO4fVTvUuS7B6VZRPcJI8eaVUbYSlryCNzVe+T
sgnI+c6fAI1NEmRt6qj8aIEEit2trMHoFyc/Xd/aXCG2CoWZrK8SPy1GXjCQ
bkjrXiE5vymgFcuLkim9haJH3y6QnscsVy1/FiFzQiUJ5KNTpPbYXe63g4XJ
eVHdvQfyO0hhZe4JP1WEyMjptEv5p1Zgn5s5UNIjQL7407ho1V8jYJZyvXRj
hwC59kBcoPehEYi/RZTKbRUgn+lbW5eZPALYy8ufM98KkEMMIkm5kyMg+Ett
b+R/OP/4t8jl+ShIIidz43MC5FZjKSFh9XHQEinReaONsxRW/Yg9CfeVB5mp
oysgsE/VrNhpDoaLknXM+lbgYenTiyXRc7DJyshzomMF/G7Wut++NwcV/slv
bOpWYM/X9MeKY3NAKdp+kZ+9AnnGP6A3ngYCVlelTlqvwPkQlt7xvHkI8d+q
63J/GS58y/fom6WDWVHiUaUDGJz5ZKp3eoUJBbmstxO7McgpZWfHybBA7uY/
6jVmGJRqc8NCNVkwe85+6JA2BkU1LUk6Nix47Czrf3+RD+xb/xoPJLFAlJEX
tO4hH7rWhWT4iy3AVyI5VHuaB3f8dY2bBRZh1xYjCnOQBxM65jbfZRahVDN/
S1M3D7bEZX7oVV+ElNUpc4ENPEhqXTF8ZbkIFj8PRBRk8eCq+sqFJ3GL8PTC
ULSuKQ+67sapPaQuQlTLSrzhZS5Eg4ftdDMbwr8/JBqf4UJHkm0J5QsbTkya
LxJPckGu+T+VJ7/YELA6LnLXIS6Yl9ULreewwdV5PthdnwvWpM1K/npLsOPb
kNvZHg7QiWo2qulLwBkjG3zYwAGBWz6lLns4sLDoO/NZmQPdt32a3A/g80SX
CzulOHBJtm3Q3ocD07o7dfqWluBO7LK2WCQH+sPKVWfbliBg6T9aew4HGhae
iMmdXoLCHvm09DkOJIhc/n0Uj5vKtu1tT8bjyEqQ16xjg3bKTXePbC6sqJzf
O/KKDfaR9Z8673HhwtaYF8EP2BCz91Huoxc4+xyLiohmww7hF8yHn3EucxRM
1GSDLWV4t54ED6wt7Ix3K7GhjDLi/FuWByste/5ZJckGCR2yS5oKDy78tPqU
urQI939I7qrVxVl02/UbHYug7kpri7HF+YiCVv75RXh368u1hARcb5LgFhy9
CN4iqdrBV3G9KKkruiGLMPZZrZKUgc9PFp1+6bYIP470vGvLwbmCU/ZabxE2
3Lp2cd9rnMUH0cfeBXBxUSlpn8S5qsCPumMBsJWaIoXdfAh6cryxY/MC/H0O
Ftvs+OCYaaBdqb4AD23C5k7t54NyyOvRc+IL8Lj89chtbz6Uq7UESw2woEdW
fFwrgg9jl8bCtl1mwa/+Ijufu3z4HFHYrnCGBR0iYr7/y8vyI2GG3DAW3IsX
1+zM48MF04X5Rk8WVO/mvxAtwvWpwqfc9Fig6pP37W09vv7BDfGxX5iQkTWV
5jTAByPryT6fD0xYc+x+qMowPl+/2JxUz4Tg1Pml76P4+iLGmFgBEx6Upinp
zOD6tTYJ988wwezc5VBRLv58BaLD/55kwrkXvmVeGK5/4zMKCGDCfe2hJw/+
4HphrkL6TkzwXey8xlqFQYVGwJUGDSYQ1kednpHF4J7kpok8BSaoPo1Vb1LA
IIE7bXtlNRM/B62YtLUYOPVEie9nMcCFGaxLW4fB+NXEtKEPDNCIKX/O34QB
5dTe2aZ6BjBcfr/22ozr+612LixjQE5cddRzfQwumF+XjsphwLkCl3n5bRgo
0/KuC4UzwP/yHiEi3gfeuzcF5wcyYD6f3sbdiUFY/biFrTcDyiTzLF5ZYNCY
ojeRuocB70rFpZjW+Pi8U72+OQOkpxvDExAGSp4R2e1bGZBx/ELsn10YnNhQ
ZS6rxgB1K8EzP/ZgoHDtu0wlgQEG2R+jttpi8I7OGXMXZUDU5uuyZ/dhIPfO
Kusegw6Jhoa7J+0xaNDxCzKfpINHjuC31Y4YBKdd2jkwgLNTr6SGEwb1Xh9H
NVrpMH0pK1xrPz4O07WNb+lwXizynjTe9wibJDMDK+lg3e0WQsO5Lt0wcNUL
OhiPmv8iu2AQxHIx+y8X1zPfyLtyEANpn1NS9rfoUPhDrsHKFYNa8u0Raiod
DOuFdaZwDvirtiY9gQ6/x5a2X3HDQDKzP90whg7N7vPjCu4YVC9g/l0n6PBT
gkq6i7PfYQ1itB8dNMSmSJIeGEi83yWp4EmHG/bT46dwfq0b9Pu1I96nu+e2
d+Dsl3W1+tAuOsg8Wdyg5onPZxemcU3pIF8t0OCDc9WRNr8HW+jgKCvDS8fZ
t2nOxEqbDuUVmr/KcRbXI6wZWksH2xyTkE84V2QbDV+UwvVane/14Hxkyf21
tjAdVlkeD+/CWbqBppDKmAcDdjIVcA5INQbKwDwksV9IPsW52vPMcULrPEhb
dX6N/V88Om/l3SvnofnTko01zn8zBN/dzZ2HkocbDnHw+Kve2Yb8TJ2Hlteu
sgU4i6enyWnE4PcrXonag/MR766GAL95SKmri/uO70/ZJsVjzx3nYdtz1obD
OIsseMtSTedBondrbDe+v96NufUG2vOg4BIRbomz0BFdwmsODWrlOC5T+Hl5
bj5ZxxmlgfvRXRZ6OBexy4MsO2mgScto88XP1+26xZumAhrYjmz79RjPj0Lf
i4Fi12mQtzfZ76UzBph+i5TjeRoYzg+nFOP5lP9hf0C3Kw2+KuS2JTpgwLl5
U1LJmgasbMEJLzwfnf17q70308DaLeS5th0GbL7/mt9/5iCkiKSSuReDfdtj
quZfzoHQM8WPzSQMpt7bNcTdmYNL9tlvpPF6uea+rvlPwhx8HxxesbPE6zWu
qUfGbQ6oncKXMvH6c3kny9rKnYXPfS4njuL1yTgwzqsZmYVPtLOszYYY3Phd
K4Qos3CHcbZzAq/nbyJ+ci6PZyGfjCVs/wsDH8fS7ZF7Z+F0kliTxHoM+AOJ
OzmGs8AU+z3irYrBw3CPXReVZ8E8PtvjPt5Phq5jLtkzM0DaGGU8jfefoF6H
yLLrMyD8bOcXCt6fTv4zWUofpEKsyeStZ1Q+SC/VVZ/5SIWp2xojSxN8KEvJ
fCdQTgXDMYNLlnh/ZBabdBCSqKDjQKm785MPsczLc9v0qNBqQZDOauPDxQTN
LVGx0yBYXWWZVcgHLdkFY+7f0xDOcqyZesaH908/WiTaT0Ox+psko8d8WPUh
3PH6umm4Ya2ofPc2H65Jvj1R/n4K1ud/1cxP5MPN+94vGNJToCoaWdfuyQfX
oCuhI5xJ0B2Pb7Y9yAe5reUGPSOT8Oa4bkWZIx9uNItXVFVPQnTgKbNDCOf5
mro430nYotJIp+nyIXuvEmW5ZAJ6MywI9ks8cCHYZNLuToBDS5Z7F50HhJ8n
XYYSJ8Dmacp5OyoPsiNbvpI9JqDZKSRuDe57sh6cHry8PA7KQUPKA408yGR0
01Y7jwPzwUuJwhQe7G9YKeOZjsMnfcdUq0QeSCfrnZrRHAdd/8yZpngeZKy7
tERZGIO4BqHDz07wIH3fdoHsh2Pgb/Js/KUjD9IeZckqzY5CyLamF1T8/Z9i
77RDO20EdjomzBEucKFLzGQoI3YEiD/CDAJjuLD2w/prXP8RcCt5ZVsYxoXn
NvNDXWYjME40WbXmMBeaLG6kJUz8hrAPpAojIu5HDHpHBnb9hjWfXCkSuH+Z
0mnV3soYgvSgSIFf+zkQ9+T+GdHWIUA7xELTcL8kqh7aMZg7BHL7WaX65hzY
sFb6bLrTEMj4tb3fs5EDvqvdv0z/9wtOLp9V7eMtwde5oYR830GoX9+beu3Z
EjRWLw2oUPrh3kJqCGEG90n1E3Pxj/vhQl/kSSXcz8k1flvpi+6Hgp52TBL3
ewFtlZo5Kv1QJ0ata6tmg8hwRJDqsT7ghBdXZSWywW711IyqUC982umau12B
DZ2He3lqZt+ggbzVYdBgEd4IRm+3tOuEqZt6Il+NWKDbv5s9udAB2Td+aKpt
wH1DhWL9zScd4H08t8ldngWxgW/2zPDaYf/j+AePWUwwahHwyimhQNOW4Fs3
K5lQlJJ1gSP3GQbb1xYvbMN9gUxJW9VgM3TrDoY+0GIA17yrzWeiCv69PBzD
rsL9e5WJLsemCjSKZZjJWXOQZ/gg6fbjSgh8+eHqn+NzYKsdbNXlVQFfLSjc
PHX8e0CeczTtzivwyDQRLbk6Cz5lB3T8/QqgWzCxdvrgDCCvQY07ib7wRpt/
afHrFBBdvqjuZ1aSLJ3Ov/LMGIWIbB4nk9BFIsacKi358hkkVn+UVDrWT7K2
nS3SFqaQckvubalpHyFdpU7lUuonSdJZ0FDlPEVa3pt/XVhskfQg88V6Tvgc
SblFK045dIUUbxUldSOBQbqnWJzn1iSCKm0iFhyUF0gZ1QsX0v0lkIpOcPbs
MzYplW+gCxsJaOxc0lmhY1yScmB//bHb8uhtgIhzPY9PUhwNkfsqsBZ3DMUn
p1pWSM12AUrxDFWk4+ljMVAmgFz7Q/7y+KGO/MwP55hxBFG3dGGHXIQW6uyL
0DxwWBh59vXFJ9dvQC3otWrNcxF0+m3qiAe2EdECpC37pERRalezx7k0XbSF
NVoTES6GuuLZQZoG+ojhQP3vUI048mp266xuMEDTR0WAqyaBaH/syx66bEMh
Zgcc5kLWoBd+hs921G5HyxeVtnm8kkSGjBNHWzcao5YkhmWcrDQ6O+QzIda4
Aym4LL+lHpZB4p6HYhP2myKJ6l97S/1lkKQW9WC6hykSWEdujzomg85W3zTJ
OWKKZicvDXKiZdBdpK/45oQpakoQXxa9JoO6v4SaCCebouhX8pYbamWQx5QR
rxVMUYiY4qCBBAEljvfeUjUiosC6VU9kpAhoeHnPKbudROR7kh3EkCGg4uGP
3nGIiNx7fsxWKRLQxVVypN79RIQe52AWWgS0hVJz4nkoESkTNdc5mBFQtrO9
7ekCIpKnEob1LQjooaT284qXRCT9SDBfypqAFO/ISjMriUhEeFT/y24CshU3
YZ96T0T0jgILrwMEVHQ846+kISKaSbzzZ6crAUmfX9f6eYKIJnYkN6l5ENAv
r/eRcjQiGsgJcRzyIaCGKNf+fIyIfjh7yzQeJSBKieWDeWEz1C3g0PPUj4D2
VVkFWawxQ5RK87tJgQSkd8XDJEXODP3//wt0VjNJ+ruKGfo/u8Mu5g==
          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{-4.1, 4.1}, {-1.7711978864067566`, 
        24.100922496087584`}}, "Frame" -> {{True, True}, {True, True}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {False, False}, "LabelStyle" -> {FontFamily -> "Times"}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.365248, 0.427802, 0.758297], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          Opacity[1.], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4.1, 4.1}, {-1.7711978864067566`, 24.100922496087584`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.903346997654812*^9, 3.90368764564206*^9, 
  3.903688356544511*^9, 3.903688427297097*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"654498e2-e4d7-48b9-80ca-90fb7f1b1c77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testSet", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", "->", 
       RowBox[{"x", "^", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "5", ",", "0.2"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9036881244219847`*^9, 3.903688157112949*^9}, {
  3.903688212731299*^9, 3.903688216425597*^9}, {3.9036884481374288`*^9, 
  3.903688449032571*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"2fb4bbff-11de-49bb-99ad-cada0168667f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "10.`"}], "\[Rule]", "100.`"}], ",", 
   RowBox[{
    RowBox[{"-", "9.8`"}], "\[Rule]", "96.04000000000002`"}], ",", 
   RowBox[{
    RowBox[{"-", "9.6`"}], "\[Rule]", "92.16`"}], ",", 
   RowBox[{
    RowBox[{"-", "9.4`"}], "\[Rule]", "88.36000000000001`"}], ",", 
   RowBox[{
    RowBox[{"-", "9.2`"}], "\[Rule]", "84.63999999999999`"}], ",", 
   RowBox[{
    RowBox[{"-", "9.`"}], "\[Rule]", "81.`"}], ",", 
   RowBox[{
    RowBox[{"-", "8.8`"}], "\[Rule]", "77.44000000000001`"}], ",", 
   RowBox[{
    RowBox[{"-", "8.6`"}], "\[Rule]", "73.96`"}], ",", 
   RowBox[{
    RowBox[{"-", "8.4`"}], "\[Rule]", "70.56`"}], ",", 
   RowBox[{
    RowBox[{"-", "8.2`"}], "\[Rule]", "67.24`"}], ",", 
   RowBox[{
    RowBox[{"-", "8.`"}], "\[Rule]", "64.`"}], ",", 
   RowBox[{
    RowBox[{"-", "7.8`"}], "\[Rule]", "60.839999999999996`"}], ",", 
   RowBox[{
    RowBox[{"-", "7.6`"}], "\[Rule]", "57.76`"}], ",", 
   RowBox[{
    RowBox[{"-", "7.4`"}], "\[Rule]", "54.760000000000005`"}], ",", 
   RowBox[{
    RowBox[{"-", "7.199999999999999`"}], "\[Rule]", "51.83999999999999`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "7.`"}], "\[Rule]", "49.`"}], ",", 
   RowBox[{
    RowBox[{"-", "6.8`"}], "\[Rule]", "46.239999999999995`"}], ",", 
   RowBox[{
    RowBox[{"-", "6.6`"}], "\[Rule]", "43.559999999999995`"}], ",", 
   RowBox[{
    RowBox[{"-", "6.4`"}], "\[Rule]", "40.96000000000001`"}], ",", 
   RowBox[{
    RowBox[{"-", "6.199999999999999`"}], "\[Rule]", "38.43999999999999`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "6.`"}], "\[Rule]", "36.`"}], ",", 
   RowBox[{
    RowBox[{"-", "5.8`"}], "\[Rule]", "33.64`"}], ",", 
   RowBox[{
    RowBox[{"-", "5.6`"}], "\[Rule]", "31.359999999999996`"}], ",", 
   RowBox[{
    RowBox[{"-", "5.3999999999999995`"}], "\[Rule]", "29.159999999999993`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "5.199999999999999`"}], "\[Rule]", "27.039999999999992`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "5.`"}], "\[Rule]", "25.`"}], ",", 
   RowBox[{
    RowBox[{"-", "4.8`"}], "\[Rule]", "23.04`"}], ",", 
   RowBox[{
    RowBox[{"-", "4.6`"}], "\[Rule]", "21.159999999999997`"}], ",", 
   RowBox[{
    RowBox[{"-", "4.3999999999999995`"}], "\[Rule]", "19.359999999999996`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "4.199999999999999`"}], "\[Rule]", "17.639999999999993`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "4.`"}], "\[Rule]", "16.`"}], ",", 
   RowBox[{
    RowBox[{"-", "3.8`"}], "\[Rule]", "14.44`"}], ",", 
   RowBox[{
    RowBox[{"-", "3.5999999999999996`"}], "\[Rule]", "12.959999999999997`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "3.3999999999999995`"}], "\[Rule]", "11.559999999999997`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "3.1999999999999993`"}], "\[Rule]", "10.239999999999995`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "3.`"}], "\[Rule]", "9.`"}], ",", 
   RowBox[{
    RowBox[{"-", "2.8`"}], "\[Rule]", "7.839999999999999`"}], ",", 
   RowBox[{
    RowBox[{"-", "2.5999999999999996`"}], "\[Rule]", "6.759999999999998`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "2.3999999999999995`"}], "\[Rule]", "5.759999999999997`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "2.1999999999999993`"}], "\[Rule]", "4.839999999999997`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "2.`"}], "\[Rule]", "4.`"}], ",", 
   RowBox[{
    RowBox[{"-", "1.799999999999999`"}], "\[Rule]", "3.239999999999996`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "1.5999999999999996`"}], "\[Rule]", "2.5599999999999987`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "1.4000000000000004`"}], "\[Rule]", "1.960000000000001`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "1.1999999999999993`"}], "\[Rule]", "1.4399999999999984`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "1.`"}], "\[Rule]", "1.`"}], ",", 
   RowBox[{
    RowBox[{"-", "0.7999999999999989`"}], "\[Rule]", "0.6399999999999983`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "0.5999999999999996`"}], "\[Rule]", "0.3599999999999996`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "0.3999999999999986`"}], "\[Rule]", "0.15999999999999887`"}],
    ",", 
   RowBox[{
    RowBox[{"-", "0.1999999999999993`"}], "\[Rule]", 
    "0.039999999999999716`"}], ",", 
   RowBox[{"0.`", "\[Rule]", "0.`"}], ",", 
   RowBox[{"0.20000000000000107`", "\[Rule]", "0.040000000000000424`"}], ",", 
   
   RowBox[{"0.40000000000000036`", "\[Rule]", "0.16000000000000028`"}], ",", 
   RowBox[{"0.6000000000000014`", "\[Rule]", "0.3600000000000017`"}], ",", 
   RowBox[{"0.8000000000000007`", "\[Rule]", "0.6400000000000011`"}], ",", 
   RowBox[{"1.`", "\[Rule]", "1.`"}], ",", 
   RowBox[{"1.200000000000001`", "\[Rule]", "1.4400000000000026`"}], ",", 
   RowBox[{"1.4000000000000004`", "\[Rule]", "1.960000000000001`"}], ",", 
   RowBox[{"1.6000000000000014`", "\[Rule]", "2.5600000000000045`"}], ",", 
   RowBox[{"1.8000000000000007`", "\[Rule]", "3.2400000000000024`"}], ",", 
   RowBox[{"2.`", "\[Rule]", "4.`"}], ",", 
   RowBox[{"2.200000000000001`", "\[Rule]", "4.840000000000004`"}], ",", 
   RowBox[{"2.4000000000000004`", "\[Rule]", "5.760000000000002`"}], ",", 
   RowBox[{"2.6000000000000014`", "\[Rule]", "6.760000000000008`"}], ",", 
   RowBox[{"2.8000000000000007`", "\[Rule]", "7.840000000000004`"}], ",", 
   RowBox[{"3.`", "\[Rule]", "9.`"}], ",", 
   RowBox[{"3.200000000000001`", "\[Rule]", "10.240000000000007`"}], ",", 
   RowBox[{"3.4000000000000004`", "\[Rule]", "11.560000000000002`"}], ",", 
   RowBox[{"3.6000000000000014`", "\[Rule]", "12.96000000000001`"}], ",", 
   RowBox[{"3.8000000000000007`", "\[Rule]", "14.440000000000005`"}], ",", 
   RowBox[{"4.`", "\[Rule]", "16.`"}], ",", 
   RowBox[{"4.200000000000001`", "\[Rule]", "17.640000000000008`"}], ",", 
   RowBox[{"4.4`", "\[Rule]", "19.360000000000003`"}], ",", 
   RowBox[{"4.600000000000001`", "\[Rule]", "21.160000000000014`"}], ",", 
   RowBox[{"4.800000000000001`", "\[Rule]", "23.040000000000006`"}], ",", 
   RowBox[{"5.`", "\[Rule]", "25.`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.903688152707066*^9, 3.903688157467842*^9}, 
   3.903688216779512*^9, 3.903688356690496*^9, {3.9036884274866037`*^9, 
   3.903688449379094*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"09383cd9-43b2-4e0e-b916-4e95ea9750d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"nn", ",", " ", "testSet"}], "]"}]], "Input",
 CellChangeTimes->{{3.903688172650378*^9, 3.903688184324697*^9}, 
   3.903688281007356*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"80d9ac47-90a8-46da-832e-d8093985660f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Predictor method"], 
                   TextCell["Predictor method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               InterpretationBox[Cell[
                "NeuralNetwork",ExpressionUUID->
                 "66d361f9-d22a-4bcb-a47e-d9df3dd59e2d"],
                TextCell["NeuralNetwork"]]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "76"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Standard deviation"], 
                   TextCell["Standard deviation"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"33.6220523401363848848`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "3.4923517422428016488`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "26.6373488556507815872`3.", "\", \"", 
                   "40.6067558246219846296`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 26.6373488556507815872`3.,
                    ", ", 40.6067558246219846296`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Standard deviation baseline"], 
                    TextCell["Standard deviation baseline"]], 
                    "\"Standard deviation of testset values\"", TooltipStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Standard deviation of testset values", 
                    "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"27.8845118300464420713`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "2.4085697376914616541`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "23.0673723546635187631`3.", "\", \"", 
                   "32.7016513054293653795`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 23.0673723546635187631`3.,
                    ", ", 32.7016513054293653795`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["R-squared"], 
                   TextCell["R-squared"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{
                   RowBox[{"-", "0.4538591974788250827`3."}], 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.3940217620974755253`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 TemplateBox[{"\"95% confidence interval: [\"", 
                   RowBox[{"-", "1.2419027216737761332`3."}], "\", \"", 
                   "0.3341843267161259678`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", -1.2419027216737761332`3.,
                    ", ", 0.3341843267161259678`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Mean cross entropy"], 
                   TextCell["Mean cross entropy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"703.3081996927933232655`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "145.1487380143194059201`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "413.0107236641545114253`3.", "\", \"", 
                   "993.6056757214321351057`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 
                   413.0107236641545114253`3., ", ", 
                   993.6056757214321351057`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"2.97`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"961.`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                 FractionBox["\"Examples\"", "\"Seconds\""]},
                "Quantity"]},
              {
               ItemBox[
                GraphicsBox[{{{}, {
                    TagBox[
                    {RGBColor[0.9, 0.36, 0.054], PointSize[
                    0.011000000000000001`], AbsoluteThickness[1.6], CapForm[
                    "Butt"], GeometricTransformationBox[InsetBox[
                    FormBox[
                    StyleBox[
                    GraphicsBox[
                    {RGBColor[0.34398, 0.49112, 0.89936], AbsoluteThickness[
                    1.], CircleBox[{0, 0}, Offset[{1.8, 1.8}, {0., 0.}]]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]]}],
                    TraditionalForm], {0., 0.}], CompressedData["
1:eJw9VH9Q02UcHkNiDg6RsTFiwAbIhsQP2/GjBnwfkZrEIpyEMkcFHifTMDm0
dQrVnZKdhtQCL5I4skHnMqVOZeddfpObed5RCgIj0qaxiAZ548eg4KS27971
vXv/+Hw/z+d5n8/zft5XUvWGutqfxWKp3MvPvdjuFTL06kD1UQlYzFeOoa5X
LuYLJLC4ZNoW9k4c1FvjqkxicK1fHMjl7kDHxcGK9jwxxjxhRBnSRl66rTPG
wo3ud8lexkxbdu/srRgvH0pxaGFNY/KjaFR40trtqD8d9m3Q+mjkeggb1Wjf
b9CfeFoE4wHPn234g59zqFMdBQZ+uwSu1RBZXt2TRF8JIq+IdledisT0NnNM
075iJEqa49kmIR4eDr+gfKiCfPKoQWiJwG+euLII2hgHu/OeAA4PfroQtv6e
+x/M8718726FX0rtoo3DhzvpRiihPfeCqlUUDqWH8OZzGN94t6I7lYcGD/3h
ApTW5ZhCqTD0eQqyt6AwU/fD8Ivrib58DAcfEzk1oVB7thsETh5R7KMHQ7CL
aYjCmYprp23zwZAyfuVCqMiLrOQFgcP4q4Bjac+kKH0t4XsGmSPNbz/ICST+
Z+Fq/VdmFAQQvzOwp68hLbPQn/DLMRqc8ld5kR/OMn5uwuVrydOVrauUly8d
bRH5ctWJZcrr11Mo35zoFOoXKa8/SYgrKf7cqJmjohk/pHCI/SQhuhnqLab/
BOyaiDeNsuyELw4bkpScK85Ryrt/LGqE359zdlyivP1E4ZNP09psj2/RgUwc
AY7hpy/79Da6nMHzUGOckE3z/qS9fKGYcHIujWfM0hOMnrVYVXAjWlku2rv/
GpQ1zLQL+pfoSqb+X6r4+oo13vEP7c/wL1GpiueD3q9bIXxOymJfXpegW6Ff
Z+rtVIPmZnbujz68lRr/XXG5YXGZVjN5C/Xed4bx8w8WSGykek3na15z+vSx
WB3fPHF8pGWINpN82dDgRwlf36GaSP2wZGDC1eugkgh/z92cptBTiyRvp37N
yDyyYzsLPn26hc4WbmcABES/dG7MZrjBha+/9L4bnJ+vr0MT6f/eVXOGpigM
s8Qf/u6CRll3OHz+fSh9JH32FwGp58FszUre/LcQwcT/wK17u+fZUeCR87nj
UuVEPRYRfCzEQRcW7s+S++s+3/36ujcna8V4h5z/wfmTzWFaCcRkPjT9U9TK
ljiiJwk1SxvHAhLjYSfzNVDaZUzlJMA3f/aguY+rpxLQQ+ZzrPZYodyygbwP
ckwp+WdSP0tECpnvyZidXWfrpUR/Fkr3bmofUsr+vx//AcZQ8U8=
                    "]]},
                    Annotation[#, "Charting`Private`Tag#1"]& ], {
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.7566360346764, 100.}}]},
                    RowBox[{"{", 
                    RowBox[{"8.7566360346764`", ",", "100.`"}], "}"}]],
                    Annotation[#, {8.7566360346764, 100.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{8.543477516461653, 96.04000000000002}}]},
                    RowBox[{"{", 
                    RowBox[{"8.543477516461653`", ",", "96.04000000000002`"}],
                     "}"}]],
                    
                    Annotation[#, {8.543477516461653, 96.04000000000002}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.332779969026639, 92.16}}]},
                    RowBox[{"{", 
                    RowBox[{"8.332779969026639`", ",", "92.16`"}], "}"}]],
                    Annotation[#, {8.332779969026639, 92.16}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{8.122263843389923, 88.36000000000001}}]},
                    RowBox[{"{", 
                    RowBox[{"8.122263843389923`", ",", "88.36000000000001`"}],
                     "}"}]],
                    
                    Annotation[#, {8.122263843389923, 88.36000000000001}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{7.910559882400135, 84.63999999999999}}]},
                    RowBox[{"{", 
                    RowBox[{"7.910559882400135`", ",", "84.63999999999999`"}],
                     "}"}]],
                    
                    Annotation[#, {7.910559882400135, 84.63999999999999}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.697211030439103, 81.}}]},
                    RowBox[{"{", 
                    RowBox[{"7.697211030439103`", ",", "81.`"}], "}"}]],
                    Annotation[#, {7.697211030439103, 81.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{7.482587769915985, 77.44000000000001}}]},
                    RowBox[{"{", 
                    RowBox[{"7.482587769915985`", ",", "77.44000000000001`"}],
                     "}"}]],
                    
                    Annotation[#, {7.482587769915985, 77.44000000000001}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.2666461776585605`, 73.96}}]},
                    RowBox[{"{", 
                    RowBox[{"7.2666461776585605`", ",", "73.96`"}], "}"}]],
                    Annotation[#, {7.2666461776585605`, 73.96}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.049356334984304, 70.56}}]},
                    RowBox[{"{", 
                    RowBox[{"7.049356334984304`", ",", "70.56`"}], "}"}]],
                    Annotation[#, {7.049356334984304, 70.56}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.830682594101268, 67.24}}]},
                    RowBox[{"{", 
                    RowBox[{"6.830682594101268`", ",", "67.24`"}], "}"}]],
                    Annotation[#, {6.830682594101268, 67.24}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.610588670649794, 64.}}]},
                    RowBox[{"{", 
                    RowBox[{"6.610588670649794`", ",", "64.`"}], "}"}]],
                    Annotation[#, {6.610588670649794, 64.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{6.389047192218208, 60.839999999999996`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "6.389047192218208`", ",", "60.839999999999996`"}], "}"}]],
                    
                    Annotation[#, {6.389047192218208, 60.839999999999996`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.16602378414999, 57.76}}]},
                    RowBox[{"{", 
                    RowBox[{"6.16602378414999`", ",", "57.76`"}], "}"}]],
                    Annotation[#, {6.16602378414999, 57.76}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{5.941499985981454, 54.760000000000005`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "5.941499985981454`", ",", "54.760000000000005`"}], "}"}]],
                    
                    Annotation[#, {5.941499985981454, 54.760000000000005`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{5.715446515597787, 51.83999999999999}}]},
                    RowBox[{"{", 
                    RowBox[{"5.715446515597787`", ",", "51.83999999999999`"}],
                     "}"}]],
                    
                    Annotation[#, {5.715446515597787, 51.83999999999999}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.487842047980592, 49.}}]},
                    RowBox[{"{", 
                    RowBox[{"5.487842047980592`", ",", "49.`"}], "}"}]],
                    Annotation[#, {5.487842047980592, 49.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{5.258666849530756, 46.239999999999995`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "5.258666849530756`", ",", "46.239999999999995`"}], "}"}]],
                    
                    Annotation[#, {5.258666849530756, 46.239999999999995`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{5.027909462029438, 43.559999999999995`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "5.027909462029438`", ",", "43.559999999999995`"}], "}"}]],
                    
                    Annotation[#, {5.027909462029438, 43.559999999999995`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{4.795552698148379, 40.96000000000001}}]},
                    RowBox[{"{", 
                    RowBox[{"4.795552698148379`", ",", "40.96000000000001`"}],
                     "}"}]],
                    
                    Annotation[#, {4.795552698148379, 40.96000000000001}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{4.56158700937188, 38.43999999999999}}]},
                    RowBox[{"{", 
                    RowBox[{"4.56158700937188`", ",", "38.43999999999999`"}], 
                    "}"}]],
                    
                    Annotation[#, {4.56158700937188, 38.43999999999999}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.326006984874376, 36.}}]},
                    RowBox[{"{", 
                    RowBox[{"4.326006984874376`", ",", "36.`"}], "}"}]],
                    Annotation[#, {4.326006984874376, 36.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.0888065772625914`, 33.64}}]},
                    RowBox[{"{", 
                    RowBox[{"4.0888065772625914`", ",", "33.64`"}], "}"}]],
                    Annotation[#, {4.0888065772625914`, 33.64}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{3.8524158837821623`, 31.359999999999996`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "3.8524158837821623`", ",", "31.359999999999996`"}], 
                    "}"}]],
                    
                    Annotation[#, {3.8524158837821623`, 31.359999999999996`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{3.6190788056225762`, 29.159999999999993`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "3.6190788056225762`", ",", "29.159999999999993`"}], 
                    "}"}]],
                    
                    Annotation[#, {3.6190788056225762`, 29.159999999999993`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{3.3844625446430534`, 27.039999999999992`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "3.3844625446430534`", ",", "27.039999999999992`"}], 
                    "}"}]],
                    
                    Annotation[#, {3.3844625446430534`, 27.039999999999992`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.148492622421135, 25.}}]},
                    RowBox[{"{", 
                    RowBox[{"3.148492622421135`", ",", "25.`"}], "}"}]],
                    Annotation[#, {3.148492622421135, 25.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{2.9047250639947846`, 23.04}}]},
                    RowBox[{"{", 
                    RowBox[{"2.9047250639947846`", ",", "23.04`"}], "}"}]],
                    Annotation[#, {2.9047250639947846`, 23.04}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{2.6583265712092414`, 21.159999999999997`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2.6583265712092414`", ",", "21.159999999999997`"}], 
                    "}"}]],
                    
                    Annotation[#, {2.6583265712092414`, 21.159999999999997`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{2.4107478818831853`, 19.359999999999996`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2.4107478818831853`", ",", "19.359999999999996`"}], 
                    "}"}]],
                    
                    Annotation[#, {2.4107478818831853`, 19.359999999999996`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{2.1617926148770534`, 17.639999999999993`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2.1617926148770534`", ",", "17.639999999999993`"}], 
                    "}"}]],
                    
                    Annotation[#, {2.1617926148770534`, 17.639999999999993`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{1.9112261949884843`, 16.}}]},
                    RowBox[{"{", 
                    RowBox[{"1.9112261949884843`", ",", "16.`"}], "}"}]],
                    Annotation[#, {1.9112261949884843`, 16.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{1.658764076449619, 14.44}}]},
                    RowBox[{"{", 
                    RowBox[{"1.658764076449619`", ",", "14.44`"}], "}"}]],
                    Annotation[#, {1.658764076449619, 14.44}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{1.4040765171849527`, 12.959999999999997`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1.4040765171849527`", ",", "12.959999999999997`"}], 
                    "}"}]],
                    
                    Annotation[#, {1.4040765171849527`, 12.959999999999997`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{1.147129659749233, 11.559999999999997`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1.147129659749233`", ",", "11.559999999999997`"}], "}"}]],
                    
                    Annotation[#, {1.147129659749233, 11.559999999999997`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{0.8878241200082162, 10.239999999999995`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.8878241200082162`", ",", "10.239999999999995`"}], 
                    "}"}]],
                    
                    Annotation[#, {0.8878241200082162, 10.239999999999995`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{0.6251023600626512, 9.}}]},
                    RowBox[{"{", 
                    RowBox[{"0.6251023600626512`", ",", "9.`"}], "}"}]],
                    Annotation[#, {0.6251023600626512, 9.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{0.3584418373908583, 7.839999999999999}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.3584418373908583`", ",", "7.839999999999999`"}], "}"}]],
                    
                    Annotation[#, {0.3584418373908583, 7.839999999999999}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{0.08051971573158456, 6.759999999999998}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.08051971573158456`", ",", "6.759999999999998`"}], 
                    "}"}]],
                    
                    Annotation[#, {0.08051971573158456, 6.759999999999998}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{-0.2030601004073176, 5.759999999999997}}]},
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.2030601004073176`"}], ",", 
                    "5.759999999999997`"}], "}"}]],
                    
                    Annotation[#, {-0.2030601004073176, 5.759999999999997}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{-0.4916819704760944, 4.839999999999997}}]},
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.4916819704760944`"}], ",", 
                    "4.839999999999997`"}], "}"}]],
                    
                    Annotation[#, {-0.4916819704760944, 4.839999999999997}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{-0.7836814688317988, 4.}}]},
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.7836814688317988`"}], ",", "4.`"}], "}"}]],
                    Annotation[#, {-0.7836814688317988, 4.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{-1.0756480248083384`, 3.239999999999996}}]},
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.0756480248083384`"}], ",", 
                    "3.239999999999996`"}], "}"}]],
                    
                    Annotation[#, {-1.0756480248083384`, 3.239999999999996}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{-1.3126412296294343`, 2.5599999999999987`}}]},
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.3126412296294343`"}], ",", 
                    "2.5599999999999987`"}], "}"}]],
                    
                    Annotation[#, {-1.3126412296294343`, 2.5599999999999987`},
                     "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{-1.4848848354956963`, 1.960000000000001}}]},
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.4848848354956963`"}], ",", 
                    "1.960000000000001`"}], "}"}]],
                    
                    Annotation[#, {-1.4848848354956963`, 1.960000000000001}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{-1.6196630894520072`, 1.4399999999999984`}}]},
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.6196630894520072`"}], ",", 
                    "1.4399999999999984`"}], "}"}]],
                    
                    Annotation[#, {-1.6196630894520072`, 1.4399999999999984`},
                     "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{-1.7152176323322226`, 1.}}]},
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.7152176323322226`"}], ",", "1.`"}], "}"}]],
                    Annotation[#, {-1.7152176323322226`, 1.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{-1.7131691574307277`, 0.6399999999999983}}]},
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.7131691574307277`"}], ",", 
                    "0.6399999999999983`"}], "}"}]],
                    
                    Annotation[#, {-1.7131691574307277`, 0.6399999999999983}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{-1.612607213775532, 0.3599999999999996}}]},
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.612607213775532`"}], ",", 
                    "0.3599999999999996`"}], "}"}]],
                    
                    Annotation[#, {-1.612607213775532, 0.3599999999999996}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{-1.685177524514407, 0.15999999999999887`}}]},
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.685177524514407`"}], ",", 
                    "0.15999999999999887`"}], "}"}]],
                    
                    Annotation[#, {-1.685177524514407, 0.15999999999999887`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{-1.3048523462310597`, 0.039999999999999716`}}]},
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.3048523462310597`"}], ",", 
                    "0.039999999999999716`"}], "}"}]],
                    
                    Annotation[#, {-1.3048523462310597`, 
                    0.039999999999999716`}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{-0.810592846338599, 0.}}]},
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.810592846338599`"}], ",", "0.`"}], "}"}]],
                    
                    Annotation[#, {-0.810592846338599, 0.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{-0.29002893625399806`, 
                    0.040000000000000424`}}]},
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.29002893625399806`"}], ",", 
                    "0.040000000000000424`"}], "}"}]],
                    
                    Annotation[#, {-0.29002893625399806`, 
                    0.040000000000000424`}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{0.2605678009051976, 0.16000000000000028`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.2605678009051976`", ",", "0.16000000000000028`"}], 
                    "}"}]],
                    
                    Annotation[#, {0.2605678009051976, 0.16000000000000028`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{0.8341016244094654, 0.3600000000000017}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.8341016244094654`", ",", "0.3600000000000017`"}], 
                    "}"}]],
                    
                    Annotation[#, {0.8341016244094654, 0.3600000000000017}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{1.409683723887818, 0.6400000000000011}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1.409683723887818`", ",", "0.6400000000000011`"}], "}"}]],
                    
                    Annotation[#, {1.409683723887818, 0.6400000000000011}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{2.040694201080199, 1.}}]},
                    RowBox[{"{", 
                    RowBox[{"2.040694201080199`", ",", "1.`"}], "}"}]],
                    Annotation[#, {2.040694201080199, 1.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{2.702168581045545, 1.4400000000000026`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2.702168581045545`", ",", "1.4400000000000026`"}], "}"}]],
                    
                    Annotation[#, {2.702168581045545, 1.4400000000000026`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{3.3464715469438207`, 1.960000000000001}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "3.3464715469438207`", ",", "1.960000000000001`"}], "}"}]],
                    
                    Annotation[#, {3.3464715469438207`, 1.960000000000001}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{3.9696522412622457`, 2.5600000000000045`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "3.9696522412622457`", ",", "2.5600000000000045`"}], 
                    "}"}]],
                    
                    Annotation[#, {3.9696522412622457`, 2.5600000000000045`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{4.573586310768146, 3.2400000000000024`}}]},
                    RowBox[{"{", 
                    RowBox[{
                    "4.573586310768146`", ",", "3.2400000000000024`"}], "}"}]],
                    
                    Annotation[#, {4.573586310768146, 3.2400000000000024`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.161287267016424, 4.}}]},
                    RowBox[{"{", 
                    RowBox[{"5.161287267016424`", ",", "4.`"}], "}"}]],
                    Annotation[#, {5.161287267016424, 4.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{5.714089034949112, 4.840000000000004}}]},
                    RowBox[{"{", 
                    RowBox[{"5.714089034949112`", ",", "4.840000000000004`"}],
                     "}"}]],
                    
                    Annotation[#, {5.714089034949112, 4.840000000000004}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{6.242436099322667, 5.760000000000002}}]},
                    RowBox[{"{", 
                    RowBox[{"6.242436099322667`", ",", "5.760000000000002`"}],
                     "}"}]],
                    
                    Annotation[#, {6.242436099322667, 5.760000000000002}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{6.752882561313533, 6.760000000000008}}]},
                    RowBox[{"{", 
                    RowBox[{"6.752882561313533`", ",", "6.760000000000008`"}],
                     "}"}]],
                    
                    Annotation[#, {6.752882561313533, 6.760000000000008}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{7.247174207875517, 7.840000000000004}}]},
                    RowBox[{"{", 
                    RowBox[{"7.247174207875517`", ",", "7.840000000000004`"}],
                     "}"}]],
                    
                    Annotation[#, {7.247174207875517, 7.840000000000004}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.736198256609697, 9.}}]},
                    RowBox[{"{", 
                    RowBox[{"7.736198256609697`", ",", "9.`"}], "}"}]],
                    Annotation[#, {7.736198256609697, 9.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{8.214648915625471, 10.240000000000007`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "8.214648915625471`", ",", "10.240000000000007`"}], "}"}]],
                    
                    Annotation[#, {8.214648915625471, 10.240000000000007`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{8.679829047521459, 11.560000000000002`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "8.679829047521459`", ",", "11.560000000000002`"}], "}"}]],
                    
                    Annotation[#, {8.679829047521459, 11.560000000000002`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{9.13277625767039, 12.96000000000001}}]},
                    RowBox[{"{", 
                    RowBox[{"9.13277625767039`", ",", "12.96000000000001`"}], 
                    "}"}]],
                    
                    Annotation[#, {9.13277625767039, 12.96000000000001}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{9.574263339276243, 14.440000000000005`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "9.574263339276243`", ",", "14.440000000000005`"}], "}"}]],
                    
                    Annotation[#, {9.574263339276243, 14.440000000000005`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{10.015980858394322`, 16.}}]},
                    RowBox[{"{", 
                    RowBox[{"10.015980858394322`", ",", "16.`"}], "}"}]],
                    Annotation[#, {10.015980858394322`, 16.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{10.453899977966962`, 17.640000000000008`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "10.453899977966962`", ",", "17.640000000000008`"}], 
                    "}"}]],
                    
                    Annotation[#, {10.453899977966962`, 17.640000000000008`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{10.883203790107402`, 19.360000000000003`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "10.883203790107402`", ",", "19.360000000000003`"}], 
                    "}"}]],
                    
                    Annotation[#, {10.883203790107402`, 19.360000000000003`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{11.306996198985829`, 21.160000000000014`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "11.306996198985829`", ",", "21.160000000000014`"}], 
                    "}"}]],
                    
                    Annotation[#, {11.306996198985829`, 21.160000000000014`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], 
                    PointBox[{{11.725850115544244`, 23.040000000000006`}}]},
                    RowBox[{"{", 
                    
                    RowBox[{
                    "11.725850115544244`", ",", "23.040000000000006`"}], 
                    "}"}]],
                    
                    Annotation[#, {11.725850115544244`, 23.040000000000006`}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{12.140278613359591`, 25.}}]},
                    RowBox[{"{", 
                    RowBox[{"12.140278613359591`", ",", "25.`"}], "}"}]],
                    
                    Annotation[#, {12.140278613359591`, 25.}, 
                    "Tooltip"]& ]}}, {{}, {}}}, 
                  InterpretationBox[{
                    TagBox[{{{}, {}, 
                    TagBox[
                    {GrayLevel[0.2], AbsoluteThickness[1.], Opacity[0.5], 
                    AbsoluteDashing[{2, 4}], CapForm["Butt"], 
                    LineBox[CompressedData["
1:eJxFxXsw0wEcAPAfOWdNM/O4NptCZ3lUHuNaKsxiGrPMa8rmcvzhLu4ypXS1
zlF5XWceUUkpK7c/VHaHssuo2y1qSdI5XHc710VHFGWy6g/f7x+f+3idLEzO
tSUIIvGf/3t7qpihHI8XmzvLRNstVJxoJbkOfmPA0ywlWaLGW1in1k4zcGdW
3MQTgg4TTIsqZMQdnqLnkEPyaDAlcOFSsNYG7hkraRb71EZuXjeZX/CjySZq
895WKVEaS4P5rWmzjjs84K7auLKbmd6w9o+2I8mJDTuMXc9wLAqAnbVDKiMj
CH4VepankoTAYcbR8wGXOXBlVP+A33Q4XP51KklD48K5ipr5+jMRMOE+S0t8
ewiOnlMor1kjYY44fqNhXzTcwl+W+wl58NJDs6HwYgy8u7lzhaXhw8HtZEHt
yyPwHlZ32+OVWHi9a5XZ5CKAH5mcZGb/eFiQXdhhlh6F+0j5NLVCCHv6aMqZ
6gQ426Dv//0+ES6+oqA3z4vgw5PhumKKGNZYlTbKWzgpP4ytYx+D5dU1pg86
/E7E06o3wmR44t4FY5sZX2t08UgpksDkd66iCCvuNthrt96YApN4gSO3d6XC
KyU8Ol2Hj/7UxxlS0uAbVurVjM94+oBtgv5cOkxQ9V7bHDLgpvtzn6pUOPt7
j5vZXwrfNUpyWD340gmaRdWH8xZMdVv7cbOLSL86gPtmCbxGX+OdCwdnKmbw
blff44v2mbCd2ryUR8JTue2VU2R8JWtnn5GKc9UM+gMGruM6fZTuxSnDIwWm
IFwuq7aPC8WJMlI4Zz8eM7ylgcLD62X6wHI+bl5UDlli8Qq3jeUvQnxc/bxK
LsLZB0p9xsV4yTD3WYIEN8h+JQ+m4n8BeMET7Q==
                    "]]},
                    Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
                    {
                    "WolframDynamicHighlight", <|
                    "Label" -> {"XYLabel"}, 
                    "Ball" -> {"InterpolatedBall"}|>}], 
                    
                    DynamicBox[(Charting`HighlightActionBox[
                    "DynamicHighlight", {}, 
                    Slot["HighlightElements"], 
                    Slot["LayoutOptions"], 
                    Slot["Meta"], 
                    Charting`HighlightActionFunction[
                    "DynamicHighlight", {{{{}, {}, 
                    Annotation[{
                    Directive[
                    CapForm["Butt"], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], 
                    Line[CompressedData["
1:eJxFxXsw0wEcAPAfOWdNM/O4NptCZ3lUHuNaKsxiGrPMa8rmcvzhLu4ypXS1
zlF5XWceUUkpK7c/VHaHssuo2y1qSdI5XHc710VHFGWy6g/f7x+f+3idLEzO
tSUIIvGf/3t7qpihHI8XmzvLRNstVJxoJbkOfmPA0ywlWaLGW1in1k4zcGdW
3MQTgg4TTIsqZMQdnqLnkEPyaDAlcOFSsNYG7hkraRb71EZuXjeZX/CjySZq
895WKVEaS4P5rWmzjjs84K7auLKbmd6w9o+2I8mJDTuMXc9wLAqAnbVDKiMj
CH4VepankoTAYcbR8wGXOXBlVP+A33Q4XP51KklD48K5ipr5+jMRMOE+S0t8
ewiOnlMor1kjYY44fqNhXzTcwl+W+wl58NJDs6HwYgy8u7lzhaXhw8HtZEHt
yyPwHlZ32+OVWHi9a5XZ5CKAH5mcZGb/eFiQXdhhlh6F+0j5NLVCCHv6aMqZ
6gQ426Dv//0+ES6+oqA3z4vgw5PhumKKGNZYlTbKWzgpP4ytYx+D5dU1pg86
/E7E06o3wmR44t4FY5sZX2t08UgpksDkd66iCCvuNthrt96YApN4gSO3d6XC
KyU8Ol2Hj/7UxxlS0uAbVurVjM94+oBtgv5cOkxQ9V7bHDLgpvtzn6pUOPt7
j5vZXwrfNUpyWD340gmaRdWH8xZMdVv7cbOLSL86gPtmCbxGX+OdCwdnKmbw
blff44v2mbCd2ryUR8JTue2VU2R8JWtnn5GKc9UM+gMGruM6fZTuxSnDIwWm
IFwuq7aPC8WJMlI4Zz8eM7ylgcLD62X6wHI+bl5UDlli8Qq3jeUvQnxc/bxK
LsLZB0p9xsV4yTD3WYIEN8h+JQ+m4n8BeMET7Q==
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PlotRange" -> {{-6.800978513948834, 
                    105.34004892569745`}, {-6.800976225356438, 
                    105.34004663710505`}}, 
                    "Frame" -> {{True, True}, {True, True}}, 
                    "AxesOrigin" -> {0, 0}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {False, False}, 
                    "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    CapForm["Butt"], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PlotRange" -> {{-6.800978513948834, 
                    105.34004892569745`}, {-6.800976225356438, 
                    105.34004663710505`}}, 
                    "Frame" -> {{True, True}, {True, True}}, 
                    "AxesOrigin" -> {0, 0}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {False, False}, 
                    "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    CapForm["Butt"], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>],
                    
                    ImageSizeCache->{{
                    4.503599627370496*^15, -4.503599627370496*^15}, {
                    4.503599627370496*^15, -4.503599627370496*^15}}]},
                   Annotation[{{{{}, {}, 
                    Annotation[{
                    Directive[
                    CapForm["Butt"], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], 
                    Line[CompressedData["
1:eJxFxXsw0wEcAPAfOWdNM/O4NptCZ3lUHuNaKsxiGrPMa8rmcvzhLu4ypXS1
zlF5XWceUUkpK7c/VHaHssuo2y1qSdI5XHc710VHFGWy6g/f7x+f+3idLEzO
tSUIIvGf/3t7qpihHI8XmzvLRNstVJxoJbkOfmPA0ywlWaLGW1in1k4zcGdW
3MQTgg4TTIsqZMQdnqLnkEPyaDAlcOFSsNYG7hkraRb71EZuXjeZX/CjySZq
895WKVEaS4P5rWmzjjs84K7auLKbmd6w9o+2I8mJDTuMXc9wLAqAnbVDKiMj
CH4VepankoTAYcbR8wGXOXBlVP+A33Q4XP51KklD48K5ipr5+jMRMOE+S0t8
ewiOnlMor1kjYY44fqNhXzTcwl+W+wl58NJDs6HwYgy8u7lzhaXhw8HtZEHt
yyPwHlZ32+OVWHi9a5XZ5CKAH5mcZGb/eFiQXdhhlh6F+0j5NLVCCHv6aMqZ
6gQ426Dv//0+ES6+oqA3z4vgw5PhumKKGNZYlTbKWzgpP4ytYx+D5dU1pg86
/E7E06o3wmR44t4FY5sZX2t08UgpksDkd66iCCvuNthrt96YApN4gSO3d6XC
KyU8Ol2Hj/7UxxlS0uAbVurVjM94+oBtgv5cOkxQ9V7bHDLgpvtzn6pUOPt7
j5vZXwrfNUpyWD340gmaRdWH8xZMdVv7cbOLSL86gPtmCbxGX+OdCwdnKmbw
blff44v2mbCd2ryUR8JTue2VU2R8JWtnn5GKc9UM+gMGruM6fZTuxSnDIwWm
IFwuq7aPC8WJMlI4Zz8eM7ylgcLD62X6wHI+bl5UDlli8Qq3jeUvQnxc/bxK
LsLZB0p9xsV4yTD3WYIEN8h+JQ+m4n8BeMET7Q==
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PlotRange" -> {{-6.800978513948834, 
                    105.34004892569745`}, {-6.800976225356438, 
                    105.34004663710505`}}, 
                    "Frame" -> {{True, True}, {True, True}}, 
                    "AxesOrigin" -> {0, 0}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {False, False}, 
                    "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    CapForm["Butt"], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>, 
                    "DynamicHighlight"]]},
                 Axes->{False, False},
                 AxesLabel->{None, None},
                 AxesOrigin->{0, 0},
                 DisplayFunction->Identity,
                 Frame->{{True, False}, {True, False}},
                 FrameLabel->{{
                    FormBox[
                    TagBox["\"actual value\"", HoldForm], TraditionalForm], 
                    None}, {
                    FormBox[
                    TagBox["\"predicted value\"", HoldForm], TraditionalForm],
                     None}},
                 FrameStyle->Automatic,
                 FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                 
                 GridLines->{Automatic, Automatic},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]],
                 ImageSize->250,
                 LabelStyle->{FontFamily -> "Times"},
                 
                 Method->{
                  "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.645957, 0.253192, 0.685109], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.285821, 0.56, 0.450773], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.7, 0.336, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.491486, 0.345109, 0.8], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.71788, 0.568653, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.70743, 0.224, 0.542415], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.287228, 0.490217, 0.664674], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.982289285128704, 0.5771321368979874, 
                    0.011542503255145636`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.5876740325800278, 0.2877284499870081, 
                    0.7500695697462922], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.4262088601796793, 0.5581552810007578, 
                    0.2777996730417023], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9431487543762861, 0.414555896337833, 
                    0.07140829055870854], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.41497437140121635`, 0.393632147507352, 
                    0.7842993779115092], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                   Scaled[0.05], "OptimizePlotMarkers" -> True, 
                   "IncludeHighlighting" -> "CurrentPoint", "HighlightStyle" -> 
                   Automatic, "OptimizePlotMarkers" -> True, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}},
                 
                 PlotRange->{{-6.800978513948834, 
                  105.34004892569745`}, {-6.800978513948834, 
                  105.34004892569745`}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{{0, 0}, {0, 0}},
                 Ticks->{Automatic, Automatic}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
           NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  PredictorMeasurementsObject[<|
   "Model" -> PredictorFunction[<|
      "ExampleNumber" -> 41, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 41, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 4463274533565020503|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {5.415722071342227*^-17}, 
                    "StandardDeviation" -> {1.1832159566199232`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 2523344124640608097|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                   "DirectTraining", "BatchProcessing" -> Automatic, 
                   "Model" -> <|
                    "RotationMatrix" -> {{1.}}, 
                    "Precisions" -> {0.9989365922352625}, "NoisePrecision" -> 
                    None, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.00013608978181551932`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.3, 1}, "ID" -> 3001451220314565817|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 1, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.00013608978181552203`}, 
                    "StandardDeviation" -> {1.00053212832204}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.3, 1}, "ID" -> 
                    787979534263831810|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.00013608978181552203`}, 
                    "StandardDeviation" -> {1.00053212832204}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.3, 1}, "ID" -> 
                    787979534263831810|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 1, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.1}, 
                    "ID" -> 3418703251837826833|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.060129, "MaxTrainingMemory" -> 185056,
                     "DataMemory" -> 2256, "FunctionMemory" -> 38648, 
                    "LanguageVersion" -> {13.3, 1}, "Date" -> 
                    DateObject[{
                    2023, 9, 14, 15, 53, 35.11217`8.29803265014712}, 
                    "Instant", "Gregorian", 2.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                    "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                   "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {-3.1516920894950835`, \
-3.1516920894950835`, -1.74961195814442, -1.608795819073631, \
-1.5072143979224648`, -1.381019028232207, -1.3216679546730665`, \
-1.197915534670655, -1.107971229621685, -1.1056007642901975`, \
-1.1020000010319688`}, "LeftBoundary" -> -1.74961195814442, "LeftScale" -> 
                    0.7010400656753317, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                   Around[1.5233488777155384`, 0.19441321663939437`], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.3, 1},
                 "ID" -> 4270897793735380344|>], 
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.3, 1}, "ID" -> 2344087184081217960|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {5.415722071342227*^-17}, 
                "StandardDeviation" -> {1.1832159566199232`}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.3, 1}, "ID" -> 2994853854525481099|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
            "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.3, 1}, "ID" -> 8966868728716526926|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {0.6188536920321601}, 
                "StandardDeviation" -> {2.669958506289822}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.3, 1}, "ID" -> 4088785673966827386|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Version" -> {13.3, 1}, "ID" -> 4629561655622906945|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (0.6188536920321601 + 
          2.669958506289822 #& ), 
         "ProcessorFunction" -> (-0.23178401109016486` + 
          0.37453765578911613` #& ), "Name" -> "value", 
         "Quantiles" -> {-0.9743549036873252, 2.3970896889988795`}, "Mean" -> 
         0.61885369203216|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
       0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
       "Model" -> <|
        "Method" -> "NeuralNetwork", "Network" -> 
         NetGraph[<|
           "Type" -> "Graph", 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Mean" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
              "LogStd" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>,
             "Nodes" -> <|
             "2" -> <|"Type" -> "NetArray", 
                "Arrays" -> <|
                 "Array" -> RawArray["Real32",{-1.0907756090164185`}]|>, 
                "Parameters" -> <|
                 "Dimensions" -> 
                  NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT], 
                  "$ArrayDimensions" -> {1}|>, "Inputs" -> <||>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>|>, 
              "1" -> <|"Type" -> "Chain", 
                "Nodes" -> <|
                 "1" -> <|
                   "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    RawArray[
                    "Real32",{{-0.46573561429977417`}, \
{-0.10511572659015656`}, {-1.6311942338943481`}, {1.4866901636123657`}, {
                    2.7391254901885986`}, {-1.2689249515533447`}, \
{-1.0189133882522583`}, {0.19942735135555267`}, {
                    0.1477750539779663}, {-1.664239525794983}, {
                    0.046454936265945435`}, {0.1937563121318817}, {
                    0.9510058760643005}, {-0.8457313776016235}, \
{-0.06879546493291855}, {1.036088228225708}, {-0.3454151451587677}, {
                    0.21660277247428894`}, {-0.12839069962501526`}, \
{-0.07731185108423233}, {0.5900480151176453}, {-2.0366404056549072`}, {
                    0.029237978160381317`}, {-0.8821756839752197}, \
{-0.8161696791648865}, {-1.0655665397644043`}, {0.5342943072319031}, {
                    0.44852587580680847`}, {-0.45473572611808777`}, {
                    1.1470816135406494`}, {0.1283106505870819}, {
                    0.6811864376068115}, {
                    1.3292194604873657`}, {-1.1397290229797363`}, \
{-0.5891229510307312}, {-1.1099324226379395`}, {0.5913878083229065}, {
                    0.06266425549983978}, {-0.3727673292160034}, {
                    0.9280444383621216}, {
                    0.11464201658964157`}, {-0.8742656707763672}, {
                    0.9574586153030396}, {
                    0.1435469686985016}, {-0.6952922940254211}, \
{-0.631416916847229}, {-0.36457642912864685`}, {
                    0.3609732389450073}, {-0.19552507996559143`}, {
                    0.29443904757499695`}}], "Biases" -> 
                    RawArray["Real32",{
                    0.07515499740839005, -0.06206513196229935, 
                    0.0465068481862545, -0.17993637919425964`, \
-0.037621695548295975`, -0.0054008387960493565`, 0.11312661319971085`, 
                    0.07571924477815628, -0.03051135689020157, \
-0.23043012619018555`, 
                    0.12449883669614792`, -0.09408710151910782, \
-0.09487210214138031, -0.08850903809070587, -0.14266319572925568`, 
                    0.008273332379758358, -0.0718379095196724, \
-0.09693378955125809, -0.08017949014902115, 
                    0.030505159869790077`, -0.01602320559322834, 
                    0.11050036549568176`, -0.11152613162994385`, \
-0.1240650936961174, 
                    0.06204818934202194, -0.34262484312057495`, \
-0.11726374924182892`, 
                    0.07584581524133682, -0.12359604239463806`, \
-0.10210960358381271`, -0.1701267659664154, 
                    0.04110809415578842, -0.1093696802854538, 
                    0.09519699960947037, -0.09831779450178146, 
                    0.07036340236663818, -0.1056937426328659, \
-0.021310193464159966`, 0.12450459599494934`, 
                    0.10760603100061417`, -0.06379947811365128, 
                    0.20453375577926636`, 0.06702445447444916, 
                    0.06408372521400452, 0.09468362480401993, 
                    0.08468146622180939, 0.12478523701429367`, 
                    0.0945485383272171, -0.05173496529459953, \
-0.06482143700122833}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 1, "$InputDimensions" -> {1}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                  "2" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                  "3" -> <|
                   "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.01, "Method" -> "AlphaDropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                  "4" -> <|
                   "Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> CompressedData["
1:eJwtmWk0l9/XxgshCQmFIipTkTSI7713idCkEaFBJKXhp0FKSVLmzBlLSmlW
NOp77y1laEQaaNRkSJrTrB7/tZ4X56x11jmv9trXtT/XOgY+/81eKtOtW7d1
il3b7MXBdmvXLt40R/5/B7/FK0dZrfzfpdX/r53zAyBeuCBsm74VAxq0BKEs
FbqbR8LSX9mSPL9gGHtmI04adgR+BOyHwkP+kN5/GPwapcNhN1VE9Z0b4F5L
ND656i7du/oIBbMNj7OV58TuvrRU4kjDl6WKaNOfm/JipPo3JvOy1lTYUzJZ
DGtPFXenLSdLy7uwbKw6nBm4FXrGBPITg1x6LGeCdomJuL/GlBudN6FGQjxo
lIzmFfJ/4ceVtzar9Y5TmWGnoDOqO5Yt2cMNh8ZgyAINPLsgh979PC7JXHYJ
xpXsoutzHoDPRDPq3DYEsz6u59ShijRtiSbqpay7dKqsGvbekeWfZja4ebAa
hr0J4yHB2yXZLy1p/40QSnorh/rXX9N1fU30jPXCPXHPab28Kf4xUuf63xWS
/P6R1M/7JGxxioSnL/pLPzl6422fSTTI/jr5FxfRj577SC+7AeYoduNcu+Gw
2j4cxXADjPCzFbwkNiT7xYvdHzTyzqfefOj4I2FB7gfByboeZsqX05ePzwSV
v5o8aKQWROAriEE38U7MKH69P0W40B3A3ECLs26Nx3fSQso3UAXNpW30e4MB
NpRo4+E3U7B5jQb6va8m20Z/+DbUiP8cCcAHC915WmqukN3ci9Qz3eDFi/dC
wiJLatvHQuXKVzAjJFPYd3IKhhd7QfbhJogx+SHUxdRCy7074szVLlR/cIMk
MKGJxkjyhbE+saJnhMCx1ir0ZbUGijfc6H0v5EO7e8PEWcvBpPOYeLH0uWjq
Pw9bPgxhu4yHsHLdYtCRaEvcQpRtb+p8tw3NcEX1HfdBcGihyPhKmL/BiBr/
9UL/NWqw3CRRapdXCg9VEijcVI2Hb/WmcPBCMfbkuIQJoXDJahuPbQ5jeY8U
Cq8uEBZelRd2GXmhTka4eOBYOqljnmj9Lx2kLS0w1rEf7KhYRPKPbKip9gW0
j6rAuwO/ieWPnblb/3gyv2uDCyzTbEe3mqLmvu08RxoMOy7cpyPrPwgZwa8F
1O+BhUomfKfPaXp5Yxq2ncsl+w9DBF74i4oCV5N2yR0+MXwm+h0GvNRjA331
mAbnHpugvkep4PjOCrdGBeCyY1VweUoj/cidAWN0K+jxQBc+PHyzIN45B+e+
zqKsvA46/7FAMkQpg36bm2LW9Pvg9WUOW87vgDNeg3j3MSk0Zvmhr/Ja+s9E
wu6HjoNnSQ9OWJzGV8UkbhWLxP+MZNl9egj6qisIuckO7FzNwv6jppysboTJ
8wZwx5A68dvEUzyj/3xwWdKLNqfo8sxB48j3jynn1KZz43EjPFGWiWsetQpR
V48K3TLPwgz0wPeGTuTtP0j8s3M1KT2zJ1v/4VBUlgitDwZATbUmV/SeyN2c
CkCScIbml1qh/4G39MNVnqmBKeRUHyGkbiiN/ZGIBS6V4p324djtWD84We3E
Qs4CMexwHyy3uCy4uYaSbJAc7Q1xoIHmaqg0uhNm33QXXAPk+OiT7RymKMfp
ldMw5N1z0G08Dh1RBnQx+TLdnmUlyFzwgrHLe0qyFx4Q/AwzIbtapM+yVSAu
u0zm3xuF2nJjzt1wgT7P3MJJOvEk7RhHJ/bNopJBHmCksAF9Dmrz1ONZVOf8
kqDoJN1uMeVb562E+vXRVJEUwWEGLTAn0ooMkw9QyzqBfwZdpcLs60L0qAri
ycXQ+YzJ1cEAk0NG4tbLFyngQxr3s7xGRX8+CGf1bbguehzfCt5GPvsM0HJ2
hdjjzV6erzydo5p1+Wr3p9QRtBXmV32hy/5ujMnP4WPpcRLz5sLaie2gskOX
dZZpcavpQDrzww+7F92ExzfVoKyHIlfWBYg6liHYOKUVsivbaGn7LD7nMRE/
VR+hjz9s8dypTvCvPQ+1hovFTWsceHV0EppnRZNWY7jg2L8JqmIlpDM0nV5Y
54uJf2cJ5XNPQol2LkjH3SGd2R1St3FH2fTmHXoyIgZi58wkh4mvyfrlKbEm
KlaUS/VEk30H4fpvD/y6LgM8NxrTWJnp7BbdDPfGp8On9uPCBC8b4aD+A+r3
TYM67P5QsmIKjxtQICqOtBa2Hb5LwzsWUcH+BbzzW4HosbvQpvToN7jhe5oq
3qli7UVTcPZKp6ZP24Ub+o9p2BIXWB84VnySLUodDJ9Q9us3wvRlmZCaNJh/
TvfFPkW/YZtbH4yvsIE/tu5CtmslG1w2IMfXatAcX08fY7343qnPVNQ3G91K
9dHj7HFYFKYtXJg4E6KHV8Db5+e5ITUFmr5EQsh6ebxf6weXah6I78btEEfd
WMfe5QXQVKJP+qctsOdsM/HyARkeHXhV+qfXTdCNiicumEb3xO/w788TWBd8
iOZJr0PhLz9YeOgC7enbn68c3Quz1Tuh6I4XBdfZ05lMgS+cLqdyV2d6Y2Yo
2fxhNw2eZI23z2ejzccnYtqJ8UK150o+GWNFn4ZU8MqIE9TpGwFnF1gJNXIB
PEH5oNTA7b4k8Ws0TdE4TYb3EgX1Z+FdXmQIRqbPKXFMNZz9OEIMteyB+VZb
xREHbGHMkj5sb3AbpjVGS3Kmk3B0uCqsG2RPk52KoXRXLU8/p0Gll53RfP4b
ynqhgZtW7JHcWNhVv1ZP7F/qxktn7IWv9i5YWzWUo+8XwK6n2Zh0MI/21veS
+O2cDDS2L6Up3KXbX8fy8S5f3fZdHkNnqnHl6ny88uwn2dsNor1rvIQ/Z4og
68tXce7uJNK/00izov3FhOgtks2PjbG8TFYivJSCk84i3GivJA4xvy0dVqAP
m84WQ59TF4TBipO4Ke0c3Lh0D7xSn4NZppSsOhZTbbwf7jCfBMElNyDzuQGa
t2TRGszFFYZnwW50Ia1wToes6/Y4qsSVBmzqwQWlwDuWGvH+S7bQe0NPfFSu
hdsyjcWaXTlksSyUg+tKhcumJ/mVyU4suWuHHWUddLr0OgUuSILfJvooK1cO
dU078OujkeLtsVlUHXBNXJy0g8pHP4dLx/z5zNKvdMXQnba+XUAKOyLh2ZlK
UL2QR++1WgS3mFrR9mMq9hz1kVb9cuRqszjIdz1Ai/Y2QODKx7B2pwu8TOwF
cfbykPx+OPz4eRgk8XP5jdNQjLtayfGD5Ojc0lTYVfdUkM68S9cN+vOTTnmc
ppvGZypkYEp2JU0z0qd3Th9p3Th5QWNBJN5R+EWFA7ygR9YS3GofB7/lroht
9ftR2mZBIzYtxDo3X65fekeocvwnSF8uYPXHR+iKlQpu2B4Fe09Ho21qX7rZ
8wENHB3JcyxV2X1aDKiP7ckvf4XTY4rgZTLm3L4iVzzXrQh+bNWmIXUF+NlJ
E6qa54lzVY34fqwr68nIYne/V2T7szd8T24Rrlhk8vptOkLqoDfgc2wGDtf9
C6Z9T8OHaaacUFlMu0MuCftffoJPGUfxubcC9ws6i9EfZqBteoeQU6LDxX63
4LHgTc81bNHDbSAty39Nk862wK3aG1Skmsyv2zTZKFUbBkfth7eOFjx1gBIW
ThhFOmddsM86GZ7W7wG5Rtmxi3MetGT0wD63FHHL4wLx7XANwWOgLa952Q/r
tkRKlJtahMaMESwfNgtm8GF44zQfq39nwFaZFsmKM8Ww4pmOWKnghsdxId4I
yqTV9xZg22JZvizkiF+Py4gbZmpiQ395aNrgyV6fldDz21Dgh+Fo3tsfZZd/
h6tLdkHUMivw0m+lkrfHJO3XV9E5x7f03m45uz4dTyZ9vXmh/TRWmaAmfLWJ
oMnPNahGdzwvHZ1PV93m8L3X63CR/SNRPyUdyu138usfnWB+7jqaLPtFRpn2
fOhAnBCkGG0rhMuJbtMySEVmENSWHYaSbfvEkHJNXt9Nliu+XQU9BX9WnjmM
PG2PkZGgyRdejyTntykws/wa9CxQ4j+9t3KMrAuAdYeouSUX/uJWrtzqyn5K
I8Ub8BLO3c6nDQ+m45QWP/JfHQ+fdp2l3MszyVbnPUh3r6C+iW60d5UhTOq1
AsL7dNJuj2lkeMCaI0xX88jNK7Bk+nXa2l8PV3z6RM7hGfhGcZvwYdUuwcwi
nAbsj4Nuz2VZbXQCXXgcLJzJScCqPkfFC70UcFpwsFBQvQPkch347PBt4PLP
lLY7PqBmGyOi2tWc8DcHDg7eIsRs641nVDWwQ1iCi/eqYOOGdLJfMY3nDqvg
scqjwGKVPa9NGspeVUchbWIm9LDohyOn/5Fom52E9/ySFHtFg9q9SPC1y4N1
plmgqVzKOTPKIen1ffrbtxpC3tsIJl8UsLPMEJvyvoDWmmzR5flX2D2xVMiA
nXgdu+Hloyfo/cZ3EvJooODVm6H1bQYtedQT7y7yhrhQG2z8OJ6ttxdC5fhz
Et1f3cX0ocOEzw72NiYfnnOs8ntyGErknh3KC0e+JdXFNcL+ogsQfLoIqtUK
qCazB8vpGHGOzAKoX+mP8wp6SovbA3mfYyDPNXDHDUtMcEw6YOhtR5zm9RGG
dHmdtbkJ5y2PI+Wfo2jLv+XCmNgl4r8pTbDPvYhKjptyWWEVDWuvFAsj94pz
Jodw49C73PnnufTIqAH4fdBf2lSuziN1p2If5cfgU66HP15U0IT1QdTufAR6
WuSJ7/yjoblhH5d7vRFemznSzw87eHP3NHZfvk/oE2RJTRd9eVhxP1bq4ngP
09WQNbwGNw66z5mvVPi4cxztCf0syt5rBO8/z2DlmJn465EoFu4NwrUqM/Fa
Q3dUva7BvS0NkR5VCHMej0KHVSfotPMYHt9iTs9/lEtHCt8FT+U9vL6tjV6v
/UyLDM1w0uB1FJc4BXqdqqEV42bz3J8FgrYZQZBrdy7epIfPRnRn7d/W+PvD
MfjgsAjWOpVQw6hQeN+/F5/ccJFm5kRh7wVtQvdVfSExQwuMYz4JHWN/SNrX
pgH/3SSIy67yXvXuuHXuR3HxJUvYdazDZv+TdeQUe5e+rlXGd4ci4JzrFkq7
cpAGqEfAeI1O+DyrD+46LweH5OrED/4h2HPcUlQN0sdXN825LLWVblmqgbef
Mmf0jYYM73XkPFGdH1UX4K/CN6SreJMmpUVg8XptumFcDy+XGHDvNwmgdjBA
HNlngUR931J0kpsF7qNk8OiRHDw0SAYWr1KD6pExsFprLb5RXYaX36ri0M1+
6MdLoMHTmq+eGsk3I7YAf79NzwoDBffdHUJbbLNY4+rGidOaYdPbBZAV6Yj/
hEei9doMarlSRoFdmceneS+f3zOAuX8HGRdnwkS/HTYboh7TwIxZuD7vuXhy
vBQ2GIzgivdDSfhPHc195glLamxIxrpJmCdbK8YGdLIQORYXN98Q3Er2CfSp
i9137ROUDcOE3Dn/4ITjcRhsfELMNbssepZaiDZ69eIIm378WbqcDuSFU3p+
Ks51G8KzG48wWlkx6BqginsH9eIh/MPGi6zr+oJxShVdub+JjadmktDUAeor
z5NnlhlH3sm8FLi8UJztVQv6m7sy/v49wtFVh6h4WKvo9G4h5zkVkvf7QTj6
vivdXWHC0nfZwgJDTXbxOMRR7gU0KXko2ywMpb+L3IVjGmcEnzf36FP2eRA3
FYiyx6Jp/++xOKF3X9ywxxhzvKvJN7eV0n4/ILtSVRh5dSEO/COFq1t70Eyf
UH4XaUA3Y2wvmRTmQ3ShLt7L9YFFr0aje8xh8XXzP3FFe392r5oABm4pGHm4
CGJTbbA+wR2242w0fS+H1cOW8eEihvX5j8U7R4/DyfstIlv8BHsldxijfFb6
Qu8LcakRffuTgGrrMsSJF7fRE9CH+KJXdG5DC6yQ8xdjPj+EgUVHYdCr/9ij
SJWXN3hD7el2SNM8AV8mRHBqvjVPjnTCd20C0eLxOO9TomTVWWVx5h9f+nvA
m1K+hqGanEj/uvekqad2C7kOcSzZ3pMuyelLbr7JpYubvkBhVQig9gIeuMRN
KJ8xlXbI2nGl4VHx5OXNeNRKF8O3+fK86xmUeWo9nj1aThV/3wr1d0+Iuywf
CGZDtrKeYiHZO6dzbcx0nFo7mavvWKEMNgqWi+slqnq78M7rV1D0dzbH2W+i
v3LabKC4ClyPSOHrtKfge3cg6KUtksS3WeDF0f/gKc3AAKNksO2rTu3RuZfU
3uwGs3uKvDPstbjcZy6Ytk+Ewf8Oi4/GBcHJbrOh19pl4Gk8jic8ziWjd6PY
/kQ2HpiVbzv7pDPOLS3iqS93kOusN0Lzo2rSTAaou7KZHjUmC98+jMacCI0u
rRVR2xJDeLnWEcMf7KJpH5P4xGg/1u3XICw/bw9HNXrxNwUF3llsBqEv2gSj
A69hz+7DMHWLM7jEXYCf8lXQPiCN0t7OZV24J+p5pQiKxw5RSdsDSu9lCLaO
/Ti/lCTO03vw032zOTS3jTr355BVD1mqb74GEwvjsHEqi3ODB+DvFZPZNaev
+KCLQ+rv+KLThZ1UaWCAhfnbyL7Yj63XFpHTb0X2OZaK99d/gjbJf/TQqVb4
TysQdQZ34NnHT9Bp/GCJpVlvWhn79dLSoGD6/e0/ft7Ypb8p1tisbg9DOvTp
dfhTmnnTuStnmgvKbw7w5jlzOWNZEjiP1aQj+sao0Gs8eBfYQEWLGWnfmype
q0S2yLWFwNfanDNcB1Qa6mCHxWiMnGvKwoL94sSjhlj5qitD/KwSPuZ/FMYl
7SZZ9/m89akFuYiD8U37NSFL/7f4RqOKvfxPw+90H1w7IEH4WrCdqtmBH62r
k2zR6sVRMk2wflV3TFqWRKvGITpkeUJE3SL2+JAkfZltxNId28gm6Rg/ytTG
pln1Eo9WNX5n488rlkqQSvJoZsg6Ltf9CTe7vHBdg68QdqyVLg8g4U7iSlGz
xoJN7daijcc8WOh9X9itaYFC3Tmo988lB/P/wGVQHfzdv03o80KEH9fKQCfw
O/Usy8LOGEWMP6UIFxp64d59Jdi39I+4zW+CkHNRhuM9oyjuuwstjblMLcsn
Cc9/N8Etq/O0Q6WTRkTaCa0WdrTW140Nn4TSwedmnLi4GixTLCVGUb2BLPdS
ZZ9oNtZWR/+kXIhQHgs547OhMN0b/fWVeIfWfj6pmiLWONhh9Y3hmF2/GhZp
TcKb6QKf13LCj/u9MGPZc/Da7EP6O7JhjW4UiDldNUxMp/aqYspqSKbyzxU0
Rbk7jHM3B7OsRPrQx1ma1U8L1/qMhWTbUpqLrpQfuo2WhgXTTaP1UPioFCZ2
5X6d2P+x2zZxvPV5mDTRG3GIo7jrmRy/HdoXNwYn0nrZf1AQfBtefPkliO1L
cGavdNTet5qVTG5B34eK4saqY+AVtAFeOtYJGj8SROt6BfHB0u5gZc4w828A
3r0cw5YqfXnNagcSs7YJK82aaFvnV2qYmUIF5VUw+3EgrglqAvdTCrjPP5jt
j6yGBZNGSo5cW0FgM1DInj8GRvpWkZ7VN+p2573Ua4YhF75/LcipVkqmaA3l
WLmxXD+niexPldKlYf+oYdI2lG+O4UP2vqLzhQPUYryCJgR40r1qHdiiEwWX
0+phQ0Ui6QvzxZQ/wzBZWRGT9Fn4MTCFv/Q+wGnaLmRwQwl3wmJh9vjtaEUi
2dxWwRnap8TZycPR5LIWvtwoD4ZbD0FNvgLtcfJkj7dSaJefJcwOVGOLfVHS
ihdFQmzRJLb6Mg8fKI7ApXqBvPnjf6AQ4ogtu4rhw5kKtLj4TVj8xwVy3VTp
nOwBYVTuexoaoIVbTk5Dz1sLYGh6P+HWr3Q42Ge3kLB3Ih/c9IZSEuR5UK9R
UF2K/NPKTZgl7YAUeR96uHYNZZifo1cmbuAT0B3jnqZDwN0o2n1jLnnU+YDP
IkeSVhmC4Z6rsGvVTql/yzUY8H04mz/tzUeXDCb/2Q0YqXfcZsjTImhd6w0q
/g+opa8EbWp1YUlwf9KptObLB+NAuzAGskM2ULT5KO4Df6Hg6Enqka023ruu
hg6mRwk21dfZ2m8RhyQFkJrnZDK+4c0/Ut1JGrhIMOkrj2NuldHwTG/Rgqww
d/lCGv71gbQxJ46m58jg7gBtuDnuCGW79eRTvWXIMVSZ3UcYg8sHKekZlkNt
hhFCwE3KiSmGmFkvhd8f7IRlizaD57xxkL++Da6rHIXVf3/xiWel1Ks6Vfri
ZSbY37mMnRtqYcq2K/T3cC+oSVfBOQ2JENpPjmO2pkNbn0DOrMinnf62YOaW
i5HhnvD43Ev4lNcT9sa8tV3/eDoPnDdWyLh9i7a7efDspY8F2e8r2LjiH/2X
Vgrv5VeBSsxD4eTZc1L/cStx65z5rOmcSJNmrWHdmkRu0lMUyoa0CLYz03hb
N1lUCFUiz+SBfM5AjXeUdoMH90vE/rv64qhvaZLkp3YsMf6PDJdOgMyMAPod
liic1/nC46/nQXtZLdxy/0LGa7x4t+tAjPduIZmeR6QvHfqj7iMdUb9bgtiw
ZTCn9evNYe+NsN7wLlxvN6JQ/RfU21aG1rdmQODQHnx39w48JheHZqq9Ydf4
KOFLwk66WBYHt2Zrd2WKYqnyhXhW0jpHD/uTOGzZJRLxgHDx/XLSyZPlYw/u
k+8Mdc6LraUDB9Xwn2WLaNvFB+NMNDD2Rj9Oe5IgHLqWikfDRqJlgCXq3e6E
ij+HKND7gHTw8Qq63b4S4/do04WoT5RX1AOvyPrSVUHoYjlXHm7ZQhOGWbHv
iB6YsncwJ3w2oYrsIk713s2/uvhsrI1AXwbr4jAMYVmxB/u/3Ae6pRrgNyxO
VJJ2wz+zvKVbnm4SG3u+pJ2Jqgj/gEt35PCyn3UwXamNHqnGk8N5TRIja+hd
UW/82bSJXnjUU7pTFrrMXgxjpMlk2FQLdjNbSbd8Hi8O74MX+qlyzOVz7Hfq
MAjlD4WVausx4KsK/9mrCWY+2fQh4jLU5Q3hEcZBlDD+ZNfQVONDjm/F2kAt
vJrshBo+6rigx0FO/fgK/f9Y4DyT0/izQ4a1n0bzeYMkPgWdNHheKXmuaaXg
CVeh8HEMuq335n/y0dDzcRlJK3zQxUENZh68L4ReVeGFGUq4V7WSuCWBRpTP
4R7vLOHpxUjqNl+HKnK/QmaUPUUV1VJSZ2/c+00dd+hPgoOTZmC/DUl8tcMD
nQcfhl6oiZbK8TjZwxJF+woxdWxP7N/eAnd/m/OjrZPFIw2nxVfxLQKPdsbf
0kWwJv0gzuxpAP0+z0Ilk2xMiJvAYbO8MeJnBrz4I6WS++OQo/Vx3Mp7Aip0
CpFnhuGUGjXcfFqJbiuv4pvO47DaahJuiYzDN1HrJNb3GuBLTwe0Ck+h4MMX
xIDN3rAupAdVj1HgHrdOCME7l/Aqe0VxRJkBVvU/JGQ01MDhtDlCbsgXkmue
QFv+Ww0Ty0RQXmOAHvM12MtxOTWcm0Srgs/Ck6AXYrHsdfAZvpvbLCxh68Xj
wq6hoyH93nm4PGY55zZPZrMGC25sfAii3T6esGchKtwJo9Dvh3FeuDkqNyth
Yt4YtPBcQfE6a+FKyRZw6czDPrtk2D/zEQ9pzuOOo3EQ7jqEzHQvCn3LvOBW
3W6c3a8b+tpN5Dl6K7mhxI2uWe+C1uIvpH1zDBf2a6GSilBolfdEp8/L+JJX
NjXeO0ul3vNIZ68Dntwrj7K5vqwSYcJhHTmcv3IeZriXiH4zqmnj9bPw/Hhv
Dmz+D93S+vCUC4ZostcYa7yvwKq/mynL5z2spQhofa4IbWVv6PDcSGopywDt
KnssKlaDxr5WFK74DVzeHSO9naU0a4qW+OBZb46YdZh+hOWAxH4K7x5igK/O
TWSfkbKY2XCJjqzSxkAMZ9/XJWT2pBs8NiuF5ZLbgvIKEyzy28g1qkdZ3zAF
lfzKIPxKjLTFVSD92nVYqHAKBv9W4qpPXnC+R1/w/anH1jOn8b3pT6Vb9yTD
xC2WrHgqVuI7YzQv3rEQ3z+TwzANJ3YSNbHx5g6+2Wc5Zv5NYg+NeB6R8xYW
dXwUeg7OEU85NlLK/Ah6c/Aczb4STbeH9eKgUbGYXCTHuX97cUFON9pcZE5B
Pnb8onk01zTPE5ZXW0v9fr2nu4NuQ6hfJ7W+jGV13I8qz1bi0kBbSj42RbQ3
f01GFQ6w/fwO7DwswdbQLu1U56LBvaMs/FoEI/Yfh3slJ8Du0xCI0bSA0ICZ
0tcyXf22+RCnWGhiywZP8LuwC4f9iqRA00aJfp0pdvioYfDta3C5fgLVDy0F
Bf5Dd2ZkUarcLk5eGU4u40z4LnlQZ7W1MLL2vGTI1iPgO+saTp3+hOa/zye3
oBeglt5OIVNHYJ2yAs+Nm0GX765k6fUOyZ7HdaQ7o5/Y3CQPq5dlsLJtLCXZ
60mHq74lvdGqAly9RLOuxYLHlseSKftQWNP8EE7nB4uWIVpkuPoMNNw0p3Pf
ovjtkiAos4m3vfQVcJLBeL56Jop0N7vwtJznMF/uCgTEq/LDw07i5+5ylO3s
D0HaCVBjaI9fy7aCZfAxar+jzadfe7NCxXbBwESDFbZp4udnapiz5BV8Ty1g
j4fJkPTiA4Qu6RB0b1wTHZUH8/WDp2nkqQSa43FSmGQVxMUBKULaye6EF2zx
roI79Onc/r+/LTIcn0Ieq+/Ci6ArEp+KZF4xYQz2BROh+9yr7Lnzk5Bc/4oE
Jz9STfGV5ExwFXZ7XIN9evE82esm6fZoFiatsIflJl/EiEpHiDQGNu5/ga7n
7oPd/rtwvF4QDvrXTk1zNflK5Qch0m8CRb7cLB5NCOLCdca4Nz+GfgTmgeH2
bei+ZQB9jJbArelZ0PahjNxl1tCQRzdoq22WZHLADeFUYR04nJ5AL169oeNQ
T2+b/opbogTxkpUK3Lh1n/ZoPoMP7llw7cOgrj4PFr16deNLw//SEMtcFF1S
JVoRRyFx2CjUfPFOtIyYxsqPTHGGUlfWkrelR3IeNGH0ZA7aaseqloPE1odN
EHc6jLX/7BZ/TZrACrPDcJers/TzjxI+9H4z7Pksi8W6hji9vQIHfE8R9neW
UWXbe1pkFobrJRvgVWQ/NowYyPu7WbFPWAUduSoPW/N6w7fMwfjHpAkUV6VB
gLszWqs4C289n1J1VSI/KOwnxj9SA+PwoXhmqJIQVRNHlj030nGXGkh0PUkv
5E2xcttgMfV1JBRdMub0G600Szod/j5Uoqyp3TFVsl1sbQAYHzqFrX/uoY2K
mqgackpc1RwAL810eUHiMuihfUWoTZnLayYXU5W7sfDiszo+zEqBp+lJ6HVi
FtcIERBz/7u4vLcvqOql0K4ARY6qfE5XTl+lOXZH6PwCF+HRyifwLS8GdG4c
QXetVaw/JlN4SEniNVM7/k/fnaa5rGTP509p0cEf4qAiG1zydiPcH5xNgf2X
lxxavg5+38qmegt37rk6mt5N2sGtv+tIvfE72C+NpXhZB6DKYpi1MRD+pkVh
25ZJmFgYxOHzZaDj5nXwNZSDvF5tNOf8NThtUEYrB+6B6Z7d2amwhJqfeEKY
QzH1nRHRFZeLReeNAppGmcD3V12zeMQFECwdePHtFVgDU3ijpIRO5pyhExFV
VPrSGMaILqzefIgqGn7BQb0L0KP2J/Ww7svGbqk0NfyiuPjkGE6d8Z2ejPPE
CL8KSdEiDZKpzueYX474yvCKbejH+6LyjT3gbV1I2T8OSXSv5+CnuwNYvyIM
i1aeJR/3I5L7v1yh/q4ti1E7odfYuXRifJcuNEbRz4QYKs725XQVBeR9VUKQ
sSfZbQnmgK63fwaJlKeVT+d7G7H72hyIWzaUXz31Q3/nnejTXUl4NnUOJ0R2
w2sLcsS6wcP51vXz9NNqAzkm5oDaakVexUU0walSWC7zmX6Ey3OfhHjx2EUt
PGcSJzFr2gAFNfsEn8CBYNahg3JtV2GYThbHRkfhwt2XKVsSi5IqomlKhdIl
hW9g7OwnEKzXDSWRO3n8hM1kWG6HH9wewBGDVipeNgvtrf/SQIcntrnZiJMT
J/Nz0sR+lEs6c2XRokBGmKYsXjrktRZCnEZIte7JwSabC1CzoSc/XeTBpxd7
8NgnU1FGxhFK+q1B1ddDeNDIQnDI6M1/vzeRas0p8qjSwrOCMncqnqZH1rb0
b8ZiKguaD8nupkDTr0G3+VrYPaQGw9VUyCLrNo3OF7Fs7i04CzPBp20wLrPR
wtNVd8X5SeOpE74QKtri38XJ0sS/NwWtddEYnXaCHY0OUt7LKXS3i+W3fxyB
RTaRmJblRsmHdaEsbBVv7haCN0tvgaW4hm/0i+Cp7aOo9oAcO/lFCp+XHAV7
OynrjuiNjwbfBrcQE5ieWU7+t+7CgTVu+OGWCp9NiMWv1xbCpIPyKPNlFH96
9Z/QY6wSTp9qxaVLPtLaB4PZqbchHFIPwB1TJpDULZMLy89Ct2A1fvUxH4Jw
AOvkaolD4rpzWqcMJ8qr8IPPfVnNMYL3Tuwv5KvYY6qhPkbtUeIpZ+Tprb4r
LleYAm+uunG+oxXk7DelpRPeQpv/ZOSNXdxtfVr8Pz6OHq0=
                    "], "Biases" -> 
                    RawArray["Real32",{-0.08428014814853668, 
                    0.11913125216960907`, -0.10220552235841751`, \
-0.05865037441253662, 0.06554022431373596, 0.07146281749010086, 
                    0.1504126489162445, 
                    0.14317511022090912`, -0.054795484989881516`, \
-0.08467192202806473, -0.11136753112077713`, 
                    0.16516059637069702`, -0.07283936440944672, \
-0.07114576548337936, 
                    0.028701670467853546`, -0.10733277350664139`, \
-0.06895581632852554, 0.09294222295284271, -0.049226220697164536`, 
                    0.09913807362318039, -0.11592905223369598`, 
                    0.10952311754226685`, 0.08579882234334946, 
                    0.10991135984659195`, -0.13854646682739258`, 
                    0.1189141646027565, 
                    0.10085852444171906`, -0.12571145594120026`, \
-0.10687223821878433`, 0.053226370364427567`, 
                    0.112565778195858, -0.11446714401245117`, \
-0.10609633475542068`, 0.08321008831262589, -0.11651424318552017`, 
                    0.06321410834789276, -0.12934118509292603`, \
-0.07943081110715866, 0.08861849457025528, -0.10523757338523865`, 
                    0.0825621709227562, 
                    0.11197090148925781`, -0.0701824426651001, \
-0.10105351358652115`, 0.08020375669002533, -0.011709393933415413`, 
                    0.05394141003489494, 
                    0.00931961927562952, -0.0502328984439373, \
-0.06477813422679901}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                  "5" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                  "6" -> <|
                   "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    RawArray["Real32",{{
                    0.13455763459205627`, -0.09691271185874939, 
                    0.15375198423862457`, 
                    0.07289524376392365, -0.11229634284973145`, \
-0.05679461359977722, -0.06245271489024162, -0.09008953720331192, 
                    0.11420360952615738`, 0.1914196014404297, 
                    0.06115594133734703, -0.057367511093616486`, 
                    0.14558707177639008`, 
                    0.07914215326309204, -0.0880909413099289, 
                    0.2895226776599884, 
                    0.14841829240322113`, -0.08348876982927322, 
                    0.019945496693253517`, -0.14267875254154205`, 
                    0.028848228976130486`, -0.06402809917926788, \
-0.02235477603971958, -0.1838826686143875, 
                    0.05888989940285683, -0.09898759424686432, \
-0.05269205570220947, 0.12494196742773056`, 
                    0.069697804749012, -0.25349003076553345`, \
-0.1076807975769043, 0.10331981629133224`, 
                    0.2842012941837311, -0.14354649186134338`, 
                    0.08094201236963272, -0.04385748505592346, 
                    0.10697585344314575`, 
                    0.10242480784654617`, -0.04897676780819893, 
                    0.08125972002744675, -0.1467670053243637, \
-0.0967189222574234, 0.0397588349878788, 
                    0.009505088441073895, -0.06933026015758514, 
                    0.022852886468172073`, -0.09346778690814972, 
                    0.03118261881172657, 0.00030924577731639147`, 
                    0.16969485580921173`}}], "Biases" -> 
                    RawArray["Real32",{-0.08998061716556549}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"]}, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Inputs", "Input"], 
              NeuralNetworks`NetPath["Outputs", "LogStd"] -> 
              NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Outputs", "Mean"] -> 
              NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"]}|>, <|
           "Version" -> "13.3.0", "Unstable" -> False|>], 
         "Training" -> <|
          "Optimizer" -> {"ADAM", "L2Regularization" -> None}, 
           TrainingProgressFunction -> {Null& , "Interval" -> 1}, 
           "TotalTrainingTime" -> 1.925065, "MeanInputsPerSecond" -> 
           4155.703833377054|>, "InputType" -> "NumericalVector", "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {-0.4538527081178163}, 
                "StandardDeviation" -> {0.9250659091702422}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.3, 1}, "ID" -> 8516479318809777652|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                "Key" -> "f1", "Invertibility" -> "Perfect", 
                "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Allowed"|>], "FeatureNumber" -> 1, 
         "DistributionData" -> {NormalDistribution, Automatic}, "Calibrator" -> 
         None, "PostProcessor" -> MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "NetworkType" -> <|"Value" -> "FullyConnected", "Options" -> <||>|>,
            "NetworkDepth" -> <|"Value" -> 2, "Options" -> <||>|>, 
           "NumberOfParameters" -> <|"Value" -> 2600, "Options" -> <||>|>, 
           "ActivationFunction" -> <|"Value" -> "SELU", "Options" -> <||>|>, 
           "L2Regularization" -> <|"Value" -> None, "Options" -> <||>|>, 
           "Dropout" -> <|"Value" -> 0.01, "Options" -> <||>|>, 
           "NetInitializationMethod" -> <|
            "Value" -> Automatic, "Options" -> <||>|>, 
           "OptimizationMethod" -> <|
            "Value" -> {"ADAM", "L2Regularization" -> None}, 
             "Options" -> <||>|>, 
           MaxTrainingRounds -> <|"Value" -> 1000, "Options" -> <||>|>, 
           ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
           "EarlyStopping" -> <|"Value" -> False, "Options" -> <||>|>, 
           TrainingProgressReporting -> <|
            "Value" -> None, "Options" -> <||>|>, 
           "NetTrainOptions" -> <|
            "Value" -> {LearningRateMultipliers -> {}, TargetDevice -> "CPU"},
              "Options" -> <||>|>, 
           "LossFunction" -> <|"Value" -> Automatic, "Options" -> <||>|>, 
           "ValidationSetRatio" -> <|"Value" -> None, "Options" -> <||>|>|>|>,
        "TrainingInformation" -> <|
        "Reporting" -> None, "TrainingFunction" -> Predict, "EMIterations" -> 
         Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 
         0.9820629315759775, "PreprocessingTime" -> 
         0.232777`5.818485060253256, "LossName" -> "StandardDeviation", 
         "BestModelInformation" -> 
         Dataset[<|
           "MeanCrossEntropy" -> 
            Around[1.148387936947554, 0.15650315531719142`], 
            "StandardDeviation" -> 
            Around[0.9662157960619518, 0.3576392711173273], "EvaluationTime" -> 
            0.0006046249439299633, "TestSize" -> 33, "ModelMemory" -> 63816, 
            "ModelUtility" -> -0.7302111249646527, "Round" -> 1, "Iteration" -> 
            1, "Time" -> {
             0.263138`5.871728562975194, 2.360324`6.824516615853376}, 
            "TrainingSize" -> 8, "TrainingTime" -> 1.9952623149688797`, 
            "TrainingMemory" -> 415648, "ExperimentCount" -> 1, 
            "MeanCrossEntropyHistory" -> {
              Around[1.148387936947554, 0.11066444240187752`]}, 
            "StandardDeviationHistory" -> {
              Around[0.9662157960619518, 0.2528891538256763]}, 
            "IterationHistory" -> {1}, 
            "TimeHistory" -> {{
              0.263138`5.871728562975194, 2.360324`6.824516615853376}}, 
            "Configuration" -> {
             "NeuralNetwork", "NetworkType" -> "FullyConnected", 
              "NetworkDepth" -> 2, "NumberOfParameters" -> 2600, 
              "ActivationFunction" -> "SELU", "L2Regularization" -> None, 
              "Dropout" -> 0.01, "NetInitializationMethod" -> Automatic, 
              "OptimizationMethod" -> {"ADAM", "L2Regularization" -> None}, 
              MaxTrainingRounds -> 1000, ValidationSet -> Automatic, 
              "EarlyStopping" -> False, TrainingProgressReporting -> None, 
              "NetTrainOptions" -> Automatic, "LossFunction" -> Automatic}|>, 
           
           TypeSystem`Assoc[
            TypeSystem`Atom[String], TypeSystem`AnyType, 18], <||>], 
         "Configurations" -> 
         Dataset[<|<|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 2|>, 
                "NumberOfParameters" -> <|"Value" -> 2600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> 0.01|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 1000|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[1.148387936947554, 0.15650315531719142`], 
                 "StandardDeviation" -> 
                 Around[0.9662157960619518, 0.3576392711173273], 
                 "EvaluationTime" -> 0.0006046249439299633, "TestSize" -> 33, 
                 "ModelMemory" -> 63816, 
                 "ModelUtility" -> -0.7302111249646527, "Round" -> 1, 
                 "Iteration" -> 1, 
                 "Time" -> {
                  0.263138`5.871728562975194, 2.360324`6.824516615853376}, 
                 "TrainingSize" -> 8, "TrainingTime" -> 1.9952623149688797`, 
                 "TrainingMemory" -> 415648, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[1.148387936947554, 0.11066444240187752`]}, 
                 "StandardDeviationHistory" -> {
                   Around[0.9662157960619518, 0.2528891538256763]}, 
                 "IterationHistory" -> {1}, 
                 "TimeHistory" -> {{
                   0.263138`5.871728562975194, 
                    2.360324`6.824516615853376}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.6495833107171315, 0.348778616411733], 
                 "StandardDeviation" -> 
                 Around[1.3589077835674679`, 0.9492435733519929], 
                 "EvaluationTime" -> 0.0024940778937110985`, "TestSize" -> 8, 
                 "ModelMemory" -> 63816, 
                 "ModelUtility" -> -1.2224615635127947`, "Round" -> 2, 
                 "Iteration" -> 2, 
                 "Time" -> {
                  2.472411`6.844665660638975, 4.519164`7.106603095615546}, 
                 "TrainingSize" -> 33, "TrainingTime" -> 1.9952623149688797`, 
                 "TrainingMemory" -> 418024, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6495833107171315, 0.2466237247975981]}, 
                 "StandardDeviationHistory" -> {
                   Around[1.3589077835674679`, 0.6712165677149441]}, 
                 "IterationHistory" -> {2}, 
                 "TimeHistory" -> {{
                   2.472411`6.844665660638975, 
                    4.519164`7.106603095615546}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0024940778937110985`, "ModelMemory" -> 
                63816, "StandardDeviation" -> 
                Around[1.3589077835674679`, 0.9492435733519929], 
                "TrainingMemory" -> 418024, "TrainingTime" -> 
                2.8133198641061203`|>, "Index" -> 1|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 8|>, 
                "NumberOfParameters" -> <|"Value" -> 17600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> None|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 1000|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
                1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
              2|>, <|"Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 4|>, 
                "NumberOfParameters" -> <|"Value" -> 7600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> None|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 1000|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
                1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
              3|>, <|"Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 2|>, 
                "NumberOfParameters" -> <|"Value" -> 2600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> None|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 1000|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
                1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
              4|>, <|"Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 4|>, 
                "NumberOfParameters" -> <|"Value" -> 7600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> 0.01|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 1000|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
                1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
              5|>, <|"Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 8|>, 
                "NumberOfParameters" -> <|"Value" -> 17600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> 0.01|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 1000|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
                1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
              6|>, <|"Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 8|>, 
                "NumberOfParameters" -> <|"Value" -> 17600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> None|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 300|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
                1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
              7|>, <|"Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 8|>, 
                "NumberOfParameters" -> <|"Value" -> 17600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> 0.01|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 300|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
                1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
              8|>|>, 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration["NeuralNetwork"]], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 14]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                 "TestSize", "ModelMemory", "ModelUtility", "Round", 
                 "Iteration", "Time", "TrainingSize", "TrainingTime", 
                 "TrainingMemory", "ExperimentCount", 
                 "MeanCrossEntropyHistory", "StandardDeviationHistory", 
                 "IterationHistory", "TimeHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Atom[Real], 2], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[TypeSystem`AnyType, 1], 
                 TypeSystem`Vector[TypeSystem`AnyType, 1], 
                 TypeSystem`Vector[
                  TypeSystem`Atom[Integer], 1], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[Real], 2], 1]}], TypeSystem`AnyLength], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "ModelMemory", "StandardDeviation", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 8], <||>], 
         "TrainingSizes" -> {8, 33}, "MaxTrainingSize" -> 41, 
         "PreprocessorEvaluationTime" -> 3.46484375*^-6, "PreprocessorMemory" -> 
         55688, "InputDimension" -> 1, "OutputDimension" -> 1, 
         "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
         True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, 
         "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
         "RoundPartitioning" -> 
         Dataset[{<|
            "TrainingSizes" -> 8, "TimeBudgets" -> 1.2085332699487348`, 
             "ElapsedTimes" -> 2.207202, "ExperimentCounts" -> 1|>, <|
            "TrainingSizes" -> 33, "TimeBudgets" -> 2.0142221165812244`, 
             "ElapsedTimes" -> 2.21582, "ExperimentCounts" -> 1|>}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 2], <||>]|>, "AnomalyDetector" -> 
       None, "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.1}, "ID" -> 
              345233281841007474|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 4.706527, 
         "MaxTrainingMemory" -> 985792, "DataMemory" -> 3976, 
         "FunctionMemory" -> 249168, "LanguageVersion" -> {13.3, 1}, "Date" -> 
         DateObject[{2023, 9, 14, 15, 53, 39.752143`8.351935524546219}, 
           "Instant", "Gregorian", 2.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>], 
    "TestSet" -> <|"Input" -> CompressedData["
1:eJw10bFKA0EQxvENhmBICJfkjFGj3l18gKAW6XYewMpHEBQ7X8FHsDRi4Zvs
lAai2FpbpRMEIWAhmflnmmPn+83e3m15dXd5XQshXIRNnejTbF1jPbMa69ti
XZXeWFXqrsKVuBJX4ApcQX5M/4i5QzW+GOFGuAPcPm4PN8QNcbu4gRqb7eBy
XI7r43q4Li7DZeQd+m09tbmWPppv4rZxDVwdt4Wr4YK+Wv6XvL9Ktzb3mybm
f5Kz7/Rg+ZL+V7q39SfPedrciB98Hl88j+Ke9TKyX5z6/pH3ka/ih58HF+TZ
zyvnfn7xvC4+1xC+F9fEtXBtXAeXybv/T/H76pL3mOvjcvkHtGX1yQ==
       "], "Output" -> CompressedData["
1:eJw1UTtLA2EQPB+ghhRCxBTiEyEJKCgiKnJ8gw9OMUhyPoNJcQErBVNKULS5
2v+gwdLW1BKwFKvYRlOZxhTBUu/bm++avZ2d3Z2db7J44Z52WZaVtsyXQ62T
zN91HyNSfyjZkSN86BA/RIC+dJIHEBr2UdBpfg+2Jl67qJT0XxYCv2VCnpVB
K1sd88920SgPPTmNND519HbwrfHWdsi73UKQBIgDRxNfN3Gl6eUNPOvC8jrn
rcHVbe/AiSxSSIguG/2id5W8Fepfou5F8hdwLzrnyZujrhnqSWFUdCRwKfun
yZti/zj3jKBPYhw5wWPkDeJL5gywvxee1P9Uj/B/Vcj7UedSbxKvK1fyGmNF
mRepMvdZT5Hvs9/MG+Z8s8/n/jb1GH0e9UapP8Z7PN5n7r3h/RP0o01/mvTL
+PdIPwv0d5Z+R+m/eY9/y47aJA==
       "]|>, "Predictions" -> CompressedData["
1:eJwBbQKS/SFib1JlAQAAAEwAAAAO0l/MZYMhQNKgXq9CFiFAdHfXImKqIECc
r9FdmT4gQC/VT89ppB9A7JU4sPHJHkB19AR9K+4dQHOWErILER1AmW6Sd4oy
HEDnFTx1nlIbQPX+Dig+cRpAGbYcY2KOGUAmIY0jAqoYQDPmg5IYxBdAXB7q
Ap7cFkDfwqbdjPMVQAEtbfbfCBVAXKlKTJQcFEDaKtNdpS4TQFRxPKoQPxJA
STZpxtRNEUDUDIQc8FoQQIt7O2u/0Q5Am12+lt/zDEAYOz4ZYRMLQOr3Z+Yc
MAlANtWNfuA8B0C6c6u4QEQFQGe3fC82SQNA1gwt7VlLAUC1vivrYZT+P5UX
QjNMivo/WUEm8Bh39j8iUE6hpFryP+ogASEOaew/W+MjqtYA5D8lKUcItvDW
P2gYwKnwnLQ/mJovld/9yb8Iks6nt3ffv2ik4yjrE+m/4/AItNo18b/+OwoX
lAD1v1Z87JkWwve/TsH71yPq+b8uO0YLiHH7v8Tk+g8kafu/fFrHOD3N+b/a
5Tu1fPb6v4a9ktqs4PS/sKqsaGDw6b+csQaH1Y/Sv1bS0ZEkrdA/1CHM4/Ww
6j+m0zyFEI72P941NntXUwBAafSejwqeBUAn8tjfksUKQDC3xQjZwQ9A3Lq4
NVpLEkAVY0R9KKUUQJAn7ic62xZAuNc3K0H4GEAHSGql8wIbQND1TDwb/RxA
IAuu9N3xHkBud3F25m0gQHTzi40SXCFAWsLoP/tDIkBo9yrYBSYjQMxUoKQu
CCRA5Avyk2XoJEDYbYRJM8QlQOhHFZsunSZA5h5YoKJzJ0BUajGZ0kcoQAbu
GR0=
     "], "Distributions" -> {
      NormalDistribution[8.7566360346764, 0.8969881053950257], 
      NormalDistribution[8.543477516461653, 0.8969881053950257], 
      NormalDistribution[8.332779969026639, 0.8969881053950257], 
      NormalDistribution[8.122263843389923, 0.8969881053950257], 
      NormalDistribution[7.910559882400135, 0.8969881053950257], 
      NormalDistribution[7.697211030439103, 0.8969881053950257], 
      NormalDistribution[7.482587769915985, 0.8969881053950257], 
      NormalDistribution[7.2666461776585605`, 0.8969881053950257], 
      NormalDistribution[7.049356334984304, 0.8969881053950257], 
      NormalDistribution[6.830682594101268, 0.8969881053950257], 
      NormalDistribution[6.610588670649794, 0.8969881053950257], 
      NormalDistribution[6.389047192218208, 0.8969881053950257], 
      NormalDistribution[6.16602378414999, 0.8969881053950257], 
      NormalDistribution[5.941499985981454, 0.8969881053950257], 
      NormalDistribution[5.715446515597787, 0.8969881053950257], 
      NormalDistribution[5.487842047980592, 0.8969881053950257], 
      NormalDistribution[5.258666849530756, 0.8969881053950257], 
      NormalDistribution[5.027909462029438, 0.8969881053950257], 
      NormalDistribution[4.795552698148379, 0.8969881053950257], 
      NormalDistribution[4.56158700937188, 0.8969881053950257], 
      NormalDistribution[4.326006984874376, 0.8969881053950257], 
      NormalDistribution[4.0888065772625914`, 0.8969881053950257], 
      NormalDistribution[3.8524158837821623`, 0.8969881053950257], 
      NormalDistribution[3.6190788056225762`, 0.8969881053950257], 
      NormalDistribution[3.3844625446430534`, 0.8969881053950257], 
      NormalDistribution[3.148492622421135, 0.8969881053950257], 
      NormalDistribution[2.9047250639947846`, 0.8969881053950257], 
      NormalDistribution[2.6583265712092414`, 0.8969881053950257], 
      NormalDistribution[2.4107478818831853`, 0.8969881053950257], 
      NormalDistribution[2.1617926148770534`, 0.8969881053950257], 
      NormalDistribution[1.9112261949884843`, 0.8969881053950257], 
      NormalDistribution[1.658764076449619, 0.8969881053950257], 
      NormalDistribution[1.4040765171849527`, 0.8969881053950257], 
      NormalDistribution[1.147129659749233, 0.8969881053950257], 
      NormalDistribution[0.8878241200082162, 0.8969881053950257], 
      NormalDistribution[0.6251023600626512, 0.8969881053950257], 
      NormalDistribution[0.3584418373908583, 0.8969881053950257], 
      NormalDistribution[0.08051971573158456, 0.8969881053950257], 
      NormalDistribution[-0.2030601004073176, 0.8969881053950257], 
      NormalDistribution[-0.4916819704760944, 0.8969881053950257], 
      NormalDistribution[-0.7836814688317988, 0.8969881053950257], 
      NormalDistribution[-1.0756480248083384`, 0.8969881053950257], 
      NormalDistribution[-1.3126412296294343`, 0.8969881053950257], 
      NormalDistribution[-1.4848848354956963`, 0.8969881053950257], 
      NormalDistribution[-1.6196630894520072`, 0.8969881053950257], 
      NormalDistribution[-1.7152176323322226`, 0.8969881053950257], 
      NormalDistribution[-1.7131691574307277`, 0.8969881053950257], 
      NormalDistribution[-1.612607213775532, 0.8969881053950257], 
      NormalDistribution[-1.685177524514407, 0.8969881053950257], 
      NormalDistribution[-1.3048523462310597`, 0.8969881053950257], 
      NormalDistribution[-0.810592846338599, 0.8969881053950257], 
      NormalDistribution[-0.29002893625399806`, 0.8969881053950257], 
      NormalDistribution[0.2605678009051976, 0.8969881053950257], 
      NormalDistribution[0.8341016244094654, 0.8969881053950257], 
      NormalDistribution[1.409683723887818, 0.8969881053950257], 
      NormalDistribution[2.040694201080199, 0.8969881053950257], 
      NormalDistribution[2.702168581045545, 0.8969881053950257], 
      NormalDistribution[3.3464715469438207`, 0.8969881053950257], 
      NormalDistribution[3.9696522412622457`, 0.8969881053950257], 
      NormalDistribution[4.573586310768146, 0.8969881053950257], 
      NormalDistribution[5.161287267016424, 0.8969881053950257], 
      NormalDistribution[5.714089034949112, 0.8969881053950257], 
      NormalDistribution[6.242436099322667, 0.8969881053950257], 
      NormalDistribution[6.752882561313533, 0.8969881053950257], 
      NormalDistribution[7.247174207875517, 0.8969881053950257], 
      NormalDistribution[7.736198256609697, 0.8969881053950257], 
      NormalDistribution[8.214648915625471, 0.8969881053950257], 
      NormalDistribution[8.679829047521459, 0.8969881053950257], 
      NormalDistribution[9.13277625767039, 0.8969881053950257], 
      NormalDistribution[9.574263339276243, 0.8969881053950257], 
      NormalDistribution[10.015980858394322`, 0.8969881053950257], 
      NormalDistribution[10.453899977966962`, 0.8969881053950257], 
      NormalDistribution[10.883203790107402`, 0.8969881053950257], 
      NormalDistribution[11.306996198985829`, 0.8969881053950257], 
      NormalDistribution[11.725850115544244`, 0.8969881053950257], 
      NormalDistribution[12.140278613359591`, 0.8969881053950257]}, 
    "Modes" -> CompressedData["
1:eJwBbQKS/SFib1JlAQAAAEwAAAAO0l/MZYMhQNKgXq9CFiFAdHfXImKqIECc
r9FdmT4gQC/VT89ppB9A7JU4sPHJHkB19AR9K+4dQHOWErILER1AmW6Sd4oy
HEDnFTx1nlIbQPX+Dig+cRpAGbYcY2KOGUAmIY0jAqoYQDPmg5IYxBdAXB7q
Ap7cFkDfwqbdjPMVQAEtbfbfCBVAXKlKTJQcFEDaKtNdpS4TQFRxPKoQPxJA
STZpxtRNEUDUDIQc8FoQQIt7O2u/0Q5Am12+lt/zDEAYOz4ZYRMLQOr3Z+Yc
MAlANtWNfuA8B0C6c6u4QEQFQGe3fC82SQNA1gwt7VlLAUC1vivrYZT+P5UX
QjNMivo/WUEm8Bh39j8iUE6hpFryP+ogASEOaew/W+MjqtYA5D8lKUcItvDW
P2gYwKnwnLQ/mJovld/9yb8Iks6nt3ffv2ik4yjrE+m/4/AItNo18b/+OwoX
lAD1v1Z87JkWwve/TsH71yPq+b8uO0YLiHH7v8Tk+g8kafu/fFrHOD3N+b/a
5Tu1fPb6v4a9ktqs4PS/sKqsaGDw6b+csQaH1Y/Sv1bS0ZEkrdA/1CHM4/Ww
6j+m0zyFEI72P941NntXUwBAafSejwqeBUAn8tjfksUKQDC3xQjZwQ9A3Lq4
NVpLEkAVY0R9KKUUQJAn7ic62xZAuNc3K0H4GEAHSGql8wIbQND1TDwb/RxA
IAuu9N3xHkBud3F25m0gQHTzi40SXCFAWsLoP/tDIkBo9yrYBSYjQMxUoKQu
CCRA5Avyk2XoJEDYbYRJM8QlQOhHFZsunSZA5h5YoKJzJ0BUajGZ0kcoQAbu
GR0=
     "], "Weights" -> SparseArray[Automatic, {76}, 1., {1, {{0, 0}, {}}, {}}],
     "BatchEvaluationTime" -> 0.0010454210526315787`, "SingleEvaluationTime" -> 
    0.00297725, "Version" -> {13.3, 1}|>]]], "Output",
 CellChangeTimes->{
  3.903688184930768*^9, 3.90368821862761*^9, 3.903688281796225*^9, 
   3.90368835720267*^9, {3.903688427940041*^9, 3.903688450831375*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"c649092b-15b0-425f-9cd9-ef9c7afd5cf1"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{873, 718.5},
WindowMargins->{{Automatic, 697.5}, {56.25, Automatic}},
FrontEndVersion->"14.0 for Linux x86 (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"479fa28c-38b7-46d9-a646-c49ab0cd995f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 168, 3, 67, "Section",ExpressionUUID->"f3582806-6fe2-48ae-8e35-b235dc27a2a4"],
Cell[CellGroupData[{
Cell[773, 29, 219, 3, 29, "Input",ExpressionUUID->"fb88de45-b775-4281-938a-3d31e69eae38"],
Cell[995, 34, 402, 5, 33, "Output",ExpressionUUID->"83b3eb5b-aa2b-4273-9cde-44337cb64467"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1434, 44, 248, 4, 29, "Input",ExpressionUUID->"0050a1d1-8887-4fd2-9ad4-24bb52864197"],
Cell[1685, 50, 396, 5, 33, "Output",ExpressionUUID->"fc9f7d4d-b8cb-4e4a-93ce-59e661add96e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2118, 60, 602, 16, 31, "Input",ExpressionUUID->"a5fa2fb4-9195-4cc5-80ad-e084698181f1"],
Cell[2723, 78, 4881, 133, 174, "Output",ExpressionUUID->"2a5d2238-c448-4775-9c22-33f85b95e492"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7641, 216, 1193, 24, 29, "Input",ExpressionUUID->"af9c039e-b990-4073-a0fe-86112ebe9a21"],
Cell[8837, 242, 10768, 248, 176, "Output",ExpressionUUID->"0c4c76fa-450e-4b04-b13d-947e90b48199"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19642, 495, 370, 7, 29, "Input",ExpressionUUID->"f2180167-cf86-4a97-b39e-a1465d92215a"],
Cell[20015, 504, 466, 7, 33, "Output",ExpressionUUID->"5d5d54ab-72c1-4e09-8236-6d2feffd90ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20518, 516, 375, 8, 31, "Input",ExpressionUUID->"b7603e78-07be-413d-b180-4aea5077cbe0"],
Cell[20896, 526, 556, 8, 33, "Output",ExpressionUUID->"36c06a3b-ed8b-4636-bf2d-ad2ccad0f3bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21489, 539, 359, 8, 31, "Input",ExpressionUUID->"932a3cf9-be0e-4bf1-9783-5062e8390c0a"],
Cell[21851, 549, 611, 12, 33, "Output",ExpressionUUID->"31ae55a1-4ee7-4036-9813-d2411efda293"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22499, 566, 2261, 53, 178, "Input",ExpressionUUID->"e7a0cf58-f5d7-4caa-bb89-e3289f7f559f"],
Cell[24763, 621, 21204, 441, 176, "Output",ExpressionUUID->"2a501519-4ba6-4e5e-a017-aa0ad67e6dd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46004, 1067, 324, 6, 29, "Input",ExpressionUUID->"4c450027-98cc-481e-8d73-766540b4df80"],
Cell[46331, 1075, 473, 7, 33, "Output",ExpressionUUID->"7d9df73b-8977-4160-8688-27b403344d3c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46853, 1088, 199, 3, 67, "Section",ExpressionUUID->"a1edb29c-6f97-44b6-aae0-7b6e40a6f3ee"],
Cell[CellGroupData[{
Cell[47077, 1095, 410, 9, 29, "Input",ExpressionUUID->"3f0a7bfe-e8af-421f-9485-d41d350cdd1d"],
Cell[47490, 1106, 2443, 53, 48, "Output",ExpressionUUID->"a8c05ca2-4e12-40c2-8536-5eefacef8d57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49970, 1164, 203, 3, 29, "Input",ExpressionUUID->"7618b771-23c7-4b8e-b129-b301a00cd6cd"],
Cell[50176, 1169, 467, 9, 33, "Output",ExpressionUUID->"c5f9b705-e5da-4da5-bdac-8b5a9e3da13f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50680, 1183, 217, 3, 29, "Input",ExpressionUUID->"2638fe7b-8e9b-407f-a76f-e256e7680b0a"],
Cell[50900, 1188, 2757, 45, 334, "Output",ExpressionUUID->"66e60ebc-ed11-43a1-a639-3916a4963eac"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53706, 1239, 176, 3, 67, "Section",ExpressionUUID->"6ec48310-ac16-4bde-84a9-94362d4c765b"],
Cell[CellGroupData[{
Cell[53907, 1246, 175, 2, 29, "Input",ExpressionUUID->"086c4636-c1b5-4a66-8627-ad8704a2df0f"],
Cell[54085, 1250, 4749, 130, 174, "Output",ExpressionUUID->"0f0f2073-49f8-49bb-b146-68efec2272a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58871, 1385, 270, 5, 29, "Input",ExpressionUUID->"5e27b995-2e9e-4528-b7de-5e0d83b9d5d9"],
Cell[59144, 1392, 4001, 90, 154, "Output",ExpressionUUID->"3622ddd9-27f5-47d6-9ff0-1128fde3a59a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63182, 1487, 209, 3, 29, "Input",ExpressionUUID->"5e54193b-bd0b-453e-84c5-3a985c8ef902"],
Cell[63394, 1492, 62419, 1137, 65, "Output",ExpressionUUID->"1e50e7bf-cead-4959-9e1e-d1fc2f63ae19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125850, 2634, 672, 14, 29, "Input",ExpressionUUID->"ff751768-a301-4183-bacd-e3ada56e551c"],
Cell[126525, 2650, 27182, 520, 65, "Output",ExpressionUUID->"94aaa561-a94e-4107-81a5-5c3d7b855c4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153744, 3175, 317, 6, 29, "Input",ExpressionUUID->"578e50a8-b49b-4d59-975c-eb1ab9767f77"],
Cell[154064, 3183, 45976, 818, 65, "Output",ExpressionUUID->"581fcf40-552b-4b03-ae53-03d4bb130ca2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200077, 4006, 496, 9, 29, "Input",ExpressionUUID->"6c8481c1-c4fe-4cab-ad7d-12ab21a47cc5"],
Cell[200576, 4017, 67919, 1239, 65, "Output",ExpressionUUID->"e1541199-c6c7-45c6-8d59-3b67572fb5f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268532, 5261, 252, 4, 29, "Input",ExpressionUUID->"d4e54e18-512b-4381-9634-90b7397d68fc"],
Cell[268787, 5267, 62193, 1133, 65, "Output",ExpressionUUID->"f71aa84f-dcd5-4bb4-92f9-c1840aa42ece"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331017, 6405, 1379, 35, 96, "Input",ExpressionUUID->"3ed733fb-b45c-43c1-9435-08a07d0a6f54"],
Cell[332399, 6442, 70759, 1290, 244, "Output",ExpressionUUID->"ebc85bc6-d716-426e-ad23-3ebb11aa4518"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403195, 7737, 1204, 32, 96, "Input",ExpressionUUID->"93e77e6d-3236-4f43-805a-dcc0c0bf580e"],
Cell[404402, 7771, 94633, 1696, 246, "Output",ExpressionUUID->"9f827e4c-0cef-426a-a2ed-77f97d1ce96e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499072, 9472, 410, 10, 31, "Input",ExpressionUUID->"36475409-cafd-4792-bc77-634f885c32be"],
Cell[499485, 9484, 45517, 807, 247, "Output",ExpressionUUID->"654498e2-e4d7-48b9-80ca-90fb7f1b1c77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[545039, 10296, 589, 15, 29, "Input",ExpressionUUID->"2fb4bbff-11de-49bb-99ad-cada0168667f"],
Cell[545631, 10313, 6217, 153, 214, "Output",ExpressionUUID->"09383cd9-43b2-4e0e-b916-4e95ea9750d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551885, 10471, 280, 5, 31, "Input",ExpressionUUID->"80d9ac47-90a8-46da-832e-d8093985660f"],
Cell[552168, 10478, 130786, 2572, 511, "Output",ExpressionUUID->"c649092b-15b0-425f-9cd9-ef9c7afd5cf1"]
}, Open  ]]
}, Open  ]]
}
]
*)

