(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     41559,        864]
NotebookOptionsPosition[     39249,        816]
NotebookOutlinePosition[     39649,        832]
CellTagsIndexPosition[     39606,        829]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "f1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"f1", ",", "Listable"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "^", "2"}]}]}], "Input",
 CellChangeTimes->{{3.9082475782904377`*^9, 3.908247606202406*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"a123509e-dd89-4074-9d7d-e043777f106c"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "f2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "^", "2"}]}]}], "Input",
 CellChangeTimes->{{3.9082475782904377`*^9, 3.908247618368589*^9}, {
  3.908248596000326*^9, 3.908248610384016*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"2fd442e1-c83d-4b8c-a662-846a7326ea86"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myList", "=", 
   RowBox[{"Range", "[", "1000000", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myListN", "=", 
   RowBox[{"N", "[", 
    RowBox[{"Range", "[", "1000000", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9082477672399073`*^9, 3.908247775947891*^9}, 
   3.9082478595729*^9, 3.9082485691208*^9, {3.908248635002933*^9, 
   3.908248681648425*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"5a932c27-1fe4-4981-9e5e-e9cb13c02485"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"Association", "[", 
   RowBox[{"type", "->", "\"\<Time [s]\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9082488192553263`*^9, 3.90824882498277*^9}, {
  3.9082507017247562`*^9, 3.908250706039748*^9}, {3.908250787056625*^9, 
  3.908250787498398*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"66e63a40-cdb6-48e0-af0c-f2baade36787"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"type", "\[Rule]", "\<\"Time [s]\"\>"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.908248825701365*^9, 3.908250707579927*^9, 
  3.908250787865988*^9, 3.908250949063197*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"78425f63-7f33-40b9-86f7-392cb7079a43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AppendTo", "[", 
  RowBox[{"result", ",", 
   RowBox[{"listableIntegers", "->", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"f1", "[", "myList", "]"}], ";"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.908247784798151*^9, 3.9082477958211193`*^9}, {
  3.908248807464967*^9, 3.9082488177279873`*^9}, {3.908248860417789*^9, 
  3.908248890167151*^9}, {3.9082489458439817`*^9, 3.908248946167362*^9}, {
  3.908250723887011*^9, 3.9082507289167643`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"9e7a05b6-ce28-45ea-879a-bd37fe29d68e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"type", "\[Rule]", "\<\"Time [s]\"\>"}], ",", 
   RowBox[{"listableIntegers", "\[Rule]", "0.475589`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.908248890951363*^9, 3.90824894721354*^9, {3.90825070911012*^9, 
   3.908250729955723*^9}, 3.908250791504355*^9, 3.908250949556156*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"ec145e10-dde3-4763-a397-ccbcf3870f9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AppendTo", "[", 
  RowBox[{"result", ",", 
   RowBox[{"listableFloat", "->", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"f1", "[", "myListN", "]"}], ";"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.908247784798151*^9, 3.9082477958211193`*^9}, 
   3.908248713592608*^9, {3.908250736672303*^9, 3.908250752972999*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"c5c4d677-80aa-43d5-8db3-99822f02d4fa"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"type", "\[Rule]", "\<\"Time [s]\"\>"}], ",", 
   RowBox[{"listableIntegers", "\[Rule]", "0.475589`"}], ",", 
   RowBox[{"listableFloat", "\[Rule]", "0.48464`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.9082477962092867`*^9, 3.908247860795163*^9, {3.9082485712476788`*^9, 
   3.908248641100062*^9}, {3.908248707350259*^9, 3.908248714626307*^9}, 
   3.908250754014904*^9, 3.9082507923007936`*^9, 3.908250950058514*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"f151c977-887c-46cc-83f2-8d6d17e30f44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AppendTo", "[", 
  RowBox[{"result", ",", 
   RowBox[{"builinIntegers", "->", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"f2", "[", "myList", "]"}], ";"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.908247784798151*^9, 3.9082478043080797`*^9}, {
  3.90825076495438*^9, 3.9082507782859907`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"10e17ee9-0e4d-45d5-8101-11f205961ec2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"type", "\[Rule]", "\<\"Time [s]\"\>"}], ",", 
   RowBox[{"listableIntegers", "\[Rule]", "0.475589`"}], ",", 
   RowBox[{"listableFloat", "\[Rule]", "0.48464`"}], ",", 
   RowBox[{"builinIntegers", "\[Rule]", "0.003889`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.9082477962092867`*^9, 3.908247804665421*^9}, 
   3.90824786223314*^9, {3.908248573595831*^9, 3.9082486422333508`*^9}, 
   3.90824871800392*^9, {3.908250778872808*^9, 3.908250792736318*^9}, 
   3.908250950097102*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"c485da6b-4044-4d5e-84a5-72987ef63456"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AppendTo", "[", 
  RowBox[{"result", ",", 
   RowBox[{"builinFloat", "->", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"f2", "[", "myListN", "]"}], ";"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.908248733615089*^9, {3.908250798265869*^9, 3.908250808087635*^9}, {
   3.908250867786656*^9, 3.908250886406536*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"6bc99e72-9e3e-4e93-a699-9995203f4d71"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"type", "\[Rule]", "\<\"Time [s]\"\>"}], ",", 
   RowBox[{"listableIntegers", "\[Rule]", "0.475589`"}], ",", 
   RowBox[{"listableFloat", "\[Rule]", "0.48464`"}], ",", 
   RowBox[{"builinIntegers", "\[Rule]", "0.003889`"}], ",", 
   RowBox[{"builinFloat", "\[Rule]", "0.001722`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.908248734156981*^9, 3.908250872739534*^9, {3.9082509401147957`*^9, 
   3.908250950120337*^9}},
 CellLabel->
  "Out[108]=",ExpressionUUID->"dbb2addc-5245-4492-add3-89cafb710866"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AppendTo", "[", 
  RowBox[{"result", ",", 
   RowBox[{"mapIntegers", "->", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "^", "2"}], "&"}], ",", "myList"}], "]"}], ";"}], 
      "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.908247784798151*^9, 3.9082477958211193`*^9}, {
  3.908247827709569*^9, 3.908247834099468*^9}, {3.908250878928565*^9, 
  3.9082508981925907`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"f65f132f-9381-4e51-aaa7-e7485a52c63f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"type", "\[Rule]", "\<\"Time [s]\"\>"}], ",", 
   RowBox[{"listableIntegers", "\[Rule]", "0.475589`"}], ",", 
   RowBox[{"listableFloat", "\[Rule]", "0.48464`"}], ",", 
   RowBox[{"builinIntegers", "\[Rule]", "0.003889`"}], ",", 
   RowBox[{"builinFloat", "\[Rule]", "0.001722`"}], ",", 
   RowBox[{"mapIntegers", "\[Rule]", "0.022987`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.9082477962092867`*^9, {3.9082478358965063`*^9, 3.9082478645402203`*^9}, {
   3.908248575120269*^9, 3.908248643932089*^9}, 3.908248742113386*^9, 
   3.908250898552515*^9, 3.908250950147501*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"6384e8b3-70f2-4d93-9644-05e63d66c073"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AppendTo", "[", 
  RowBox[{"result", ",", 
   RowBox[{"mapFloat", "->", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "^", "2"}], "&"}], ",", "myListN"}], "]"}], ";"}], 
      "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.908247784798151*^9, 3.9082477958211193`*^9}, {
   3.908247827709569*^9, 3.908247834099468*^9}, 3.908248744696089*^9, {
   3.908250903543882*^9, 3.908250912625869*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"d4ba761e-d95b-460e-a7b2-0fc04566bb62"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"type", "\[Rule]", "\<\"Time [s]\"\>"}], ",", 
   RowBox[{"listableIntegers", "\[Rule]", "0.475589`"}], ",", 
   RowBox[{"listableFloat", "\[Rule]", "0.48464`"}], ",", 
   RowBox[{"builinIntegers", "\[Rule]", "0.003889`"}], ",", 
   RowBox[{"builinFloat", "\[Rule]", "0.001722`"}], ",", 
   RowBox[{"mapIntegers", "\[Rule]", "0.022987`"}], ",", 
   RowBox[{"mapFloat", "\[Rule]", "0.087906`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.9082477962092867`*^9, {3.9082478358965063`*^9, 3.9082478645402203`*^9}, {
   3.908248575120269*^9, 3.908248643932089*^9}, 3.908248745367817*^9, 
   3.908250913224668*^9, 3.908250950239938*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"291fb1e7-520e-4a6a-90ae-240b691b5bfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", "result", "]"}]], "Input",
 CellChangeTimes->{{3.908248917899048*^9, 3.908248937279022*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"395c9afa-46eb-4396-b669-ad3b92ff6b4c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|$CellContext`type -> 
       "Time [s]", $CellContext`listableIntegers -> 
       0.475589, $CellContext`listableFloat -> 
       0.48464, $CellContext`builinIntegers -> 
       0.003889, $CellContext`builinFloat -> 
       0.001722, $CellContext`mapIntegers -> 0.022987, $CellContext`mapFloat -> 
       0.087906|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 7, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 7], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 7, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 7], 
     "Path" -> {}, "DisplayedRowCount" -> 7, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 7, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["type", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[$CellContext`type]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Time [s]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[$CellContext`type]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["listableIntegers", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[$CellContext`listableIntegers]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.475589"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[$CellContext`listableIntegers]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["listableFloat", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[$CellContext`listableFloat]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.48464"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[$CellContext`listableFloat]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["builinIntegers", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[$CellContext`builinIntegers]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.003889"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[$CellContext`builinIntegers]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["builinFloat", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[$CellContext`builinFloat]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.001722"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[$CellContext`builinFloat]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["mapIntegers", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[$CellContext`mapIntegers]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.022987"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[$CellContext`mapIntegers]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["mapFloat", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[$CellContext`mapFloat]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.087906"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[$CellContext`mapFloat]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{243.60000000000002`, {103.6875, 109.3125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{243.60000000000002`, {103.6875, 109.3125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.908248926827759*^9, 3.908248952705909*^9}, 
   3.908250711736127*^9, {3.908250756817189*^9, 3.908250781240077*^9}, {
   3.908250914184155*^9, 3.9082509502722*^9}},
 CellLabel->
  "Out[111]=",ExpressionUUID->"5d0f8de7-f339-46f5-ba73-6c929b3b8a31"]
}, Open  ]]
},
WindowSize->{606, 683.25},
WindowMargins->{{Automatic, 649.5}, {Automatic, 167.25}},
FrontEndVersion->"13.3 for Linux x86 (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"efcfbd9e-f8a4-4333-9bde-d52989aa4c7d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 413, 8, 70, "Input",ExpressionUUID->"a123509e-dd89-4074-9d7d-e043777f106c"],
Cell[974, 30, 368, 8, 50, "Input",ExpressionUUID->"2fd442e1-c83d-4b8c-a662-846a7326ea86"],
Cell[1345, 40, 501, 12, 50, "Input",ExpressionUUID->"5a932c27-1fe4-4981-9e5e-e9cb13c02485"],
Cell[CellGroupData[{
Cell[1871, 56, 385, 8, 31, "Input",ExpressionUUID->"66e63a40-cdb6-48e0-af0c-f2baade36787"],
Cell[2259, 66, 329, 7, 38, "Output",ExpressionUUID->"78425f63-7f33-40b9-86f7-392cb7079a43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2625, 78, 640, 14, 50, "Input",ExpressionUUID->"9e7a05b6-ce28-45ea-879a-bd37fe29d68e"],
Cell[3268, 94, 454, 10, 38, "Output",ExpressionUUID->"ec145e10-dde3-4763-a397-ccbcf3870f9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3759, 109, 511, 12, 29, "Input",ExpressionUUID->"c5c4d677-80aa-43d5-8db3-99822f02d4fa"],
Cell[4273, 123, 593, 12, 62, "Output",ExpressionUUID->"f151c977-887c-46cc-83f2-8d6d17e30f44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4903, 140, 489, 12, 29, "Input",ExpressionUUID->"10e17ee9-0e4d-45d5-8101-11f205961ec2"],
Cell[5395, 154, 653, 13, 62, "Output",ExpressionUUID->"c485da6b-4044-4d5e-84a5-72987ef63456"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6085, 172, 510, 13, 29, "Input",ExpressionUUID->"6bc99e72-9e3e-4e93-a699-9995203f4d71"],
Cell[6598, 187, 592, 13, 82, "Output",ExpressionUUID->"dbb2addc-5245-4492-add3-89cafb710866"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7227, 205, 629, 17, 50, "Input",ExpressionUUID->"f65f132f-9381-4e51-aaa7-e7485a52c63f"],
Cell[7859, 224, 748, 15, 82, "Output",ExpressionUUID->"6384e8b3-70f2-4d93-9644-05e63d66c073"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8644, 244, 649, 17, 50, "Input",ExpressionUUID->"d4ba761e-d95b-460e-a7b2-0fc04566bb62"],
Cell[9296, 263, 803, 16, 103, "Output",ExpressionUUID->"291fb1e7-520e-4a6a-90ae-240b691b5bfc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10136, 284, 214, 4, 29, "Input",ExpressionUUID->"395c9afa-46eb-4396-b669-ad3b92ff6b4c"],
Cell[10353, 290, 28880, 523, 232, "Output",ExpressionUUID->"5d0f8de7-f339-46f5-ba73-6c929b3b8a31"]
}, Open  ]]
}
]
*)

