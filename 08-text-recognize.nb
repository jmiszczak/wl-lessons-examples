(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     86796,       1646]
NotebookOptionsPosition[     84046,       1587]
NotebookOutlinePosition[     84444,       1603]
CellTagsIndexPosition[     84401,       1600]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Text recognition", "Subtitle",
 CellChangeTimes->{{3.903002184646792*^9, 
  3.9030021897350082`*^9}},ExpressionUUID->"d5f1d764-9080-45c6-81bf-\
017ca4f32bd9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"imgWithText", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<Ch07-example-text.png\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.902886345932233*^9, 3.902886385363505*^9}, {
  3.903001522869281*^9, 3.903001527708075*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"c1d3df72-0e61-477f-9882-ddacb08e9496"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
tBbJJLSQK1cuDG261movS4rt80pI52DbRFNIESdPngxLm2eDVhQg1ahRI+SQ
yE7Rbr169ZBHvffeeyTlNmWAT58zrB4+fFirVi3VSp1lYIalfX+ZPDWmM3oW
FlKvDAMcr+B3ER89etS8eXPWApF1w41DidqJOcj+9ttv2p2cKEE50mM6q4Iv
coB9w4YsAB4JNuMIPzBgErIh0qSkJMd/tlKlHSP6Iu06UVBGcKT7HOHbxbkp
D7oNOWKW1szmyZMn7PoY2jXa9pMBiuPDroFvBPH+auH4wHQuzp07R/fhw+2r
vkuDUzYKoOPaz/5owwQIwvzYlW0CCEr1GwcXL15U1bl165b2Jw84TKo4JIB4
VfsKaGVdxvhC4MBZIeDGjRukF6AD80DqJW5RBImJidofbv7xxx+1PyqhAjqL
Lug+U0bhmTNnqKkj8cbUQ+WFwLD2azYEHKlatgQHYRdLip5tE2BW6+bmpv2O
PbF8IjFc1QpW0NJ06RsNK+cCTehuloAtce4ST72yJmDbqq0dBJjtsr/1IyEh
8U+CHPgSEnYBKc3x48fxf9y4ceyv471sYDfp9bYhe9GX4ODy5csVK1Ykn56g
gEZ69OhBvlYqISHxz4Mc+BISdoH8OvbFixdr167N/oTZSwVfX1+6+/fw4cPu
7u7iX6bNCvQlTJGUlDR48OCQkJCoqKi4uLjIyEhMf1avXp3ZfElISKQj5MCX
kBDHvn373n777ZkzZwr+VNM/En5+fj4+Pjt27Jg3b163bt3oe1XZhb6EIFJT
Uy9cuICJT9bZ1SMhIZHekANfQkIQjx49Ih9veZlx48YNuAvVx+ezEX0JCQkJ
CQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJ
CQkJCQkJCQkJCYksjmfPnt28edOuH5qXEMGLFy9SUlKMfmBIInMB7SQnJ9+5
cyezGZHIHoCfvHHjhuM/JfmPhPR1Es5FOllU+hnqPyOgzJ8/v3r16jly5KC/
Ri3hFBw5cqRNmzYuLi79+vXLbF4k1Ni1a1fz5s1h9v/+97+dThwOJzQ0lP8b
lBJOAWayAQEBNWrUKF68eGBgoG6dM2fOVKhQwcPD4+23346IiLDW0OLFi2vW
rAmD2b9/v3V2MwQXLlzI4F9bkL4uSyEr+x9B3tLJotLPUP9JAeX27dvZOiHc
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
V67MvvZoBEEfkjGOTkkHe8NAg72VK1cOZIsUKYIMH6EcFGjWxPGNnJhiuTlO
R6z5H9MWRWCqOxVv5PPLuvIRj0pGcISs5UjHDyh8T27kXXWFpnAduzXcuHGD
zDLgo+Aorl69qtpAgqbFP8koAhD87bffVDuuTQGbJCIFM0lJSdohDGGCf/hD
EWpoHTwg/6cTZ9WNfGpOlwlLmSMcTBzYqRaYt7bbx5oKVBSsSQBjTXujqToc
h0iXYfxnzpzRraNrDxnAtoXmdCVsekmlUM5wMx2JHHCGleM2aQHnzp2jX6OC
cNjv0uCYLr8otqFHnTAFW4ECBKEj1WNWqEyVU128eFF1461bt7S/icDhUMsk
AcT7559/qgpRU8uVSBOK7SVu+r07ZyFjHJ0T7Q2qad68OZvDg0OE6Xr16qmW
nox8o10Ryq7mnDJwxFvkw7Lu7JKPOBwk60isNwooHE9uzbtyHLuEhISEhISz
MHXq1AxO1LMgYmNjVVvOCFasWPHGG29k9+YypUUJCQkJCQmJ7IJLly455dMW
2R2XL1+uWLEi+SQLRVpaWo8ePehXvrNvc5nSooSEhISEhER2wZw5c7QPsl9O
JCUlDR48OCQkJCoqKi4uLjIy0t/ff/Xq1f+M5jKlRQkJCQkJCQmJ7IjU1NQL
Fy78+uuv6bphOLOay5QWJSQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk
JCQkJCQkJCQkJCQkJCQkJCQkJCQkJNIbqamp165dox8Gz4IQ4fDFixf37t27
c+dOhnGVpfD8+fO7d+8mJydnFgNZ34oyBf/5z3/i4uLor6cJwunG7AhBcq/I
LyFKSEhISGRfhIaGli1bNkeOHGfOnMlsXvQhwmFiYmKrVq1Q57333stI3rII
du3a1aRJE3R/2rRpmcJA1reijAfyKH9//0mTJq1Zs6ZQoULaX0wzgtON2RGC
R44cad26Ne4dMmSIU5iRkJCQkMiyOHjwYBYP5YIcNmrUKBMTwufPn2/bti0T
SZUvXz6zEkIlY63IiaJOPyxfvrx27do4AKvVq1fX/W1fxbgvTjdmRwg2a9Ys
ayaE2cISJCQkJLILTpw4kcUTQkEO27Ztm4kJ4bVr1yZOnJiJpGrUqJGJCWFG
WpETRZ1+8PX1fffdd02rGfXF6cbsCMH27dtnzYQwW1iChISERHaBTAidgpUr
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
Y+CyyLoNSpBTrV692sItyn8jEabDO3fuBG+3bt2Cs2rXrh1Y4hAEkREjRpAu
xMfHI+dZtmwZPCdyXUzA4RJr1qwZHh6u2Dxw165dg4OD0Xc08f7779Md13D7
1apVQ+KhesDHwnH2TDnUQpCyke5YDBgwgH4PDUA1mszw8euvv1asWBHEp0yZ
curUKVODsZcUR7B79uzx8fEpVKgQtAODQSxbuXKlm5sbuo8shWx127FjB8L6
jBkzoqOjEXnZ+Y4WnLZoHUEdnThxolSpUmzqxScuokp75UMqQCx169atUKFC
5cqVIStwi0A/ffp0yphdIuJo9ueff8YkAjlJiRIlkCdDF3bpWtCYxbl1hODR
o0f9/PyKFi1apkwZ3EtfIsaNmG4g0Vq/fv3atWtxIyyB002OV6HA/AL2Y9eN
RoNOty/W/C2SXi8vL/arOBISEi8hrl+/TtdAVLh69er58+czmB+KtLS00zbQ
Bxn379+3lwimxuRLX7gXfhUTYfIsmDwURmj7zQZ2bk6wePHilJSU9GaPw6GD
4OuOPBKlp+SlY0GAvV9++UU3W7bXYHRJOS5YsPHHH3+I1BRsS0RH2hsd74i9
8nn48CGCPjuzS01N3bdvH/IcZBosEXER0foOugKO2Yi0bhe3ziJI9xCiskj3
Tb2KYtsuqN2sa3ojf9A5VzgSEhISEixUn1+TkMj6iImJYb9vTDFu3Dh256GE
ILQvlVhDcnIy/bp1WFgY+Wy4hISEhETWx+nTpzm/RyAhkTVx+fJlT09P1XrR
/fv3GzRokJCQkFlcZV9AmE55ikr2Daampl67do3/6r2EhISERJZCRESEU57b
SkhkME6ePDlo0KBJkyZt2LAhNjY2PDx84MCB8fHxmc1XNsOePXv69etXunTp
atWqBQQEkA0DlpGYmOjn57d+/XpkhrrPkSUkJCQkJCQknI7Hjx///vvvp0+f
tmt3qET64fnz5+QbDhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhIS
EhISEhISEhISEhISGYz/A3Yqo7E=
    "], {{0, 83.}, {859., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{859., 83.},
  PlotRange->{{0, 859.}, {0, 83.}}]], "Output",
 CellChangeTimes->{{3.9028863705370483`*^9, 3.9028863858222303`*^9}, 
   3.9030015290792933`*^9, 3.903002074718267*^9, 3.903003356379637*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"109b6a44-8b8e-4e8f-8b11-9df3a86f6b1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"text", "=", 
  RowBox[{"TextRecognize", "[", "imgWithText", "]"}]}]], "Input",
 CellChangeTimes->{{3.902886392898551*^9, 3.902886394997443*^9}, 
   3.9030015308651648`*^9, {3.9030019916033287`*^9, 3.903001993127289*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"de5008d6-33e5-4e53-b6ee-58f933b16d72"],

Cell[BoxData["\<\"The goal of this lesson is to start working with \
Mathematica and Wolfram Language. We\\ndemonstrate how one can obtain access \
to Mathematica, how to get going with the basi\\ncommands, and how to take \
advantage of the help s\\n\\nem.\"\>"], "Output",
 CellChangeTimes->{3.902886395810293*^9, 3.903001531894762*^9, 
  3.903001993491798*^9, 3.90300207572052*^9, 3.903003356430479*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"fb1065cb-7dc4-4cbc-9ea3-1974c21813b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LanguageIdentify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.903001994666304*^9, 3.9030020025274973`*^9}, 
   3.903002071606845*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"63df5600-c44c-4888-853c-8e14abdfae13"],

Cell[BoxData[
 TemplateBox[{"\"English\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"Language\"", ",", "\"English\""}], "]"}], 
   "\"Entity[\\\"Language\\\", \\\"English\\\"]\"", "\"language\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.903002016454475*^9, 3.903002076487216*^9, 
  3.903003356445951*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"ff3ad3e8-3899-4220-b62e-13495fcb0676"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["imgWithText"], "Input",
 CellChangeTimes->{{3.903001878350459*^9, 3.903001880489871*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"2f1696ef-e9b5-453d-8eb2-03dda48517c5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
tBbJJLSQK1cuDG261movS4rt80pI52DbRFNIESdPngxLm2eDVhQg1ahRI+SQ
yE7Rbr169ZBHvffeeyTlNmWAT58zrB4+fFirVi3VSp1lYIalfX+ZPDWmM3oW
FlKvDAMcr+B3ER89etS8eXPWApF1w41DidqJOcj+9ttv2p2cKEE50mM6q4Iv
coB9w4YsAB4JNuMIPzBgErIh0qSkJMd/tlKlHSP6Iu06UVBGcKT7HOHbxbkp
D7oNOWKW1szmyZMn7PoY2jXa9pMBiuPDroFvBPH+auH4wHQuzp07R/fhw+2r
vkuDUzYKoOPaz/5owwQIwvzYlW0CCEr1GwcXL15U1bl165b2Jw84TKo4JIB4
VfsKaGVdxvhC4MBZIeDGjRukF6AD80DqJW5RBImJidofbv7xxx+1PyqhAjqL
Lug+U0bhmTNnqKkj8cbUQ+WFwLD2azYEHKlatgQHYRdLip5tE2BW6+bmpv2O
PbF8IjFc1QpW0NJ06RsNK+cCTehuloAtce4ST72yJmDbqq0dBJjtsr/1IyEh
8U+CHPgSEnYBKc3x48fxf9y4ceyv471sYDfp9bYhe9GX4ODy5csVK1Ykn56g
gEZ69OhBvlYqISHxz4Mc+BISdoH8OvbFixdr167N/oTZSwVfX1+6+/fw4cPu
7u7iX6bNCvQlTJGUlDR48OCQkJCoqKi4uLjIyEhMf1avXp3ZfElISKQj5MCX
kBDHvn373n777ZkzZwr+VNM/En5+fj4+Pjt27Jg3b163bt3oe1XZhb6EIFJT
Uy9cuICJT9bZ1SMhIZHekANfQkIQjx49Ih9veZlx48YNuAvVx+ezEX0JCQkJ
CQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJ
CQkJCQkJCQkJCYksjmfPnt28edOuH5qXEMGLFy9SUlKMfmBIInMB7SQnJ9+5
cyezGZHIHoCfvHHjhuM/JfmPhPR1Es5FOllU+hnqPyOgzJ8/v3r16jly5KC/
Ri3hFBw5cqRNmzYuLi79+vXLbF4k1Ni1a1fz5s1h9v/+97+dThwOJzQ0lP8b
lBJOAWayAQEBNWrUKF68eGBgoG6dM2fOVKhQwcPD4+23346IiLDW0OLFi2vW
rAmD2b9/v3V2MwQXLlzI4F9bkL4uSyEr+x9B3tLJotLPUP9JAeX27dvZOiHc
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
V67MvvZoBEEfkjGOTkkHe8NAg72VK1cOZIsUKYIMH6EcFGjWxPGNnJhiuTlO
R6z5H9MWRWCqOxVv5PPLuvIRj0pGcISs5UjHDyh8T27kXXWFpnAduzXcuHGD
zDLgo+Aorl69qtpAgqbFP8koAhD87bffVDuuTQGbJCIFM0lJSdohDGGCf/hD
EWpoHTwg/6cTZ9WNfGpOlwlLmSMcTBzYqRaYt7bbx5oKVBSsSQBjTXujqToc
h0iXYfxnzpzRraNrDxnAtoXmdCVsekmlUM5wMx2JHHCGleM2aQHnzp2jX6OC
cNjv0uCYLr8otqFHnTAFW4ECBKEj1WNWqEyVU128eFF1461bt7S/icDhUMsk
AcT7559/qgpRU8uVSBOK7SVu+r07ZyFjHJ0T7Q2qad68OZvDg0OE6Xr16qmW
nox8o10Ryq7mnDJwxFvkw7Lu7JKPOBwk60isNwooHE9uzbtyHLuEhISEhISz
MHXq1AxO1LMgYmNjVVvOCFasWPHGG29k9+YypUUJCQkJCQmJ7IJLly455dMW
2R2XL1+uWLEi+SQLRVpaWo8ePehXvrNvc5nSooSEhISEhER2wZw5c7QPsl9O
JCUlDR48OCQkJCoqKi4uLjIy0t/ff/Xq1f+M5jKlRQkJCQkJCQmJ7IjU1NQL
Fy78+uuv6bphOLOay5QWJSQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk
JCQkJCQkJCQkJCQkJCQkJCQkJCQkJNIbqamp165dox8Gz4IQ4fDFixf37t27
c+dOhnGVpfD8+fO7d+8mJydnFgNZ34oyBf/5z3/i4uLor6cJwunG7AhBcq/I
LyFKSEhISGRfhIaGli1bNkeOHGfOnMlsXvQhwmFiYmKrVq1Q57333stI3rII
du3a1aRJE3R/2rRpmcJA1reijAfyKH9//0mTJq1Zs6ZQoULaX0wzgtON2RGC
R44cad26Ne4dMmSIU5iRkJCQkMiyOHjwYBYP5YIcNmrUKBMTwufPn2/bti0T
SZUvXz6zEkIlY63IiaJOPyxfvrx27do4AKvVq1fX/W1fxbgvTjdmRwg2a9Ys
ayaE2cISJCQkJLILTpw4kcUTQkEO27Ztm4kJ4bVr1yZOnJiJpGrUqJGJCWFG
WpETRZ1+8PX1fffdd02rGfXF6cbsCMH27dtnzYQwW1iChISERHaBTAidgpUr
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
Y+CyyLoNSpBTrV692sItyn8jEabDO3fuBG+3bt2Cs2rXrh1Y4hAEkREjRpAu
xMfHI+dZtmwZPCdyXUzA4RJr1qwZHh6u2Dxw165dg4OD0Xc08f7779Md13D7
1apVQ+KhesDHwnH2TDnUQpCyke5YDBgwgH4PDUA1mszw8euvv1asWBHEp0yZ
curUKVODsZcUR7B79uzx8fEpVKgQtAODQSxbuXKlm5sbuo8shWx127FjB8L6
jBkzoqOjEXnZ+Y4WnLZoHUEdnThxolSpUmzqxScuokp75UMqQCx169atUKFC
5cqVIStwi0A/ffp0yphdIuJo9ueff8YkAjlJiRIlkCdDF3bpWtCYxbl1hODR
o0f9/PyKFi1apkwZ3EtfIsaNmG4g0Vq/fv3atWtxIyyB002OV6HA/AL2Y9eN
RoNOty/W/C2SXi8vL/arOBISEi8hrl+/TtdAVLh69er58+czmB+KtLS00zbQ
Bxn379+3lwimxuRLX7gXfhUTYfIsmDwURmj7zQZ2bk6wePHilJSU9GaPw6GD
4OuOPBKlp+SlY0GAvV9++UU3W7bXYHRJOS5YsPHHH3+I1BRsS0RH2hsd74i9
8nn48CGCPjuzS01N3bdvH/IcZBosEXER0foOugKO2Yi0bhe3ziJI9xCiskj3
Tb2KYtsuqN2sa3ojf9A5VzgSEhISEixUn1+TkMj6iImJYb9vTDFu3Dh256GE
ILQvlVhDcnIy/bp1WFgY+Wy4hISEhETWx+nTpzm/RyAhkTVx+fJlT09P1XrR
/fv3GzRokJCQkFlcZV9AmE55ikr2Daampl67do3/6r2EhISERJZCRESEU57b
SkhkME6ePDlo0KBJkyZt2LAhNjY2PDx84MCB8fHxmc1XNsOePXv69etXunTp
atWqBQQEkA0DlpGYmOjn57d+/XpkhrrPkSUkJCQkJCQknI7Hjx///vvvp0+f
tmt3qET64fnz5+QbDhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhIS
EhISEhISEhISEhISGYz/A3Yqo7E=
    "], {{0, 83.}, {859., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{859., 83.},
  PlotRange->{{0, 859.}, {0, 83.}}]], "Output",
 CellChangeTimes->{3.9030018809565287`*^9, 3.903002079310603*^9, 
  3.903003356463935*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"020ee0ef-51a6-4417-b0ef-6a9d0757871d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LanguageData", "[", 
  RowBox[{"\"\<Russian\>\"", ",", "\"\<WritingSystem\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.903002586138163*^9, 3.903002671467022*^9}, {
  3.9030028136415367`*^9, 3.9030029400914707`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"23d4abd0-e631-44be-a9de-0e3cbb3469f8"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"\"Cyrillic alphabet\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"WritingSystem\"", ",", "\"CyrillicAlphabet\""}], "]"}], 
    "\"Entity[\\\"WritingSystem\\\", \\\"CyrillicAlphabet\\\"]\"", 
    "\"writing system\""},
   "Entity"], "}"}]], "Output",
 CellChangeTimes->{{3.903002607570381*^9, 3.903002667471031*^9}, {
   3.903002826527649*^9, 3.903002866431405*^9}, {3.903002896509306*^9, 
   3.903002941952882*^9}, 3.9030033564796257`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"f86bcd12-41e5-4135-a10d-af8726aa54ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Alphabet", "[", "\"\<Korean\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9030025510324593`*^9, 3.903002552055711*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"39bf6e39-da98-4c6c-bd28-27ba5dd7770f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\:3131\"\>", ",", "\<\"\:3132\"\>", ",", "\<\"\:3134\"\>", 
   ",", "\<\"\:3137\"\>", ",", "\<\"\:3138\"\>", ",", "\<\"\:3139\"\>", 
   ",", "\<\"\:3141\"\>", ",", "\<\"\:3142\"\>", ",", "\<\"\:3143\"\>", 
   ",", "\<\"\:3145\"\>", ",", "\<\"\:3146\"\>", ",", "\<\"\:3147\"\>", 
   ",", "\<\"\:3148\"\>", ",", "\<\"\:3149\"\>", ",", "\<\"\:314a\"\>", 
   ",", "\<\"\:314b\"\>", ",", "\<\"\:314c\"\>", ",", "\<\"\:314d\"\>", 
   ",", "\<\"\:314e\"\>", ",", "\<\"\:314f\"\>", ",", "\<\"\:3150\"\>", 
   ",", "\<\"\:3151\"\>", ",", "\<\"\:3152\"\>", ",", "\<\"\:3153\"\>", 
   ",", "\<\"\:3154\"\>", ",", "\<\"\:3155\"\>", ",", "\<\"\:3156\"\>", 
   ",", "\<\"\:3157\"\>", ",", "\<\"\:3158\"\>", ",", "\<\"\:3159\"\>", 
   ",", "\<\"\:315a\"\>", ",", "\<\"\:315b\"\>", ",", "\<\"\:315c\"\>", 
   ",", "\<\"\:315d\"\>", ",", "\<\"\:315e\"\>", ",", "\<\"\:315f\"\>", 
   ",", "\<\"\:3160\"\>", ",", "\<\"\:3161\"\>", ",", "\<\"\:3162\"\>", 
   ",", "\<\"\:3163\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.903002554074463*^9, 3.903003356496875*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"11e9dc33-ddc1-4af9-a0ab-12f6ff261de5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomWord", "[", 
  RowBox[{"8", ",", 
   RowBox[{"Language", "\[Rule]", "\"\<Polish\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9030030568988047`*^9, 3.903003058099688*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"b6de2c5b-10d4-4d83-8104-6ef0021f582c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"hartlej\"\>", ",", "\<\"wy\[CAcute]wiczywszy\"\>", 
   ",", "\<\"ichtiologiczny\"\>", ",", "\<\"r\[OAcute]wnonocny\"\>", 
   ",", "\<\"nitownica\"\>", ",", "\<\"podziela\[CAcute]\"\>", 
   ",", "\<\"romboidowy\"\>", ",", "\<\"teleodbiornik\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{3.903003065236189*^9, 3.9030033565133753`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"b84dcbe7-d07a-480d-bb00-07b338a66487"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification", "Subtitle",
 CellChangeTimes->{{3.90300219300436*^9, 
  3.903002196806691*^9}},ExpressionUUID->"a2b837fc-e98f-4a20-b58b-\
d11b80e2ebc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Classify"}]], "Input",
 CellChangeTimes->{{3.902886465455266*^9, 3.902886468765259*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"84b4e292-d121-4457-9055-aca3df3fd42f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Classify",
              ButtonNote->"paclet:ref/Classify"],
             "\"paclet:ref/Classify\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Classify\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"example\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"class\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"example\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"class\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\"]\\\"}]\\) generates a \
\\!\\(\\*RowBox[{\\\"ClassifierFunction\\\", \\\"[\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\"]\\\"}]\\) based on the examples and \
classes given.\\n\\!\\(\\*RowBox[{\\\"Classify\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"example\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"example\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"class\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"class\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) also generates a \\!\\(\\*RowBox[{\
\\\"ClassifierFunction\\\", \\\"[\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"], \\\"]\\\"}]\\) based on the examples and classes \
given.\\n\\!\\(\\*RowBox[{\\\"Classify\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftAssociation]\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"class\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", RowBox[{\\\"{\
\\\", RowBox[{SubscriptBox[StyleBox[\\\"example\\\", \\\"TI\\\"], StyleBox[\\\
\"11\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"example\\\", \
\\\"TI\\\"], StyleBox[\\\"12\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"class\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"example\\\", \\\"TI\\\"], StyleBox[\\\"21\\\
\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"\
\[RightAssociation]\\\"}], \\\"]\\\"}]\\) generates a \
\\!\\(\\*RowBox[{\\\"ClassifierFunction\\\", \\\"[\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\"]\\\"}]\\) based on an association of \
classes with their examples.\\n\\!\\(\\*RowBox[{\\\"Classify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"training\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"data\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) attempts to classify \\!\
\\(\\*StyleBox[\\\"data\\\", \\\"TI\\\"]\\) using a classifier function \
deduced from the training set given.\\n\\!\\(\\*RowBox[{\\\"Classify\\\", \
\\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"name\\\\\\\",\\\\\
\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"data\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) attempts to classify \\!\
\\(\\*StyleBox[\\\"data\\\", \\\"TI\\\"]\\) using the built-in classifier \
function represented by \\\"\\!\\(\\*StyleBox[\\\"name\\\", \
\\\"TI\\\"]\\)\\\".\\n\\!\\(\\*RowBox[{\\\"Classify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"prop\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the specified property of the \
classification associated with \\!\\(\\*StyleBox[\\\"data\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Classify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"classifier\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"opts\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) takes an existing \
classifier function and modifies it with the new options given.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Classify", 
                    "paclet:ref/Classify", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Classify.html"]\
, None}, "http://reference.wolfram.com/language/ref/Classify.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AcceptanceThreshold", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AnomalyDetector", "\[Rule]", "None"}]},
                    {
                    
                    RowBox[{"\<\"BatchProcessing\"\>", "\[Rule]", 
                    "Automatic"}]},
                    {
                    RowBox[{"ClassPriors", "\[Rule]", "Automatic"}]},
                    {
                    
                    RowBox[{"\<\"ComputedPropertiesMinSampleNumber\"\>", 
                    "\[Rule]", "1000"}]},
                    {
                    
                    RowBox[{"\<\"DistributionPostProcessing\"\>", "\[Rule]", 
                    "Automatic"}]},
                    {
                    RowBox[{"FeatureExtractor", "\[Rule]", "Identity"}]},
                    {
                    RowBox[{"FeatureNames", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FeatureTypes", "\[Rule]", "Automatic"}]},
                    {
                    
                    RowBox[{"\<\"FeatureWeights\"\>", "\[Rule]", 
                    "Automatic"}]},
                    {
                    RowBox[{
                    "IndeterminateThreshold", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MissingValueSynthesis", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"NominalVariables", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PerformanceGoal", "\[Rule]", "Automatic"}]},
                    {
                    
                    RowBox[{"\<\"PredictionName\"\>", "\[Rule]", 
                    "Automatic"}]},
                    {
                    RowBox[{"\<\"ProcessorCaching\"\>", "\[Rule]", "True"}]},
                    {
                    RowBox[{"RandomSeeding", "\[Rule]", "1234"}]},
                    {
                    RowBox[{"RecalibrationFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"\<\"RecordLog\"\>", "\[Rule]", "True"}]},
                    {
                    RowBox[{"TargetDevice", "\[Rule]", "\<\"CPU\"\>"}]},
                    {
                    
                    RowBox[{"\<\"TieBreakerFunction\"\>", "\[Rule]", 
                    "RandomChoice"}]},
                    {
                    RowBox[{"TimeGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "TrainingProgressCheckpointing", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "TrainingProgressReporting", "\[Rule]", "Automatic"}]},
                    {
                    
                    RowBox[{"\<\"TrainingSizeRatio\"\>", "\[Rule]", 
                    "Automatic"}]},
                    {
                    RowBox[{"UtilityFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ValidationSet", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Weights", "\[Rule]", "Automatic"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "29", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AcceptanceThreshold", "\[Rule]", "Automatic"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "29", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Classify\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Classify",
              ButtonNote->"paclet:ref/Classify"],
             "\"paclet:ref/Classify\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Classify\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"example\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"class\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"example\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"class\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\"]\\\"}]\\) generates a \
\\!\\(\\*RowBox[{\\\"ClassifierFunction\\\", \\\"[\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\"]\\\"}]\\) based on the examples and \
classes given.\\n\\!\\(\\*RowBox[{\\\"Classify\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"example\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"example\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"class\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"class\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) also generates a \\!\\(\\*RowBox[{\
\\\"ClassifierFunction\\\", \\\"[\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"], \\\"]\\\"}]\\) based on the examples and classes \
given.\\n\\!\\(\\*RowBox[{\\\"Classify\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftAssociation]\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"class\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", RowBox[{\\\"{\
\\\", RowBox[{SubscriptBox[StyleBox[\\\"example\\\", \\\"TI\\\"], StyleBox[\\\
\"11\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"example\\\", \
\\\"TI\\\"], StyleBox[\\\"12\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"class\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"example\\\", \\\"TI\\\"], StyleBox[\\\"21\\\
\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"\
\[RightAssociation]\\\"}], \\\"]\\\"}]\\) generates a \
\\!\\(\\*RowBox[{\\\"ClassifierFunction\\\", \\\"[\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\"]\\\"}]\\) based on an association of \
classes with their examples.\\n\\!\\(\\*RowBox[{\\\"Classify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"training\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"data\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) attempts to classify \\!\
\\(\\*StyleBox[\\\"data\\\", \\\"TI\\\"]\\) using a classifier function \
deduced from the training set given.\\n\\!\\(\\*RowBox[{\\\"Classify\\\", \
\\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"name\\\\\\\",\\\\\
\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"data\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) attempts to classify \\!\
\\(\\*StyleBox[\\\"data\\\", \\\"TI\\\"]\\) using the built-in classifier \
function represented by \\\"\\!\\(\\*StyleBox[\\\"name\\\", \
\\\"TI\\\"]\\)\\\".\\n\\!\\(\\*RowBox[{\\\"Classify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"prop\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the specified property of the \
classification associated with \\!\\(\\*StyleBox[\\\"data\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Classify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"classifier\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"opts\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) takes an existing \
classifier function and modifies it with the new options given.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Classify\", \"[\", RowBox[{\"{\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\"example\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \"\[Rule]\", SubscriptBox[StyleBox[\"class\", \"TI\"], StyleBox[\"1\
\", \"TR\"]]}], \",\", RowBox[{SubscriptBox[StyleBox[\"example\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \"\[Rule]\", SubscriptBox[StyleBox[\"class\", \
\"TI\"], StyleBox[\"2\", \"TR\"]]}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"}\"}], \"]\"}]\) generates a \
\!\(\*RowBox[{\"ClassifierFunction\", \"[\", StyleBox[\"\[Ellipsis]\", \
\"TR\"], \"]\"}]\) based on the examples and classes given.\n\
\!\(\*RowBox[{\"Classify\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"example\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"example\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"\[Rule]\", RowBox[{\"{\
\", RowBox[{SubscriptBox[StyleBox[\"class\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"class\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
also generates a \!\(\*RowBox[{\"ClassifierFunction\", \"[\", StyleBox[\"\
\[Ellipsis]\", \"TR\"], \"]\"}]\) based on the examples and classes given.\n\
\!\(\*RowBox[{\"Classify\", \"[\", RowBox[{\"\[LeftAssociation]\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\"class\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \"\[Rule]\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"example\
\", \"TI\"], StyleBox[\"11\", \"TR\"]], \",\", \
SubscriptBox[StyleBox[\"example\", \"TI\"], StyleBox[\"12\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \",\", \
RowBox[{SubscriptBox[StyleBox[\"class\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\"\[Rule]\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"example\", \
\"TI\"], StyleBox[\"21\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"}\"}]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"\
\[RightAssociation]\"}], \"]\"}]\) generates a \
\!\(\*RowBox[{\"ClassifierFunction\", \"[\", StyleBox[\"\[Ellipsis]\", \
\"TR\"], \"]\"}]\) based on an association of classes with their examples.\n\
\!\(\*RowBox[{\"Classify\", \"[\", RowBox[{StyleBox[\"training\", \"TI\"], \
\",\", StyleBox[\"data\", \"TI\"]}], \"]\"}]\) attempts to classify \
\!\(\*StyleBox[\"data\", \"TI\"]\) using a classifier function deduced from \
the training set given.\n\!\(\*RowBox[{\"Classify\", \"[\", RowBox[{StyleBox[\
\"\\\"\\!\\(\\*StyleBox[\\\"name\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \",\", StyleBox[\"data\", \"TI\"]}], \"]\"}]\) \
attempts to classify \!\(\*StyleBox[\"data\", \"TI\"]\) using the built-in \
classifier function represented by \"\!\(\*StyleBox[\"name\", \"TI\"]\)\".\n\
\!\(\*RowBox[{\"Classify\", \"[\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \
\",\", StyleBox[\"data\", \"TI\"], \",\", StyleBox[\"prop\", \"TI\"]}], \
\"]\"}]\) gives the specified property of the classification associated with \
\!\(\*StyleBox[\"data\", \"TI\"]\).\n\!\(\*RowBox[{\"Classify\", \"[\", \
RowBox[{StyleBox[\"classifier\", \"TI\"], \",\", StyleBox[\"opts\", \
\"TI\"]}], \"]\"}]\) takes an existing classifier function and modifies it \
with the new options given.", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/Classify", "Web" -> 
      "http://reference.wolfram.com/language/ref/Classify.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     AcceptanceThreshold -> Automatic, AnomalyDetector -> None, 
      "BatchProcessing" -> Automatic, ClassPriors -> Automatic, 
      "ComputedPropertiesMinSampleNumber" -> 1000, 
      "DistributionPostProcessing" -> Automatic, FeatureExtractor -> Identity,
       FeatureNames -> Automatic, FeatureTypes -> Automatic, "FeatureWeights" -> 
      Automatic, IndeterminateThreshold -> Automatic, Method -> Automatic, 
      MissingValueSynthesis -> Automatic, NominalVariables -> Automatic, 
      PerformanceGoal -> Automatic, "PredictionName" -> Automatic, 
      "ProcessorCaching" -> True, RandomSeeding -> 1234, 
      RecalibrationFunction -> Automatic, "RecordLog" -> True, TargetDevice -> 
      "CPU", "TieBreakerFunction" -> RandomChoice, TimeGoal -> Automatic, 
      TrainingProgressCheckpointing -> None, TrainingProgressReporting -> 
      Automatic, "TrainingSizeRatio" -> Automatic, UtilityFunction -> 
      Automatic, ValidationSet -> Automatic, Weights -> Automatic}, 
    "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`Classify"|>, False]]], "Output",
 CellChangeTimes->{3.902886469341454*^9, 3.903003356603891*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"4103c2f8-bb86-4191-8b5b-c46e0f89bd2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LanguageIdentify", "[", "\"\<Das ist ein Hund.\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.90300327321325*^9, 3.903003296988576*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"99e629ab-2955-4af6-8241-803cffae388d"],

Cell[BoxData[
 TemplateBox[{"\"German\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
   "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
  "Entity"]], "Output",
 CellChangeTimes->{{3.903003273843623*^9, 3.90300329765383*^9}, 
   3.903003356625106*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"a7877508-f4a2-4a6e-975d-438ad695efd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"\"\<Language\>\"", ",", "\"\<Das ist ein Hund.\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.903003331795116*^9, 3.90300333179805*^9}, {
  3.903003388962036*^9, 3.903003420208948*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"e2f23ef6-c157-488e-a6dd-e82ca1013805"],

Cell[BoxData[
 TemplateBox[{"\"German\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
   "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
  "Entity"]], "Output",
 CellChangeTimes->{{3.9030033322201157`*^9, 3.903003356640418*^9}, {
  3.9030033912698727`*^9, 3.903003420587967*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"754cdbd2-3103-4981-b63d-48524ee20882"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{780, 620.25},
WindowMargins->{{70.5, Automatic}, {Automatic, 124.5}},
FrontEndVersion->"13.3 for Linux x86 (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c11c15e1-8e25-4f17-a872-a056e9c7c3f1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 164, 3, 53, "Subtitle",ExpressionUUID->"d5f1d764-9080-45c6-81bf-017ca4f32bd9"],
Cell[CellGroupData[{
Cell[769, 29, 385, 8, 29, "Input",ExpressionUUID->"c1d3df72-0e61-477f-9882-ddacb08e9496"],
Cell[1157, 39, 22372, 370, 74, "Output",ExpressionUUID->"109b6a44-8b8e-4e8f-8b11-9df3a86f6b1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23566, 414, 323, 5, 29, "Input",ExpressionUUID->"de5008d6-33e5-4e53-b6ee-58f933b16d72"],
Cell[23892, 421, 485, 6, 114, "Output",ExpressionUUID->"fb1065cb-7dc4-4cbc-9ea3-1974c21813b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24414, 432, 242, 4, 29, "Input",ExpressionUUID->"63df5600-c44c-4888-853c-8e14abdfae13"],
Cell[24659, 438, 390, 8, 45, "Output",ExpressionUUID->"ff3ad3e8-3899-4220-b62e-13495fcb0676"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25086, 451, 182, 2, 29, "Input",ExpressionUUID->"2f1696ef-e9b5-453d-8eb2-03dda48517c5"],
Cell[25271, 455, 22321, 370, 74, "Output",ExpressionUUID->"020ee0ef-51a6-4417-b0ef-6a9d0757871d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47629, 830, 320, 5, 29, "Input",ExpressionUUID->"23d4abd0-e631-44be-a9de-0e3cbb3469f8"],
Cell[47952, 837, 567, 11, 45, "Output",ExpressionUUID->"f86bcd12-41e5-4135-a10d-af8726aa54ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48556, 853, 221, 3, 29, "Input",ExpressionUUID->"39bf6e39-da98-4c6c-bd28-27ba5dd7770f"],
Cell[48780, 858, 1168, 17, 58, "Output",ExpressionUUID->"11e9dc33-ddc1-4af9-a0ab-12f6ff261de5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49985, 880, 283, 5, 29, "Input",ExpressionUUID->"b6de2c5b-10d4-4d83-8104-6ef0021f582c"],
Cell[50271, 887, 456, 8, 54, "Output",ExpressionUUID->"b84dcbe7-d07a-480d-bb00-07b338a66487"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50776, 901, 159, 3, 53, "Subtitle",ExpressionUUID->"a2b837fc-e98f-4a20-b58b-d11b80e2ebc4"],
Cell[CellGroupData[{
Cell[50960, 908, 196, 3, 29, "Input",ExpressionUUID->"84b4e292-d121-4457-9055-aca3df3fd42f"],
Cell[51159, 913, 31415, 630, 353, "Output",ExpressionUUID->"4103c2f8-bb86-4191-8b5b-c46e0f89bd2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82611, 1548, 239, 4, 31, "Input",ExpressionUUID->"99e629ab-2955-4af6-8241-803cffae388d"],
Cell[82853, 1554, 389, 8, 45, "Output",ExpressionUUID->"a7877508-f4a2-4a6e-975d-438ad695efd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83279, 1567, 319, 6, 31, "Input",ExpressionUUID->"e2f23ef6-c157-488e-a6dd-e82ca1013805"],
Cell[83601, 1575, 417, 8, 45, "Output",ExpressionUUID->"754cdbd2-3103-4981-b63d-48524ee20882"]
}, Open  ]]
}, Open  ]]
}
]
*)

